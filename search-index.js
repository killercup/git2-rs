var searchIndex = {};
searchIndex['git2-curl'] = {"items":[[0,"","git2-curl","A crate for using libcurl as a backend for HTTP git requests with git2-rs."],[5,"register","","Register the libcurl backend for HTTP requests made by libgit2."]],"paths":[]};
searchIndex['git2'] = {"items":[[0,"","git2","# libgit2 bindings for Rust"],[3,"Blob","","A structure to represent a git [blob][1]"],[3,"Branch","","A structure to represent a git [branch][1]"],[3,"Branches","","An iterator over the branches inside of a repository."],[3,"Buf","","A structure to wrap an intermediate buffer used by libgit2."],[3,"Commit","","A structure to represent a git [commit][1]"],[3,"Parents","","An iterator over the parent commits of a commit."],[3,"Config","","A structure representing a git configuration key/value store"],[3,"ConfigEntry","","A struct representing a certain entry owned by a `Config` instance."],[3,"ConfigEntries","","An iterator over the `ConfigEntry` values of a `Config` structure."],[3,"Cred","","A structure to represent git credentials in libgit2."],[3,"CredentialHelper","","Management of the gitcredentials(7) interface."],[12,"username","","A public field representing the currently discovered username from\nconfiguration.",0],[3,"Diff","","The diff object that contains all individual file deltas."],[3,"DiffDelta","","Description of changes to one entry."],[3,"DiffFile","","Description of one side of a delta."],[3,"DiffOptions","","Structure describing options about how the diff should be executed."],[3,"Deltas","","An iterator over the diffs in a delta"],[3,"DiffLine","","Structure describing a line (or data span) of a diff."],[3,"DiffHunk","","Structure describing a hunk of a diff."],[3,"DiffStats","","Structure describing a hunk of a diff."],[3,"DiffFindOptions","","Control behavior of rename and copy detection"],[3,"Error","","A structure to represent errors coming out of libgit2."],[3,"Index","","A structure to represent a git [index][1]"],[3,"IndexEntry","","A structure to represent an entry or a file inside of an index."],[12,"ctime","","",1],[12,"mtime","","",1],[12,"dev","","",1],[12,"ino","","",1],[12,"mode","","",1],[12,"uid","","",1],[12,"gid","","",1],[12,"file_size","","",1],[12,"id","","",1],[12,"flags","","",1],[12,"flags_extended","","",1],[12,"path","","",1],[3,"IndexEntries","","An iterator over the entries in an index"],[3,"Note","","A structure representing a [note][note] in git."],[3,"Notes","","An iterator over all of the notes within a repository."],[3,"Object","","A structure to represent a git [object][1]"],[3,"Oid","","Unique identity of any object (commit, tree, blob, tag)."],[3,"Pathspec","","Structure representing a compiled pathspec used for matching against various\nstructures."],[3,"PathspecMatchList","","List of filenames matching a pathspec."],[3,"PathspecFailedEntries","","Iterator over the failed list of pathspec items that did not match."],[3,"PathspecDiffEntries","","Iterator over the matching diff deltas."],[3,"PathspecEntries","","Iterator over the matched paths in a pathspec."],[3,"Push","","A structure to represent a pending push operation to a remote."],[3,"PushStatus","","A status representing the result of updating a remote reference."],[12,"reference","","The reference that was updated as part of a push.",2],[12,"message","","If `None`, the reference was updated successfully, otherwise a message\nexplaining why it could not be updated is provided.",2],[3,"Reference","","A structure to represent a git [reference][1]."],[3,"References","","An iterator over the references in a repository."],[3,"ReferenceNames","","An iterator over the names of references in a repository."],[3,"Reflog","","A reference log of a git repository."],[3,"ReflogEntry","","An entry inside the reflog of a repository"],[3,"ReflogIter","","An iterator over the entries inside of a reflog."],[3,"Refspec","","A structure to represent a git [refspec][1]."],[3,"Remote","","A structure representing a [remote][1] of a git repository."],[3,"Refspecs","","An iterator over the refspecs that a remote contains."],[3,"RemoteHead","","Description of a reference advertised bya remote server, given out on calls\nto `list`."],[3,"RemoteCallbacks","","A structure to contain the callbacks which are invoked when a repository is\nbeing updated or downloaded."],[3,"Progress","","Struct representing the progress by an in-flight transfer."],[3,"Repository","","An owned git repository, representing all state associated with the\nunderlying filesystem."],[3,"RepositoryInitOptions","","Options which can be used to configure how a repository is initialized"],[3,"Revspec","","A revspec represents a range of revisions within a repository."],[3,"Revwalk","","A revwalk allows traversal of the commit graph defined by including one or\nmore leaves and excluding one or more roots."],[3,"Signature","","A Signature is used to indicate authorship of various actions throughout the\nlibrary."],[3,"StatusOptions","","Options that can be provided to `repo.statuses()` to control how the status\ninformation is gathered."],[3,"Statuses","","A container for a list of status information about a repository."],[3,"StatusIter","","An iterator over the statuses in a `Statuses` instance."],[3,"StatusEntry","","A structure representing an entry in the `Statuses` structure."],[3,"Submodule","","A structure to represent a git [submodule][1]"],[3,"Tag","","A structure to represent a git [tag][1]"],[3,"Time","","Time in a signature"],[3,"IndexTime","","Time structure used in a git index entry."],[3,"Tree","","A structure to represent a git [tree][1]"],[3,"TreeEntry","","A structure representing an entry inside of a tree. An entry is borrowed\nfrom a tree."],[3,"TreeIter","","An iterator over the entries in a tree."],[3,"Sort","","\nOrderings that may be specified for Revwalk iteration.\n"],[3,"CredentialType","","\nTypes of credentials that can be requested by a credential callback.\n"],[3,"IndexAddOption","","\nFlags for APIs that add files matching pathspec\n"],[3,"RevparseMode","","\nFlags for the return value of `Repository::revparse`\n"],[3,"Status","","\nFlags for repository status\n"],[3,"RepositoryInitMode","","\nMode options for RepositoryInitOptions\n"],[3,"SubmoduleStatus","","\nReturn codes for submodule status."],[3,"PathspecFlags","","\n"],[3,"DiffStatsFormat","","/// Formatting options for diff stats"],[4,"StatusShow","","Enumeration of possible methods of what can be shown through a status\noperation."],[13,"Index","","Only gives status based on HEAD to index comparison, not looking at\nworking directory changes.",3],[13,"Workdir","","Only gives status based on index to working directory comparison, not\ncomparing the index to the HEAD.",3],[13,"IndexAndWorkdir","","The default, this roughly matches `git status --porcelain` regarding\nwhich files are included and in what order.",3],[4,"ErrorCode","","An enumeration of possible errors that can happen when working with a git\nrepository."],[13,"GenericError","","Generic error",4],[13,"NotFound","","Requested object could not be found",4],[13,"Exists","","Object exists preventing operation",4],[13,"Ambiguous","","More than one object matches",4],[13,"BufSize","","Output buffer too short to hold data",4],[13,"User","","Operation not allowed on bare repository",4],[13,"BareRepo","","Operation not allowed on bare repository",4],[13,"UnbornBranch","","HEAD refers to branch with no commits",4],[13,"Unmerged","","Merge in progress prevented operation",4],[13,"NotFastForward","","Reference was not fast-forwardable",4],[13,"InvalidSpec","","Name/ref spec was not in a valid format",4],[13,"MergeConflict","","Merge conflicts prevented operation",4],[13,"Locked","","Lock file prevented operation",4],[13,"Modified","","Reference value does not match expected",4],[4,"RepositoryState","","A listing of the possible states that a repository can be in."],[13,"Clean","","",5],[13,"Merge","","",5],[13,"Revert","","",5],[13,"CherryPick","","",5],[13,"Bisect","","",5],[13,"Rebase","","",5],[13,"RebaseInteractive","","",5],[13,"RebaseMerge","","",5],[13,"ApplyMailbox","","",5],[13,"ApplyMailboxOrRebase","","",5],[4,"Direction","","An enumeration of the possible directions for a remote."],[13,"Fetch","","Data will be fetched (read) from this remote.",6],[13,"Push","","Data will be pushed (written) to this remote.",6],[4,"ResetType","","An enumeration of the operations that can be performed for the `reset`\nmethod on a `Repository`."],[13,"Soft","","Move the head to the given commit.",7],[13,"Mixed","","Soft plus reset the index to the commit.",7],[13,"Hard","","Mixed plus changes in the working tree are discarded.",7],[4,"ObjectType","","An enumeration all possible kinds objects may have."],[13,"Any","","An object which corresponds to a any git object",8],[13,"Commit","","An object which corresponds to a git commit",8],[13,"Tree","","An object which corresponds to a git tree",8],[13,"Blob","","An object which corresponds to a git blob",8],[13,"Tag","","An object which corresponds to a git tag",8],[4,"BranchType","","An enumeration for the possible types of branches"],[13,"Local","","A local branch not on a remote.",9],[13,"Remote","","A branch for a remote.",9],[4,"ConfigLevel","","An enumeration of the possible priority levels of a config file."],[13,"System","","System-wide configuration file, e.g. /etc/gitconfig",10],[13,"XDG","","XDG-compatible configuration file, e.g. ~/.config/git/config",10],[13,"Global","","User-specific configuration, e.g. ~/.gitconfig",10],[13,"Local","","Reopsitory specific config, e.g. $PWD/.git/config",10],[13,"App","","Application specific configuration file",10],[13,"Highest","","Highest level available",10],[4,"Delta","","What type of change is described by a `DiffDelta`?"],[13,"Unmodified","","No changes",11],[13,"Added","","Entry does not exist in old version",11],[13,"Deleted","","Entry does not exist in new version",11],[13,"Modified","","Entry content changed between old and new",11],[13,"Renamed","","Entry was renamed wbetween old and new",11],[13,"Copied","","Entry was copied from another old entry",11],[13,"Ignored","","Entry is ignored item in workdir",11],[13,"Untracked","","Entry is untracked item in workdir",11],[13,"Typechange","","Type of entry changed between old and new",11],[13,"Unreadable","","Entry is unreadable",11],[4,"DiffFormat","","Possible output formats for diff data"],[13,"Patch","","full git diff",12],[13,"PatchHeader","","just the headers of the patch",12],[13,"Raw","","like git diff --raw",12],[13,"NameOnly","","like git diff --name-only",12],[13,"NameStatus","","like git diff --name-status",12],[11,"into_c_string","collections::string","",13],[11,"into_c_string","std::ffi::c_str","",14],[11,"into_c_string","std::old_path::posix","",15],[11,"into_c_string","std::path","",16],[11,"into_c_string","std::ffi::os_str","",17],[0,"build","git2","Builder-pattern objects for configuration various git operations."],[3,"RepoBuilder","git2::build","A builder struct which is used to build configuration for cloning a new git\nrepository."],[3,"CheckoutBuilder","","A builder struct for configuring checkouts of a repository."],[6,"Progress","","Checkout progress notification callback."],[11,"new","","Creates a new repository builder with all of the default configuration.",18],[11,"bare","","Indicate whether the repository will be cloned as a bare repository or\nnot.",18],[11,"branch","","Specify the name of the branch to check out after the clone.",18],[11,"signature","","Specify the identity that will be used when updating the reflog.",18],[11,"local","","Set the flag for bypassing the git aware transport mechanism for local\npaths.",18],[11,"hardlinks","","Set the flag for whether hardlinks are used when using a local git-aware\ntransport mechanism.",18],[11,"with_checkout","","Configure the checkout which will be performed by consuming a checkout\nbuilder.",18],[11,"remote_callbacks","","Set the callbacks which will be used to monitor the download progress.",18],[11,"clone","","Clone a remote repository.",18],[11,"new","","Creates a new builder for checkouts with all of its default\nconfiguration.",19],[11,"dry_run","","Indicate that this checkout should perform a dry run by checking for\nconflicts but not make any actual changes.",19],[11,"force","","Take any action necessary to get the working directory to match the\ntarget including potentially discarding modified files.",19],[11,"safe","","Indicate that the checkout should be performed safely, allowing new\nfiles to be created but not overwriting extisting files or changes.",19],[11,"allow_conflicts","","In safe mode, apply safe file updates even when there are conflicts\ninstead of canceling the checkout.",19],[11,"remove_untracked","","Remove untracked files from the working dir.",19],[11,"remove_ignored","","Remove ignored files from the working dir.",19],[11,"update_only","","Only update the contents of files that already exist.",19],[11,"update_index","","Prevents checkout from writing the updated files' information to the\nindex.",19],[11,"refresh","","Indicate whether the index and git attributes should be refreshed from\ndisk before any operations.",19],[11,"skip_unmerged","","Skip files with unmerged index entries.",19],[11,"use_ours","","Indicate whether the checkout should proceed on conflicts by using the\nstage 2 version of the file (\"ours\").",19],[11,"use_theirs","","Indicate whether the checkout should proceed on conflicts by using the\nstage 3 version of the file (\"theirs\").",19],[11,"overwrite_ignored","","Indicate whether ignored files should be overwritten during the checkout.",19],[11,"conflict_style_merge","","Indicate whether a normal merge file should be written for conflicts.",19],[11,"conflict_style_diff3","","Indicates whether to include common ancestor data in diff3 format files\nfor conflicts.",19],[11,"disable_filters","","Indicate whether to apply filters like CRLF conversion.",19],[11,"dir_perm","","Set the mode with which new directories are created.",19],[11,"file_perm","","Set the mode with which new files are created.",19],[11,"path","","Add a path to be checked out.",19],[11,"target_dir","","Set the directory to check out to",19],[11,"ancestor_label","","The name of the common ancestor side of conflicts",19],[11,"our_label","","The name of the common our side of conflicts",19],[11,"their_label","","The name of the common their side of conflicts",19],[11,"progress","","Set a callback to receive notifications of checkout progress.",19],[11,"configure","","Configure a raw checkout options based on this configuration.",19],[0,"cert","git2","Certificate types which are passed to `CertificateCheck` in\n`RemoteCallbacks`."],[3,"Cert","git2::cert","A certificate for a remote connection, viewable as one of `CertHostkey` or\n`CertX509` currently."],[3,"CertHostkey","","Hostkey information taken from libssh2"],[3,"CertX509","","X.509 certificate information"],[11,"as_hostkey","","Attempt to view this certificate as an SSH hostkey.",20],[11,"as_x509","","Attempt to view this certificate as an X.509 certificate.",20],[11,"hash_md5","","Returns the md5 hash of the hostkey, if available.",21],[11,"hash_sha1","","Returns the SHA-1 hash of the hostkey, if available.",21],[11,"data","","Return the X.509 certificate data as a byte slice",22],[0,"string_array","git2","Bindings to libgit2's raw git_strarray type"],[3,"StringArray","git2::string_array","A string array structure used by libgit2"],[3,"Iter","","A forward iterator over the strings of an array, casted to `&str`."],[3,"IterBytes","","A forward iterator over the strings of an array, casted to `&[u8]`."],[11,"get","","Returns None if the i'th string is not utf8 or if i is out of bounds.",23],[11,"get_bytes","","Returns None if `i` is out of bounds.",23],[11,"iter","","Returns an iterator over the strings contained within this array.",23],[11,"iter_bytes","","Returns an iterator over the strings contained within this array,\nyielding byte slices.",23],[11,"len","","Returns the number of strings in this array.",23],[6,"Item","",""],[11,"next","","",24],[11,"size_hint","","",24],[11,"next_back","","",24],[6,"Item","",""],[11,"next","","",25],[11,"size_hint","","",25],[11,"next_back","","",25],[11,"drop","","",23],[0,"transport","git2","Interfaces for adding custom transports to libgit2"],[3,"Transport","git2::transport","A transport is a structure which knows how to transfer data to and from a\nremote."],[4,"Service","","Actions that a smart transport can ask a subtransport to perform"],[13,"UploadPackLs","","",26],[13,"UploadPack","","",26],[13,"ReceivePackLs","","",26],[13,"ReceivePack","","",26],[5,"register","","Add a custom transport definition, to be used in addition to the built-in\nset of transports that come with libgit2."],[8,"SmartSubtransport","","Interfaced used by smart transports."],[10,"action","","Indicates that this subtransport will be performing the specified action\non the specified URL.",27],[10,"close","","Terminates a connection with the remote.",27],[8,"SmartSubtransportStream","","An instance of a stream over which a smart transport will communicate with a\nremote."],[11,"smart","","Creates a new transport which will use the \"smart\" transport protocol\nfor transferring data.",28],[11,"drop","","",28],[11,"id","git2","Get the id (SHA1) of a repository blob",29],[11,"is_binary","","Determine if the blob content is most certainly binary or not.",29],[11,"content","","Get the content of this blob.",29],[11,"drop","","",29],[11,"wrap","","Creates a new branch from a reference",30],[11,"get","","Gain access to the reference that is this branch",30],[11,"into_reference","","Take ownership of the underlying reference.",30],[11,"delete","","Delete an existing branch reference.",30],[11,"is_head","","Determine if the current local branch is pointed at by HEAD.",30],[11,"rename","","Move/rename an existing local branch reference.",30],[11,"name","","Return the name of the given local or remote branch.",30],[11,"name_bytes","","Return the name of the given local or remote branch.",30],[11,"upstream","","Return the reference supporting the remote tracking branch, given a\nlocal branch reference.",30],[11,"set_upstream","","Set the upstream configuration for a given local branch.",30],[11,"from_raw","","Creates a new iterator from the raw pointer given.",31],[11,"next","","",31],[11,"drop","","",31],[11,"new","","Creates a new empty buffer.",32],[11,"as_str","","Attempt to view this buffer as a string slice.",32],[11,"deref","","",32],[11,"deref_mut","","",32],[11,"drop","","",32],[11,"id","","Get the id (SHA1) of a repository commit",33],[11,"tree_id","","Get the id of the tree pointed to by this commit.",33],[11,"tree","","Get the tree pointed to by a commit.",33],[11,"raw","","Get access to the underlying raw pointer.",33],[11,"message","","Get the full message of a commit.",33],[11,"message_bytes","","Get the full message of a commit as a byte slice.",33],[11,"message_encoding","","Get the encoding for the message of a commit, as a string representing a\nstandard encoding name.",33],[11,"message_raw","","Get the full raw message of a commit.",33],[11,"message_raw_bytes","","Get the full raw message of a commit.",33],[11,"raw_header","","Get the full raw text of the commit header.",33],[11,"raw_header_bytes","","Get the full raw text of the commit header.",33],[11,"summary","","Get the short \"summary\" of the git commit message.",33],[11,"summary_bytes","","Get the short \"summary\" of the git commit message.",33],[11,"time","","Get the commit time (i.e. committer time) of a commit.",33],[11,"parents","","Creates a new iterator over the parents of this commit.",33],[11,"parent_ids","","Creates a new iterator over the parents of this commit.",33],[11,"author","","Get the author of this commit.",33],[11,"committer","","Get the committer of this commit.",33],[11,"amend","","Amend this existing commit with all non-`None` values",33],[11,"parent","","Get the specified parent of the commit.",33],[11,"parent_id","","Get the specified parent id of the commit.",33],[11,"next","","",34],[11,"size_hint","","",34],[11,"next_back","","",34],[11,"drop","","",33],[11,"new","","Allocate a new configuration object",35],[11,"open","","Create a new config instance containing a single on-disk file",35],[11,"open_default","","Open the global, XDG and system configuration files",35],[11,"find_global","","Locate the path to the global configuration file",35],[11,"find_system","","Locate the path to the system configuration file",35],[11,"find_xdg","","Locate the path to the global xdg compatible configuration file",35],[11,"add_file","","Add an on-disk config file instance to an existing config",35],[11,"remove","","Delete a config variable from the config file with the highest level\n(usually the local one).",35],[11,"get_bool","","Get the value of a boolean config variable.",35],[11,"get_i32","","Get the value of an integer config variable.",35],[11,"get_i64","","Get the value of an integer config variable.",35],[11,"get_str","","Get the value of a string config variable.",35],[11,"get_bytes","","Get the value of a string config variable as a byte slice.",35],[11,"get_entry","","Get the ConfigEntry for a config variable.",35],[11,"entries","","Iterate over all the config variables",35],[11,"open_global","","Open the global/XDG configuration file according to git's rules",35],[11,"open_level","","Build a single-level focused config object from a multi-level one.",35],[11,"set_bool","","Set the value of a boolean config variable in the config file with the\nhighest level (usually the local one).",35],[11,"set_i32","","Set the value of an integer config variable in the config file with the\nhighest level (usually the local one).",35],[11,"set_i64","","Set the value of an integer config variable in the config file with the\nhighest level (usually the local one).",35],[11,"set_str","","Set the value of a string config variable in the config file with the\nhighest level (usually the local one).",35],[11,"snapshot","","Create a snapshot of the configuration",35],[11,"drop","","",35],[11,"name","","Gets the name of this entry.",36],[11,"name_bytes","","Gets the name of this entry as a byte slice.",36],[11,"value","","Gets the value of this entry.",36],[11,"value_bytes","","Gets the value of this entry as a byte slice.",36],[11,"level","","Gets the configuration level of this entry.",36],[11,"drop","","",37],[11,"default","","Create a \"default\" credential usable for Negotiate mechanisms like NTLM\nor Kerberos authentication.",38],[11,"ssh_key_from_agent","","Create a new ssh key credential object used for querying an ssh-agent.",38],[11,"ssh_key","","Create a new passphrase-protected ssh key credential object.",38],[11,"userpass_plaintext","","Create a new plain-text username and password credential object.",38],[11,"credential_helper","","Attempt to read `credential.helper` according to gitcredentials(7) [1]",38],[11,"has_username","","Check whether a credential object contains username information.",38],[11,"credtype","","Return the type of credentials that this object represents.",38],[11,"unwrap","","Unwrap access to the underlying raw pointer, canceling the destructor",38],[11,"drop","","",38],[11,"new","","Create a new credential helper object which will be used to probe git's\nlocal credential configuration.",0],[11,"username","","Set the username that this credential helper will query with.",0],[11,"config","","Query the specified configuration object to discover commands to\nexecute, usernames to query, etc.",0],[11,"execute","","Execute this helper, attempting to discover a username/password pair.",0],[11,"tree_to_tree","","Create a diff with the difference between two tree objects.",39],[11,"tree_to_index","","Create a diff between a tree and repository index.",39],[11,"index_to_workdir","","Create a diff between the repository index and the workdir directory.",39],[11,"tree_to_workdir","","Create a diff between a tree and the working directory.",39],[11,"tree_to_workdir_with_index","","Create a diff between a tree and the working directory using index data\nto account for staged deletes, tracked files, etc.",39],[11,"merge","","Merge one diff into another.",39],[11,"deltas","","Returns an iterator over the deltas in this diff.",39],[11,"get_delta","","Return the diff delta for an entry in the diff list.",39],[11,"is_sorted_icase","","Check if deltas are sorted case sensitively or insensitively.",39],[11,"print","","Iterate over a diff generating formatted text output.",39],[11,"stats","","Accumulate diff statistics for all patches.",39],[11,"find_similar","","Transform a diff marking file renames, copies, etc.",39],[11,"drop","","",39],[11,"nfiles","","Returns the number of files in this delta.",40],[11,"status","","Returns the status of this entry",40],[11,"old_file","","Return the file which represents the \"from\" side of the diff.",40],[11,"new_file","","Return the file which represents the \"to\" side of the diff.",40],[11,"id","","Returns the Oid of this item.",41],[11,"path_bytes","","Returns the path, in bytes, of the entry relative to the working\ndirectory of the repository.",41],[11,"path","","Returns the path of the entry relative to the working directory of the\nrepository.",41],[11,"size","","Returns the size of this entry, in bytes",41],[11,"new","","Creates a new set of empty diff options.",42],[11,"reverse","","Flag indicating whether the sides of the diff will be reversed.",42],[11,"include_ignored","","Flag indicating whether ignored files are included.",42],[11,"recurse_ignored_dirs","","Flag indicating whether ignored directories are traversed deeply or not.",42],[11,"include_untracked","","Flag indicating whether untracked files are in the diff",42],[11,"recurse_untracked_dirs","","Flag indicating whether untracked directories are deeply traversed or\nnot.",42],[11,"include_unmodified","","Flag indicating whether unmodified files are in the diff.",42],[11,"include_typechange","","If entrabled, then Typechange delta records are generated.",42],[11,"include_typechange_trees","","Event with `include_typechange`, the tree treturned generally shows a\ndeleted blow. This flag correctly labels the tree transitions as a\ntypechange record with the `new_file`'s mode set to tree.",42],[11,"ignore_filemode","","Flag indicating whether file mode changes are ignored.",42],[11,"ignore_submodules","","Flag indicating whether all submodules should be treated as unmodified.",42],[11,"ignore_case","","Flag indicating whether case insensitive filenames should be used.",42],[11,"disable_pathspec_match","","If pathspecs are specified, this flag means that they should be applied\nas an exact match instead of a fnmatch pattern.",42],[11,"skip_binary_check","","Disable updating the `binary` flag in delta records. This is useful when\niterating over a diff if you don't need hunk and data callbacks and want\nto avoid having to load a file completely.",42],[11,"enable_fast_untracked_dirs","","When diff finds an untracked directory, to match the behavior of core\nGit, it scans the contents for ignored and untracked files. If all\ncontents are ignored, then the directory is ignored; if any contents are\nnot ignored, then the directory is untracked. This is extra work that\nmay not matter in many cases.",42],[11,"update_index","","When diff finds a file in the working directory with stat information\ndifferent from the index, but the OID ends up being the same, write the\ncorrect stat information into the index. Note: without this flag, diff\nwill always leave the index untouched.",42],[11,"include_unreadable","","Include unreadable files in the diff",42],[11,"include_unreadable_as_untracked","","Include unreadable files in the diff",42],[11,"force_text","","Treat all files as text, disabling binary attributes and detection.",42],[11,"force_binary","","Treat all files as binary, disabling text diffs",42],[11,"ignore_whitespace","","Ignore all whitespace",42],[11,"ignore_whitespace_change","","Ignore changes in the amount of whitespace",42],[11,"ignore_whitespace_eol","","Ignore whitespace at tend of line",42],[11,"show_untracked_content","","When generating patch text, include the content of untracked files.",42],[11,"show_unmodified","","When generating output, include the names of unmodified files if they\nare included in the `Diff`. Normally these are skipped in the formats\nthat list files (e.g. name-only, name-status, raw). Even with this these\nwill not be included in the patch format.",42],[11,"patience","","Use the \"patience diff\" algorithm",42],[11,"minimal","","Take extra time to find the minimal diff",42],[11,"show_binary","","Include the necessary deflate/delta information so that `git-apply` can\napply given diff information to binary files.",42],[11,"context_lines","","Set the number of unchanged lines that define the boundary of a hunk\n(and to display before and after).",42],[11,"interhunk_lines","","Set the maximum number of unchanged lines between hunk boundaries before\nthe hunks will be merged into one.",42],[11,"id_abbrev","","The default value for this is `core.abbrev` or 7 if unset.",42],[11,"max_size","","Maximum size (in bytes) above which a blob will be marked as binary\nautomatically.",42],[11,"old_prefix","","The virtual \"directory\" to prefix old file names with in hunk headers.",42],[11,"new_prefix","","The virtual \"directory\" to prefix new file names with in hunk headers.",42],[11,"pathspec","","Add to the array of paths/fnmatch patterns to constrain the diff.",42],[11,"raw","","Acquire a pointer to the underlying raw options.",42],[11,"next","","",43],[11,"size_hint","","",43],[11,"next_back","","",43],[11,"old_lineno","","Line number in old file or `None` for added line",44],[11,"new_lineno","","Line number in new file or `None` for deleted line",44],[11,"num_lines","","Number of newline characters in content",44],[11,"content_offset","","Offset in the original file to the content",44],[11,"content","","Content of this line as bytes.",44],[11,"origin","","Sigil showing the origin of this `DiffLine`.",44],[11,"old_start","","Starting line number in old_file",45],[11,"old_lines","","Number of lines in old_file",45],[11,"new_start","","Starting line number in new_file",45],[11,"new_lines","","Number of lines in new_file",45],[11,"header","","Header text",45],[11,"files_changed","","Get the total number of files chaned in a diff.",46],[11,"insertions","","Get the total number of insertions in a diff",46],[11,"deletions","","Get the total number of deletions in a diff",46],[11,"to_buf","","Print diff statistics to a Buf",46],[11,"drop","","",46],[11,"new","","Creates a new set of empty diff find options.",47],[11,"by_config","","Reset all flags back to their unset state, indicating that\n`diff.renames` should be used instead. This is overridden once any flag\nis set.",47],[11,"renames","","Look for renames?",47],[11,"renames_from_rewrites","","Consider old side of modified for renames?",47],[11,"copies","","Look for copies?",47],[11,"copies_from_unmodified","","Consider unmodified as copy sources?",47],[11,"rewrites","","Mark significant rewrites for split.",47],[11,"break_rewries","","Actually split large rewrites into delete/add pairs",47],[11,"for_untracked","","Find renames/copies for untracked items in working directory.",47],[11,"all","","Turn on all finding features.",47],[11,"ignore_leading_whitespace","","Measure similarity ignoring leading whitespace (default)",47],[11,"ignore_whitespace","","Measure similarity ignoring all whitespace",47],[11,"dont_ignore_whitespace","","Measure similarity including all data",47],[11,"exact_match_only","","Measure similarity only by comparing SHAs (fast and cheap)",47],[11,"break_rewrites_for_renames_only","","Do not break rewrites unless they contribute to a rename.",47],[11,"remove_unmodified","","Remove any unmodified deltas after find_similar is done.",47],[11,"rename_threshold","","Similarity to consider a file renamed (default 50)",47],[11,"rename_from_rewrite_threshold","","Similarity of modified to be glegible rename source (default 50)",47],[11,"copy_threshold","","Similarity to consider a file copy (default 50)",47],[11,"break_rewrite_threshold","","Similarity to split modify into delete/add pair (default 60)",47],[11,"rename_limit","","Maximum similarity sources to examine for a file (somewhat like\ngit-diff's `-l` option or `diff.renameLimit` config)",47],[11,"fmt","","",48],[11,"last_error","","Returns the last error, or `None` if one is not available.",48],[11,"from_str","","Creates a new error from the given string as the error.",48],[11,"code","","Return the error code associated with this error.",48],[11,"raw_code","","Return the raw error code associated with this error.",48],[11,"message","","Return the message associated with this error",48],[11,"description","","",48],[11,"fmt","","",48],[11,"new","","Creates a new in-memory index.",49],[11,"open","","Create a new bare Git index object as a memory representation of the Git\nindex file in 'index_path', without a repository to back it.",49],[11,"add","","Add or update an index entry from an in-memory struct",49],[11,"add_path","","Add or update an index entry from a file on disk",49],[11,"add_all","","Add or update index entries matching files in the working directory.",49],[11,"clear","","Clear the contents (all the entries) of an index object.",49],[11,"len","","Get the count of entries currently in the index",49],[11,"get","","Get one of the entries in the index by its position.",49],[11,"iter","","Get an iterator over the entries in this index.",49],[11,"get_path","","Get one of the entries in the index by its path.",49],[11,"path","","Get the full path to the index file on disk.",49],[11,"read","","Update the contents of an existing index object in memory by reading\nfrom the hard disk.",49],[11,"read_tree","","Read a tree into the index file with stats",49],[11,"remove","","Remove an entry from the index",49],[11,"remove_path","","Remove an index entry corresponding to a file on disk.",49],[11,"remove_dir","","Remove all entries from the index under a given directory.",49],[11,"remove_all","","Remove all matching index entries.",49],[11,"update_all","","Update all index entries to match the working directory",49],[11,"write","","Write an existing index object from memory back to disk using an atomic\nfile lock.",49],[11,"write_tree","","Write the index as a tree.",49],[11,"write_tree_to","","Write the index as a tree to the given repository",49],[11,"drop","","",49],[11,"next","","",50],[11,"author","","Get the note author",51],[11,"committer","","Get the note committer",51],[11,"message_bytes","","Get the note message, in bytes.",51],[11,"message","","Get the note message as a string, returning `None` if it is not UTF-8.",51],[11,"id","","Get the note object's id",51],[11,"drop","","",51],[11,"next","","",52],[11,"drop","","",52],[11,"id","","Get the id (SHA1) of a repository object",53],[11,"kind","","Get the object type of an object.",53],[11,"peel","","Recursively peel an object until an object of the specified type is met.",53],[11,"short_id","","Get a short abbreviated OID string for the object",53],[11,"as_commit","","Attempt to view this object as a commit.",53],[11,"as_tag","","Attempt to view this object as a tag.",53],[11,"as_tree","","Attempt to view this object as a tree.",53],[11,"as_blob","","Attempt to view this object as a blob.",53],[11,"clone","","",53],[11,"drop","","",53],[11,"from_str","","Parse a hex-formatted object id into an Oid structure.",54],[11,"from_bytes","","Parse a raw object id into an Oid structure.",54],[11,"as_bytes","","View this OID as a byte-slice 20 bytes in length.",54],[11,"is_zero","","Test if this OID is all zeros.",54],[11,"fmt","","",54],[11,"fmt","","Hex-encode this Oid into a formatter.",54],[11,"eq","","",54],[11,"partial_cmp","","",54],[11,"cmp","","",54],[11,"clone","","",54],[11,"hash","","",54],[11,"new","","Creates a new pathspec from a list of specs to match against.",55],[11,"match_tree","","Match a pathspec against files in a tree.",55],[11,"match_index","","This matches the pathspec against the files in the repository index.",55],[11,"match_workdir","","Match a pathspec against the working directory of a repository.",55],[11,"matches_path","","Try to match a path against a pathspec",55],[11,"drop","","",55],[11,"entries","","Returns an iterator over the matching filenames in this list.",56],[11,"entry","","Get a matching filename by position.",56],[11,"diff_entries","","Returns an iterator over the matching diff entries in this list.",56],[11,"diff_entry","","Get a matching diff delta by position.",56],[11,"failed_entries","","Returns an iterator over the non-matching entries in this list.",56],[11,"failed_entry","","Get an original pathspec string that had no matches.",56],[11,"drop","","",56],[11,"next","","",57],[11,"size_hint","","",57],[11,"next_back","","",57],[11,"next","","",58],[11,"size_hint","","",58],[11,"next_back","","",58],[11,"next","","",59],[11,"size_hint","","",59],[11,"next_back","","",59],[11,"add_refspec","","Add a refspec to be pushed",60],[11,"finish","","Actually push all given refspecs",60],[11,"update_tips","","Update remote tips after a push",60],[11,"statuses","","Return each status entry",60],[11,"drop","","",60],[11,"is_valid_name","","Ensure the reference name is well-formed.",61],[11,"raw","","Get access to the underlying raw pointer.",61],[11,"delete","","Delete an existing reference.",61],[11,"is_branch","","Check if a reference is a local branch.",61],[11,"is_note","","Check if a reference is a note.",61],[11,"is_remote","","Check if a reference is a remote tracking branch",61],[11,"is_tag","","Check if a reference is a tag",61],[11,"name","","Get the full name of a reference.",61],[11,"name_bytes","","Get the full name of a reference.",61],[11,"shorthand","","Get the full shorthand of a reference.",61],[11,"shorthand_bytes","","Get the full shorthand of a reference.",61],[11,"target","","Get the OID pointed to by a direct reference.",61],[11,"target_peel","","Return the peeled OID target of this reference.",61],[11,"symbolic_target","","Get full name to the reference pointed to by a symbolic reference.",61],[11,"symbolic_target_bytes","","Get full name to the reference pointed to by a symbolic reference.",61],[11,"resolve","","Resolve a symbolic reference to a direct reference.",61],[11,"rename","","Rename an existing reference.",61],[11,"partial_cmp","","",61],[11,"cmp","","",61],[11,"eq","","",61],[11,"drop","","",61],[11,"names","","Consumes a `References` iterator to create an iterator over just the\nname of some references.",62],[11,"next","","",62],[11,"drop","","",62],[11,"next","","",63],[11,"append","","Add a new entry to the in-memory reflog.",64],[11,"remove","","Remove an entry from the reflog by its index",64],[11,"get","","Lookup an entry by its index",64],[11,"len","","Get the number of log entries in a reflog",64],[11,"iter","","Get an iterator to all entries inside of this reflog",64],[11,"write","","Write an existing in-memory reflog object back to disk using an atomic\nfile lock.",64],[11,"drop","","",64],[11,"committer","","Get the committer of this entry",65],[11,"id_new","","Get the new oid",65],[11,"id_old","","Get the old oid",65],[11,"message","","Get the log message, returning `None` on invalid UTF-8.",65],[11,"message_bytes","","Get the log message as a byte array.",65],[11,"next","","",66],[11,"size_hint","","",66],[11,"next_back","","",66],[11,"direction","","Get the refspec's direction.",67],[11,"dst","","Get the destination specifier.",67],[11,"dst_bytes","","Get the destination specifier, in bytes.",67],[11,"dst_matches","","Check if a refspec's destination descriptor matches a reference",67],[11,"src","","Get the source specifier.",67],[11,"src_bytes","","Get the source specifier, in bytes.",67],[11,"src_matches","","Check if a refspec's source descriptor matches a reference",67],[11,"is_force","","Get the force update setting.",67],[11,"str","","Get the refspec's string.",67],[11,"bytes","","Get the refspec's string as a byte array",67],[11,"is_valid_name","","Ensure the remote name is well-formed.",68],[11,"name","","Get the remote's name.",68],[11,"name_bytes","","Get the remote's name, in bytes.",68],[11,"url","","Get the remote's url.",68],[11,"url_bytes","","Get the remote's url as a byte array.",68],[11,"pushurl","","Get the remote's pushurl.",68],[11,"pushurl_bytes","","Get the remote's pushurl as a byte array.",68],[11,"connect","","Open a connection to a remote.",68],[11,"connected","","Check whether the remote is connected",68],[11,"disconnect","","Disconnect from the remote",68],[11,"save","","Save a remote to its repository's configuration",68],[11,"add_fetch","","Add a fetch refspec to the remote",68],[11,"add_push","","Add a push refspec to the remote",68],[11,"set_url","","Set the remote's url",68],[11,"set_pushurl","","Set the remote's pushurl.",68],[11,"set_update_fetchhead","","Sets the update FETCH_HEAD setting. By default, FETCH_HEAD will be\nupdated on every fetch.",68],[11,"set_fetch_refspecs","","Set the remote's list of fetch refspecs",68],[11,"set_push_refspecs","","Set the remote's list of push refspecs",68],[11,"clear_refspecs","","Clear the refspecs",68],[11,"download","","Download and index the packfile",68],[11,"refspecs","","Get the number of refspecs for a remote",68],[11,"get_refspec","","Get the `nth` refspec from this remote.",68],[11,"fetch","","Download new data and update tips",68],[11,"update_tips","","Update the tips to the new state",68],[11,"update_fetchhead","","Retrieve the update FETCH_HEAD setting.",68],[11,"push","","Create a new push object",68],[11,"set_callbacks","","Set the callbacks to be invoked when the transfer is in-progress.",68],[11,"stats","","Get the statistics structure that is filled in by the fetch operation.",68],[11,"list","","Get the remote repository's reference advertisement list.",68],[11,"clone","","",68],[11,"drop","","",68],[11,"next","","",69],[11,"size_hint","","",69],[11,"next_back","","",69],[11,"is_local","","Flag if this is available locally.",70],[11,"oid","","",70],[11,"loid","","",70],[11,"name","","",70],[11,"symref_target","","",70],[11,"new","","Creates a new set of empty callbacks",71],[11,"credentials","","The callback through which to fetch credentials if required.",71],[11,"transfer_progress","","The callback through which progress is monitored.",71],[11,"sideband_progress","","Textual progress from the remote.",71],[11,"update_tips","","Each time a reference is updated locally, the callback will be called\nwith information about it.",71],[11,"certificate_check","","If certificate verification fails, then this callback will be invoked to\nlet the caller make the final decision of whether to allow the\nconnection to proceed.",71],[11,"total_objects","","Number of objects in the packfile being downloaded",72],[11,"indexed_objects","","Received objects that have been hashed",72],[11,"received_objects","","Objects which have been downloaded",72],[11,"local_objects","","Locally-available objects that have been injected in order to fix a thin\npack.",72],[11,"total_deltas","","Number of deltas in the packfile being downloaded",72],[11,"indexed_deltas","","Received deltas that have been hashed.",72],[11,"received_bytes","","Size of the packfile received up to now",72],[11,"to_owned","","Convert this to an owned version of `Progress`.",72],[11,"open","","Attempt to open an already-existing repository at `path`.",73],[11,"discover","","Attempt to open an already-existing repository at or above `path`",73],[11,"init","","Creates a new repository in the specified folder.",73],[11,"init_bare","","Creates a new `--bare` repository in the specified folder.",73],[11,"init_opts","","Creates a new `--bare` repository in the specified folder.",73],[11,"clone","","Clone a remote repository.",73],[11,"revparse","","Execute a rev-parse operation against the `spec` listed.",73],[11,"revparse_single","","Find a single object, as specified by a revision string.",73],[11,"is_bare","","Tests whether this repository is a bare repository or not.",73],[11,"is_shallow","","Tests whether this repository is a shallow clone.",73],[11,"is_empty","","Tests whether this repository is empty.",73],[11,"path","","Returns the path to the `.git` folder for normal repositories or the\nrepository itself for bare repositories.",73],[11,"state","","Returns the current state of this repository",73],[11,"workdir","","Get the path of the working directory for this repository.",73],[11,"namespace","","Get the currently active namespace for this repository.",73],[11,"namespace_bytes","","Get the currently active namespace for this repository as a byte array.",73],[11,"remotes","","List all remotes for a given repository",73],[11,"find_remote","","Get the information for a particular remote",73],[11,"remote","","Add a remote with the default fetch refspec to the repository's\nconfiguration.",73],[11,"remote_anonymous","","Create an anonymous remote",73],[11,"remote_rename","","Give a remote a new name",73],[11,"remote_delete","","Delete an existing persisted remote.",73],[11,"reset","","Sets the current head to the specified object and optionally resets\nthe index and working tree to match.",73],[11,"reset_default","","Updates some entries in the index from the target commit tree.",73],[11,"head","","Retrieve and resolve the reference pointed at by HEAD.",73],[11,"references","","Create an iterator for the repo's references",73],[11,"references_glob","","Create an iterator for the repo's references that match the specified\nglob",73],[11,"submodules","","Load all submodules for this repository and return them.",73],[11,"statuses","","Gather file status information and populate the returned structure.",73],[11,"status_should_ignore","","Test if the ignore rules apply to a given file.",73],[11,"status_file","","Get file status for a single file.",73],[11,"branches","","Create an iterator which loops over the requested branches.",73],[11,"index","","Get the Index file for this repository.",73],[11,"config","","Get the configuration file for this repository.",73],[11,"blob","","Write an in-memory buffer to the ODB as a blob.",73],[11,"blob_path","","Read a file from the filesystem and write its content to the Object\nDatabase as a loose blob",73],[11,"find_blob","","Lookup a reference to one of the objects in a repository.",73],[11,"branch","","Create a new branch pointing at a target commit",73],[11,"find_branch","","Lookup a branch by its name in a repository.",73],[11,"commit","","Create new commit in the repository",73],[11,"find_commit","","Lookup a reference to one of the commits in a repository.",73],[11,"find_object","","Lookup a reference to one of the objects in a repository.",73],[11,"reference","","Create a new direct reference.",73],[11,"reference_symbolic","","Create a new symbolic reference.",73],[11,"find_reference","","Lookup a reference to one of the objects in a repository.",73],[11,"refname_to_id","","Lookup a reference by name and resolve immediately to OID.",73],[11,"signature","","Create a new action signature with default user and now timestamp.",73],[11,"submodule","","Set up a new git submodule for checkout.",73],[11,"find_submodule","","Lookup submodule information by name or path.",73],[11,"find_tree","","Lookup a reference to one of the objects in a repository.",73],[11,"tag","","Create a new tag in the repository from an object",73],[11,"tag_lightweight","","Create a new lightweight tag pointing at a target object",73],[11,"find_tag","","Lookup a tag object from the repository.",73],[11,"tag_delete","","Delete an existing tag reference.",73],[11,"tag_names","","Get a list with all the tags in the repository.",73],[11,"checkout_head","","Updates files in the index and the working tree to match the content of\nthe commit pointed at by HEAD.",73],[11,"checkout_index","","Updates files in the working tree to match the content of the index.",73],[11,"checkout_tree","","Updates files in the index and working tree to match the content of the\ntree pointed at by the treeish.",73],[11,"note","","Add a note for an object",73],[11,"note_default_ref","","Get the default notes reference for this repository",73],[11,"notes","","Creates a new iterator for notes in this repository.",73],[11,"find_note","","Read the note for an object.",73],[11,"note_delete","","Remove the note for an object.",73],[11,"revwalk","","Create a revwalk that can be used to traverse the commit graph.",73],[11,"merge_base","","Find a merge base between two commits",73],[11,"graph_ahead_behind","","Count the number of unique commits between two commit objects",73],[11,"graph_descendant_of","","Determine if a commit is the descendant of another commit",73],[11,"reflog","","Read the reflog for the given reference",73],[11,"reflog_delete","","Delete the reflog for the given reference",73],[11,"reflog_rename","","Rename a reflog",73],[11,"drop","","",73],[11,"new","","Creates a default set of initialization options.",74],[11,"bare","","Create a bare repository with no working directory.",74],[11,"no_reinit","","Return an error if the repository path appears to already be a git\nrepository.",74],[11,"no_dotgit_dir","","Normally a '/.git/' will be appended to the repo apth for non-bare repos\n(if it is not already there), but passing this flag prevents that\nbehavior.",74],[11,"mkdir","","Make the repo path (and workdir path) as needed. The \".git\" directory\nwill always be created regardless of this flag.",74],[11,"mkpath","","Recursively make all components of the repo and workdir path sas\nnecessary.",74],[11,"mode","","Set to one of the `RepositoryInit` constants, or a custom value.",74],[11,"external_template","","Enable or disable using external templates.",74],[11,"workdir_path","","The path do the working directory.",74],[11,"description","","If set, this will be used to initialize the \"description\" file in the\nrepository instead of using the template content.",74],[11,"template_path","","When the `external_template` option is set, this is the first location\nto check for the template directory.",74],[11,"initial_head","","The name of the head to point HEAD at.",74],[11,"origin_url","","If set, then after the rest of the repository initialization is\ncompleted an `origin` remote will be added pointing to this URL.",74],[11,"raw","","Creates a set of raw init options to be used with\n`git_repository_init_ext`.",74],[11,"from_objects","","Assembles a new revspec from the from/to components.",75],[11,"from","","Access the `from` range of this revspec.",75],[11,"to","","Access the `to` range of this revspec.",75],[11,"mode","","Returns the intent of the revspec.",75],[11,"reset","","Reset a revwalk to allow re-configuring it.",76],[11,"set_sorting","","Set the order in which commits are visited.",76],[11,"simplify_first_parent","","Simplify the history by first-parent",76],[11,"push","","Mark a commit to start traversal from.",76],[11,"push_head","","Push the repository's HEAD",76],[11,"push_glob","","Push matching references",76],[11,"push_range","","Push and hide the respective endpoints of the given range.",76],[11,"push_ref","","Push the OID pointed to by a reference",76],[11,"hide","","Mark a commit as not of interest to this revwalk.",76],[11,"hide_head","","Hide the repository's HEAD",76],[11,"hide_glob","","Hide matching references.",76],[11,"hide_ref","","Hide the OID pointed to by a reference.",76],[11,"drop","","",76],[11,"next","","",76],[11,"now","","Create a new action signature with a timestamp of 'now'.",77],[11,"new","","Create a new action signature.",77],[11,"name","","Gets the name on the signature.",77],[11,"name_bytes","","Gets the name on the signature as a byte slice.",77],[11,"email","","Gets the email on the signature.",77],[11,"email_bytes","","Gets the email on the signature as a byte slice.",77],[11,"when","","Get the `when` of this signature.",77],[11,"to_owned","","Convert a signature of any lifetime into an owned signature with a\nstatic lifetime.",77],[11,"clone","","",77],[11,"drop","","",77],[11,"new","","Creates a new blank set of status options.",78],[11,"show","","Select the files on which to report status.",78],[11,"pathspec","","Add a path pattern to match (using fnmatch-style matching).",78],[11,"include_untracked","","Flag whether untracked files will be included.",78],[11,"include_ignored","","Flag whether ignored files will be included.",78],[11,"include_unmodified","","Flag to include unmodified files.",78],[11,"exclude_submodules","","Flag that submodules should be skipped.",78],[11,"recurse_untracked_dirs","","Flag that all files in untracked directories should be included.",78],[11,"disable_pathspec_match","","Indicates that the given paths should be treated as literals paths, note\npatterns.",78],[11,"recurse_ignored_dirs","","Indicates that the contents of ignored directories should be included in\nthe status.",78],[11,"renames_head_to_index","","Indicates that rename detection should be processed between the head.",78],[11,"renames_index_to_workdir","","Indicates that rename detection should be run between the index and the\nworking directory.",78],[11,"sort_case_sensitively","","Override the native case sensitivity for the file system and force the\noutput to be in case sensitive order.",78],[11,"sort_case_insensitively","","Override the native case sensitivity for the file system and force the\noutput to be in case-insensitive order.",78],[11,"renames_from_rewrites","","Indicates that rename detection should include rewritten files.",78],[11,"no_refresh","","Bypasses the default status behavior of doing a \"soft\" index reload.",78],[11,"update_index","","Refresh the stat cache in the index for files are unchanged but have\nout of date stat information in the index.",78],[11,"include_unreadable","","",78],[11,"include_unreadable_as_untracked","","",78],[11,"raw","","Get a pointer to the inner list of status options.",78],[11,"get","","Gets a status entry from this list at the specified index.",79],[11,"len","","Gets the count of status entries in this list.",79],[11,"iter","","Returns an iterator over the statuses in this list.",79],[11,"drop","","",79],[11,"next","","",80],[11,"size_hint","","",80],[11,"next_back","","",80],[11,"path_bytes","","Access the bytes for this entry's corresponding pathname",81],[11,"path","","Access this entry's path name as a string.",81],[11,"status","","Access the status flags for this file",81],[11,"head_to_index","","Access detailed information about the differences between the file in\nHEAD and the file in the index.",81],[11,"index_to_workdir","","Access detailed information about the differences between the file in\nthe index and the file in the working directory.",81],[11,"branch","","Get the submodule's branch.",82],[11,"branch_bytes","","Get the branch for the submodule.",82],[11,"url","","Get the submodule's url.",82],[11,"url_bytes","","Get the url for the submodule.",82],[11,"name","","Get the submodule's name.",82],[11,"name_bytes","","Get the name for the submodule.",82],[11,"path","","Get the path for the submodule.",82],[11,"head_id","","Get the OID for the submodule in the current HEAD tree.",82],[11,"index_id","","Get the OID for the submodule in the index.",82],[11,"workdir_id","","Get the OID for the submodule in the current working directory.",82],[11,"init","","Copy submodule info into \".git/config\" file.",82],[11,"open","","Open the repository for a submodule.",82],[11,"reload","","Reread submodule info from config, index, and HEAD.",82],[11,"save","","Write submodule settings to .gitmodules file.",82],[11,"sync","","Copy submodule remote info into submodule repo.",82],[11,"add_to_index","","Add current submodule HEAD commit to index of superproject.",82],[11,"add_finalize","","Resolve the setup of a new git submodule.",82],[11,"status","","Get the status for a submodule.",82],[11,"drop","","",82],[11,"id","","Get the id (SHA1) of a repository tag",83],[11,"message","","Get the message of a tag",83],[11,"message_bytes","","Get the message of a tag",83],[11,"name","","Get the name of a tag",83],[11,"name_bytes","","Get the name of a tag",83],[11,"peel","","Recursively peel a tag until a non tag git_object is found",83],[11,"tagger","","Get the tagger (author) of a tag",83],[11,"target","","Get the tagged object of a tag",83],[11,"target_id","","Get the OID of the tagged object of a tag",83],[11,"target_type","","Get the OID of the tagged object of a tag",83],[11,"drop","","",83],[11,"eq","","",84],[11,"ne","","",84],[11,"clone","","",84],[11,"eq","","",85],[11,"ne","","",85],[11,"clone","","",85],[11,"new","","Creates a new time structure from its components.",84],[11,"seconds","","Return the time, in seconds, from epoch",84],[11,"offset_minutes","","Return the timezone offset, in minutes",84],[11,"new","","Creates a new time structure from its components.",85],[11,"seconds","","Returns the number of seconds in the second component of this time.",85],[11,"nanoseconds","","Returns the nanosecond component of this time.",85],[11,"id","","Get the id (SHA1) of a repository object",86],[11,"len","","Get the number of entries listed in this tree.",86],[11,"iter","","Returns an iterator over the entries in this tree.",86],[11,"get_id","","Lookup a tree entry by SHA value.",86],[11,"get","","Lookup a tree entry by its position in the tree",86],[11,"get_name","","Lookup a tree entry by its filename",86],[11,"get_path","","Retrieve a tree entry contained in a tree or in any of its subtrees,\ngiven its relative path.",86],[11,"drop","","",86],[11,"id","","Get the id of the object pointed by the entry",87],[11,"name","","Get the filename of a tree entry",87],[11,"name_bytes","","Get the filename of a tree entry",87],[11,"to_object","","Convert a tree entry to the object it points to.",87],[11,"kind","","Get the type of the object pointed by the entry",87],[11,"filemode","","Get the UNIX file attributes of a tree entry",87],[11,"filemode_raw","","Get the raw UNIX file attributes of a tree entry",87],[11,"clone","","",87],[11,"partial_cmp","","",87],[11,"cmp","","",87],[11,"eq","","",87],[11,"drop","","",87],[11,"next","","",88],[11,"size_hint","","",88],[11,"next_back","","",88],[6,"IndexMatchedPath","","A callback function to filter index matches."],[6,"Credentials","","Callback used to acquire credentials for when a remote is fetched."],[6,"TransferProgress","","Callback to be invoked while a transfer is in progress."],[6,"TransportMessage","","Callback for receiving messages delivered by the transport."],[6,"UpdateTips","","Callback for whenever a reference is updated locally."],[17,"SORT_NONE","",""],[17,"SORT_TOPOLOGICAL","",""],[17,"SORT_TIME","",""],[17,"SORT_REVERSE","",""],[17,"USER_PASS_PLAINTEXT","",""],[17,"SSH_KEY","",""],[17,"SSH_CUSTOM","",""],[17,"DEFAULT","",""],[17,"SSH_INTERACTIVE","",""],[17,"ADD_DEFAULT","",""],[17,"ADD_FORCE","",""],[17,"ADD_DISABLE_PATHSPEC_MATCH","",""],[17,"ADD_CHECK_PATHSPEC","",""],[17,"REVPARSE_SINGLE","",""],[17,"REVPARSE_RANGE","",""],[17,"REVPARSE_MERGE_BASE","",""],[17,"STATUS_CURRENT","",""],[17,"STATUS_INDEX_NEW","",""],[17,"STATUS_INDEX_MODIFIED","",""],[17,"STATUS_INDEX_DELETED","",""],[17,"STATUS_INDEX_RENAMED","",""],[17,"STATUS_INDEX_TYPECHANGE","",""],[17,"STATUS_WT_NEW","",""],[17,"STATUS_WT_MODIFIED","",""],[17,"STATUS_WT_DELETED","",""],[17,"STATUS_WT_TYPECHANGE","",""],[17,"STATUS_WT_RENAMED","",""],[17,"STATUS_IGNORED","",""],[17,"REPOSITORY_INIT_SHARED_UMASK","","Use permissions configured by umask - the default"],[17,"REPOSITORY_INIT_SHARED_GROUP","","Use `--shared=group` behavior, chmod'ing the new repo to be group writable and \"g+sx\" for sticky group assignment"],[17,"REPOSITORY_INIT_SHARED_ALL","","Use `--shared=all` behavior, adding world readability."],[17,"SUBMODULE_STATUS_IN_HEAD","",""],[17,"SUBMODULE_STATUS_IN_INDEX","",""],[17,"SUBMODULE_STATUS_IN_CONFIG","",""],[17,"SUBMODULE_STATUS_IN_WD","",""],[17,"SUBMODULE_STATUS_INDEX_ADDED","",""],[17,"SUBMODULE_STATUS_INDEX_DELETED","",""],[17,"SUBMODULE_STATUS_INDEX_MODIFIED","",""],[17,"SUBMODULE_STATUS_WD_UNINITIALIZED","",""],[17,"SUBMODULE_STATUS_WD_ADDED","",""],[17,"SUBMODULE_STATUS_WD_DELETED","",""],[17,"SUBMODULE_STATUS_WD_MODIFIED","",""],[17,"SUBMODULE_STATUS_WD_INDEX_MODIFIED","",""],[17,"SUBMODULE_STATUS_WD_WD_MODIFIED","",""],[17,"SUBMODULE_STATUS_WD_UNTRACKED","",""],[17,"PATHSPEC_DEFAULT","",""],[17,"PATHSPEC_IGNORE_CASE","",""],[17,"PATHSPEC_USE_CASE","",""],[17,"PATHSPEC_NO_GLOB","",""],[17,"PATHSPEC_NO_MATCH_ERROR","",""],[17,"PATHSPEC_FIND_FAILURES","",""],[17,"PATHSPEC_FAILURES_ONLY","",""],[17,"DIFF_STATS_NONE","",""],[17,"DIFF_STATS_FULL","",""],[17,"DIFF_STATS_SHORT","",""],[17,"DIFF_STATS_NUMBER","",""],[17,"DIFF_STATS_INCLUDE_SUMMARY","",""],[8,"IntoCString","","A class of types that can be converted to C strings."],[10,"into_c_string","","Consume this container, converting it into a CString",89],[11,"fmt","","",4],[11,"clone","","",4],[11,"eq","","",4],[11,"ne","","",4],[11,"fmt","","",5],[11,"clone","","",5],[11,"eq","","",5],[11,"ne","","",5],[11,"fmt","","",8],[11,"eq","","",8],[11,"ne","","",8],[11,"fmt","","",9],[11,"eq","","",9],[11,"ne","","",9],[11,"fmt","","",10],[11,"eq","","",10],[11,"ne","","",10],[11,"hash","","",90],[11,"cmp","","",90],[11,"partial_cmp","","",90],[11,"lt","","",90],[11,"le","","",90],[11,"gt","","",90],[11,"ge","","",90],[11,"clone","","",90],[11,"eq","","",90],[11,"ne","","",90],[11,"empty","","Returns an empty set of flags.",90],[11,"all","","Returns the set containing all flags.",90],[11,"bits","","Returns the raw value of the flags currently stored.",90],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",90],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",90],[11,"is_empty","","Returns `true` if no flags are currently stored.",90],[11,"is_all","","Returns `true` if all flags are currently set.",90],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",90],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",90],[11,"insert","","Inserts the specified flags in-place.",90],[11,"remove","","Removes the specified flags in-place.",90],[11,"toggle","","Toggles the specified flags in-place.",90],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",90],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",90],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",90],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",90],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",90],[11,"hash","","",91],[11,"cmp","","",91],[11,"partial_cmp","","",91],[11,"lt","","",91],[11,"le","","",91],[11,"gt","","",91],[11,"ge","","",91],[11,"clone","","",91],[11,"eq","","",91],[11,"ne","","",91],[11,"empty","","Returns an empty set of flags.",91],[11,"all","","Returns the set containing all flags.",91],[11,"bits","","Returns the raw value of the flags currently stored.",91],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",91],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",91],[11,"is_empty","","Returns `true` if no flags are currently stored.",91],[11,"is_all","","Returns `true` if all flags are currently set.",91],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",91],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",91],[11,"insert","","Inserts the specified flags in-place.",91],[11,"remove","","Removes the specified flags in-place.",91],[11,"toggle","","Toggles the specified flags in-place.",91],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",91],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",91],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",91],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",91],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",91],[11,"hash","","",92],[11,"cmp","","",92],[11,"partial_cmp","","",92],[11,"lt","","",92],[11,"le","","",92],[11,"gt","","",92],[11,"ge","","",92],[11,"clone","","",92],[11,"eq","","",92],[11,"ne","","",92],[11,"empty","","Returns an empty set of flags.",92],[11,"all","","Returns the set containing all flags.",92],[11,"bits","","Returns the raw value of the flags currently stored.",92],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",92],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",92],[11,"is_empty","","Returns `true` if no flags are currently stored.",92],[11,"is_all","","Returns `true` if all flags are currently set.",92],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",92],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",92],[11,"insert","","Inserts the specified flags in-place.",92],[11,"remove","","Removes the specified flags in-place.",92],[11,"toggle","","Toggles the specified flags in-place.",92],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",92],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",92],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",92],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",92],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",92],[11,"hash","","",93],[11,"cmp","","",93],[11,"partial_cmp","","",93],[11,"lt","","",93],[11,"le","","",93],[11,"gt","","",93],[11,"ge","","",93],[11,"clone","","",93],[11,"eq","","",93],[11,"ne","","",93],[11,"empty","","Returns an empty set of flags.",93],[11,"all","","Returns the set containing all flags.",93],[11,"bits","","Returns the raw value of the flags currently stored.",93],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",93],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",93],[11,"is_empty","","Returns `true` if no flags are currently stored.",93],[11,"is_all","","Returns `true` if all flags are currently set.",93],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",93],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",93],[11,"insert","","Inserts the specified flags in-place.",93],[11,"remove","","Removes the specified flags in-place.",93],[11,"toggle","","Toggles the specified flags in-place.",93],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",93],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",93],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",93],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",93],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",93],[11,"str","","Convert an object type to its string representation.",8],[11,"is_loose","","Determine if the given git_otype is a valid loose object type.",8],[11,"from_raw","","Convert a raw git_otype to an ObjectType",8],[11,"raw","","Convert this kind into its raw representation",8],[11,"from_str","","Convert a string object type representation to its object type.",8],[11,"fmt","","",8],[11,"from_raw","","Converts a raw configuration level to a ConfigLevel",10],[11,"hash","","",94],[11,"cmp","","",94],[11,"partial_cmp","","",94],[11,"lt","","",94],[11,"le","","",94],[11,"gt","","",94],[11,"ge","","",94],[11,"clone","","",94],[11,"eq","","",94],[11,"ne","","",94],[11,"empty","","Returns an empty set of flags.",94],[11,"all","","Returns the set containing all flags.",94],[11,"bits","","Returns the raw value of the flags currently stored.",94],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",94],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",94],[11,"is_empty","","Returns `true` if no flags are currently stored.",94],[11,"is_all","","Returns `true` if all flags are currently set.",94],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",94],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",94],[11,"insert","","Inserts the specified flags in-place.",94],[11,"remove","","Removes the specified flags in-place.",94],[11,"toggle","","Toggles the specified flags in-place.",94],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",94],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",94],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",94],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",94],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",94],[11,"hash","","",95],[11,"cmp","","",95],[11,"partial_cmp","","",95],[11,"lt","","",95],[11,"le","","",95],[11,"gt","","",95],[11,"ge","","",95],[11,"clone","","",95],[11,"eq","","",95],[11,"ne","","",95],[11,"empty","","Returns an empty set of flags.",95],[11,"all","","Returns the set containing all flags.",95],[11,"bits","","Returns the raw value of the flags currently stored.",95],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",95],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",95],[11,"is_empty","","Returns `true` if no flags are currently stored.",95],[11,"is_all","","Returns `true` if all flags are currently set.",95],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",95],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",95],[11,"insert","","Inserts the specified flags in-place.",95],[11,"remove","","Removes the specified flags in-place.",95],[11,"toggle","","Toggles the specified flags in-place.",95],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",95],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",95],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",95],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",95],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",95],[11,"fmt","","",11],[11,"hash","","",96],[11,"cmp","","",96],[11,"partial_cmp","","",96],[11,"lt","","",96],[11,"le","","",96],[11,"gt","","",96],[11,"ge","","",96],[11,"clone","","",96],[11,"eq","","",96],[11,"ne","","",96],[11,"empty","","Returns an empty set of flags.",96],[11,"all","","Returns the set containing all flags.",96],[11,"bits","","Returns the raw value of the flags currently stored.",96],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",96],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",96],[11,"is_empty","","Returns `true` if no flags are currently stored.",96],[11,"is_all","","Returns `true` if all flags are currently set.",96],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",96],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",96],[11,"insert","","Inserts the specified flags in-place.",96],[11,"remove","","Removes the specified flags in-place.",96],[11,"toggle","","Toggles the specified flags in-place.",96],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",96],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",96],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",96],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",96],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",96],[11,"hash","","",97],[11,"cmp","","",97],[11,"partial_cmp","","",97],[11,"lt","","",97],[11,"le","","",97],[11,"gt","","",97],[11,"ge","","",97],[11,"clone","","",97],[11,"eq","","",97],[11,"ne","","",97],[11,"empty","","Returns an empty set of flags.",97],[11,"all","","Returns the set containing all flags.",97],[11,"bits","","Returns the raw value of the flags currently stored.",97],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",97],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",97],[11,"is_empty","","Returns `true` if no flags are currently stored.",97],[11,"is_all","","Returns `true` if all flags are currently set.",97],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",97],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",97],[11,"insert","","Inserts the specified flags in-place.",97],[11,"remove","","Removes the specified flags in-place.",97],[11,"toggle","","Toggles the specified flags in-place.",97],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",97],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",97],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",97],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",97],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",97],[11,"hash","","",98],[11,"cmp","","",98],[11,"partial_cmp","","",98],[11,"lt","","",98],[11,"le","","",98],[11,"gt","","",98],[11,"ge","","",98],[11,"clone","","",98],[11,"eq","","",98],[11,"ne","","",98],[11,"empty","","Returns an empty set of flags.",98],[11,"all","","Returns the set containing all flags.",98],[11,"bits","","Returns the raw value of the flags currently stored.",98],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",98],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",98],[11,"is_empty","","Returns `true` if no flags are currently stored.",98],[11,"is_all","","Returns `true` if all flags are currently set.",98],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",98],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",98],[11,"insert","","Inserts the specified flags in-place.",98],[11,"remove","","Removes the specified flags in-place.",98],[11,"toggle","","Toggles the specified flags in-place.",98],[6,"Output","",""],[11,"bitor","","Returns the union of the two sets of flags.",98],[6,"Output","",""],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",98],[6,"Output","",""],[11,"bitand","","Returns the intersection between the two sets of flags.",98],[6,"Output","",""],[11,"sub","","Returns the set difference of the two sets of flags.",98],[6,"Output","",""],[11,"not","","Returns the complement of this set of flags.",98]],"paths":[[3,"CredentialHelper"],[3,"IndexEntry"],[3,"PushStatus"],[4,"StatusShow"],[4,"ErrorCode"],[4,"RepositoryState"],[4,"Direction"],[4,"ResetType"],[4,"ObjectType"],[4,"BranchType"],[4,"ConfigLevel"],[4,"Delta"],[4,"DiffFormat"],[3,"String"],[3,"CString"],[3,"Path"],[3,"PathBuf"],[3,"OsString"],[3,"RepoBuilder"],[3,"CheckoutBuilder"],[3,"Cert"],[3,"CertHostkey"],[3,"CertX509"],[3,"StringArray"],[3,"Iter"],[3,"IterBytes"],[4,"Service"],[8,"SmartSubtransport"],[3,"Transport"],[3,"Blob"],[3,"Branch"],[3,"Branches"],[3,"Buf"],[3,"Commit"],[3,"Parents"],[3,"Config"],[3,"ConfigEntry"],[3,"ConfigEntries"],[3,"Cred"],[3,"Diff"],[3,"DiffDelta"],[3,"DiffFile"],[3,"DiffOptions"],[3,"Deltas"],[3,"DiffLine"],[3,"DiffHunk"],[3,"DiffStats"],[3,"DiffFindOptions"],[3,"Error"],[3,"Index"],[3,"IndexEntries"],[3,"Note"],[3,"Notes"],[3,"Object"],[3,"Oid"],[3,"Pathspec"],[3,"PathspecMatchList"],[3,"PathspecEntries"],[3,"PathspecDiffEntries"],[3,"PathspecFailedEntries"],[3,"Push"],[3,"Reference"],[3,"References"],[3,"ReferenceNames"],[3,"Reflog"],[3,"ReflogEntry"],[3,"ReflogIter"],[3,"Refspec"],[3,"Remote"],[3,"Refspecs"],[3,"RemoteHead"],[3,"RemoteCallbacks"],[3,"Progress"],[3,"Repository"],[3,"RepositoryInitOptions"],[3,"Revspec"],[3,"Revwalk"],[3,"Signature"],[3,"StatusOptions"],[3,"Statuses"],[3,"StatusIter"],[3,"StatusEntry"],[3,"Submodule"],[3,"Tag"],[3,"Time"],[3,"IndexTime"],[3,"Tree"],[3,"TreeEntry"],[3,"TreeIter"],[8,"IntoCString"],[3,"Sort"],[3,"CredentialType"],[3,"IndexAddOption"],[3,"RevparseMode"],[3,"Status"],[3,"RepositoryInitMode"],[3,"SubmoduleStatus"],[3,"PathspecFlags"],[3,"DiffStatsFormat"]]};

searchIndex['libgit2-sys'] = {"items":[[0,"","libgit2-sys",""],[3,"git_revspec","",""],[12,"from","","",0],[12,"to","","",0],[12,"flags","","",0],[3,"git_error","",""],[12,"message","","",1],[12,"klass","","",1],[3,"git_oid","",""],[12,"id","","",2],[3,"git_strarray","",""],[12,"strings","","",3],[12,"count","","",3],[3,"git_signature","",""],[12,"name","","",4],[12,"email","","",4],[12,"when","","",4],[3,"git_time","",""],[12,"time","","",5],[12,"offset","","",5],[3,"git_clone_options","",""],[12,"version","","",6],[12,"checkout_opts","","",6],[12,"remote_callbacks","","",6],[12,"bare","","",6],[12,"local","","",6],[12,"checkout_branch","","",6],[12,"signature","","",6],[12,"repository_cb","","",6],[12,"repository_cb_payload","","",6],[12,"remote_cb","","",6],[12,"remote_cb_payload","","",6],[3,"git_checkout_options","",""],[12,"version","","",7],[12,"checkout_strategy","","",7],[12,"disable_filters","","",7],[12,"dir_mode","","",7],[12,"file_mode","","",7],[12,"file_open_flags","","",7],[12,"notify_flags","","",7],[12,"notify_cb","","",7],[12,"notify_payload","","",7],[12,"progress_cb","","",7],[12,"progress_payload","","",7],[12,"paths","","",7],[12,"baseline","","",7],[12,"target_directory","","",7],[12,"ancestor_label","","",7],[12,"our_label","","",7],[12,"their_label","","",7],[3,"git_remote_callbacks","",""],[12,"version","","",8],[12,"sideband_progress","","",8],[12,"completion","","",8],[12,"credentials","","",8],[12,"certificate_check","","",8],[12,"transfer_progress","","",8],[12,"update_tips","","",8],[12,"pack_progress","","",8],[12,"push_transfer_progress","","",8],[12,"push_update_reference","","",8],[12,"payload","","",8],[3,"git_cert","",""],[12,"cert_type","","",9],[3,"git_cert_hostkey","",""],[12,"cert_type","","",10],[12,"kind","","",10],[12,"hash_md5","","",10],[12,"hash_sha1","","",10],[3,"git_cert_x509","",""],[12,"cert_type","","",11],[12,"data","","",11],[12,"len","","",11],[3,"git_transfer_progress","",""],[12,"total_objects","","",12],[12,"indexed_objects","","",12],[12,"received_objects","","",12],[12,"local_objects","","",12],[12,"total_deltas","","",12],[12,"indexed_deltas","","",12],[12,"received_bytes","","",12],[3,"git_diff_file","",""],[12,"id","","",13],[12,"path","","",13],[12,"size","","",13],[12,"flags","","",13],[12,"mode","","",13],[3,"git_status_options","",""],[12,"version","","",14],[12,"show","","",14],[12,"flags","","",14],[12,"pathspec","","",14],[3,"git_diff_delta","",""],[12,"status","","",15],[12,"flags","","",15],[12,"similarity","","",15],[12,"nfiles","","",15],[12,"old_file","","",15],[12,"new_file","","",15],[3,"git_status_entry","",""],[12,"status","","",16],[12,"head_to_index","","",16],[12,"index_to_workdir","","",16],[3,"git_buf","",""],[12,"ptr","","",17],[12,"asize","","",17],[12,"size","","",17],[3,"git_index_entry","",""],[12,"ctime","","",18],[12,"mtime","","",18],[12,"dev","","",18],[12,"ino","","",18],[12,"mode","","",18],[12,"uid","","",18],[12,"gid","","",18],[12,"file_size","","",18],[12,"id","","",18],[12,"flags","","",18],[12,"flags_extended","","",18],[12,"path","","",18],[3,"git_index_time","",""],[12,"seconds","","",19],[12,"nanoseconds","","",19],[3,"git_config_entry","",""],[12,"name","","",20],[12,"value","","",20],[12,"level","","",20],[3,"git_cred","",""],[12,"credtype","","",21],[12,"free","","",21],[3,"git_push_options","",""],[12,"version","","",22],[12,"pb_parallelism","","",22],[3,"git_repository_init_options","",""],[12,"version","","",23],[12,"flags","","",23],[12,"mode","","",23],[12,"workdir_path","","",23],[12,"description","","",23],[12,"template_path","","",23],[12,"initial_head","","",23],[12,"origin_url","","",23],[3,"git_remote_head","",""],[12,"local","","",24],[12,"oid","","",24],[12,"loid","","",24],[12,"name","","",24],[12,"symref_target","","",24],[3,"git_diff_hunk","",""],[12,"old_start","","",25],[12,"old_lines","","",25],[12,"new_start","","",25],[12,"new_lines","","",25],[12,"header_len","","",25],[12,"header","","",25],[3,"git_diff_line","",""],[12,"origin","","",26],[12,"old_lineno","","",26],[12,"new_lineno","","",26],[12,"num_lines","","",26],[12,"content_len","","",26],[12,"content_offset","","",26],[12,"content","","",26],[3,"git_diff_options","",""],[12,"version","","",27],[12,"flags","","",27],[12,"ignore_submodules","","",27],[12,"pathspec","","",27],[12,"notify_cb","","",27],[12,"notify_payload","","",27],[12,"context_lines","","",27],[12,"interhunk_lines","","",27],[12,"id_abbrev","","",27],[12,"max_size","","",27],[12,"old_prefix","","",27],[12,"new_prefix","","",27],[3,"git_diff_find_options","",""],[12,"version","","",28],[12,"flags","","",28],[12,"rename_threshold","","",28],[12,"rename_from_rewrite_threshold","","",28],[12,"copy_threshold","","",28],[12,"break_rewrite_threshold","","",28],[12,"rename_limit","","",28],[12,"metric","","",28],[3,"git_diff_similarity_metric","",""],[12,"file_signature","","",29],[12,"buffer_signature","","",29],[12,"free_signature","","",29],[12,"similarity","","",29],[12,"payload","","",29],[3,"git_transport","",""],[12,"version","","",30],[12,"set_callbacks","","",30],[12,"connect","","",30],[12,"ls","","",30],[12,"push","","",30],[12,"negotiate_fetch","","",30],[12,"download_pack","","",30],[12,"is_connected","","",30],[12,"read_flags","","",30],[12,"cancel","","",30],[12,"close","","",30],[12,"free","","",30],[3,"git_smart_subtransport_stream","",""],[12,"subtransport","","",31],[12,"read","","",31],[12,"write","","",31],[12,"free","","",31],[3,"git_smart_subtransport","",""],[12,"action","","",32],[12,"close","","",32],[12,"free","","",32],[3,"git_smart_subtransport_definition","",""],[12,"callback","","",33],[12,"rpc","","",33],[4,"git_blob","",""],[4,"git_branch_iterator","",""],[4,"git_commit","",""],[4,"git_config","",""],[4,"git_config_iterator","",""],[4,"git_index","",""],[4,"git_object","",""],[4,"git_reference","",""],[4,"git_reference_iterator","",""],[4,"git_refspec","",""],[4,"git_remote","",""],[4,"git_repository","",""],[4,"git_revwalk","",""],[4,"git_submodule","",""],[4,"git_tag","",""],[4,"git_tree","",""],[4,"git_tree_entry","",""],[4,"git_push","",""],[4,"git_note","",""],[4,"git_note_iterator","",""],[4,"git_status_list","",""],[4,"git_pathspec","",""],[4,"git_pathspec_match_list","",""],[4,"git_diff","",""],[4,"git_diff_stats","",""],[4,"git_reflog","",""],[4,"git_reflog_entry","",""],[4,"git_error_code","",""],[13,"GIT_OK","","",34],[13,"GIT_ERROR","","",34],[13,"GIT_ENOTFOUND","","",34],[13,"GIT_EEXISTS","","",34],[13,"GIT_EAMBIGUOUS","","",34],[13,"GIT_EBUFS","","",34],[13,"GIT_EUSER","","",34],[13,"GIT_EBAREREPO","","",34],[13,"GIT_EUNBORNBRANCH","","",34],[13,"GIT_EUNMERGED","","",34],[13,"GIT_ENONFASTFORWARD","","",34],[13,"GIT_EINVALIDSPEC","","",34],[13,"GIT_EMERGECONFLICT","","",34],[13,"GIT_ELOCKED","","",34],[13,"GIT_EMODIFIED","","",34],[13,"GIT_PASSTHROUGH","","",34],[13,"GIT_ITEROVER","","",34],[4,"git_error_t","",""],[13,"GITERR_NONE","","",35],[13,"GITERR_NOMEMORY","","",35],[13,"GITERR_OS","","",35],[13,"GITERR_INVALID","","",35],[13,"GITERR_REFERENCE","","",35],[13,"GITERR_ZLIB","","",35],[13,"GITERR_REPOSITORY","","",35],[13,"GITERR_CONFIG","","",35],[13,"GITERR_REGEX","","",35],[13,"GITERR_ODB","","",35],[13,"GITERR_INDEX","","",35],[13,"GITERR_OBJECT","","",35],[13,"GITERR_NET","","",35],[13,"GITERR_TAG","","",35],[13,"GITERR_TREE","","",35],[13,"GITERR_INDEXER","","",35],[13,"GITERR_SSL","","",35],[13,"GITERR_SUBMODULE","","",35],[13,"GITERR_THREAD","","",35],[13,"GITERR_STASH","","",35],[13,"GITERR_CHECKOUT","","",35],[13,"GITERR_FETCHHEAD","","",35],[13,"GITERR_MERGE","","",35],[13,"GITERR_SSH","","",35],[13,"GITERR_FILTER","","",35],[13,"GITERR_REVERT","","",35],[13,"GITERR_CALLBACK","","",35],[13,"GITERR_CHERRYPICK","","",35],[13,"GITERR_DESCRIBE","","",35],[13,"GITERR_REBASE","","",35],[4,"git_repository_state_t","",""],[13,"GIT_REPOSITORY_STATE_NONE","","",36],[13,"GIT_REPOSITORY_STATE_MERGE","","",36],[13,"GIT_REPOSITORY_STATE_REVERT","","",36],[13,"GIT_REPOSITORY_STATE_CHERRYPICK","","",36],[13,"GIT_REPOSITORY_STATE_BISECT","","",36],[13,"GIT_REPOSITORY_STATE_REBASE","","",36],[13,"GIT_REPOSITORY_STATE_REBASE_INTERACTIVE","","",36],[13,"GIT_REPOSITORY_STATE_REBASE_MERGE","","",36],[13,"GIT_REPOSITORY_STATE_APPLY_MAILBOX","","",36],[13,"GIT_REPOSITORY_STATE_APPLY_MAILBOX_OR_REBASE","","",36],[4,"git_direction","",""],[13,"GIT_DIRECTION_FETCH","","",37],[13,"GIT_DIRECTION_PUSH","","",37],[4,"git_clone_local_t","",""],[13,"GIT_CLONE_LOCAL_AUTO","","",38],[13,"GIT_CLONE_LOCAL","","",38],[13,"GIT_CLONE_NO_LOCAL","","",38],[13,"GIT_CLONE_LOCAL_NO_LINKS","","",38],[4,"git_remote_completion_type","",""],[13,"GIT_REMOTE_COMPLETION_DOWNLOAD","","",39],[13,"GIT_REMOTE_COMPLETION_INDEXING","","",39],[13,"GIT_REMOTE_COMPLETION_ERROR","","",39],[4,"git_cert_t","",""],[13,"GIT_CERT_X509","","",40],[13,"GIT_CERT_HOSTKEY_LIBSSH2","","",40],[4,"git_cert_ssh_t","",""],[13,"GIT_CERT_SSH_MD5","","",41],[13,"GIT_CERT_SSH_SHA1","","",41],[4,"git_checkout_notify_t","",""],[13,"GIT_CHECKOUT_NOTIFY_NONE","","",42],[13,"GIT_CHECKOUT_NOTIFY_CONFLICT","","",42],[13,"GIT_CHECKOUT_NOTIFY_DIRTY","","",42],[13,"GIT_CHECKOUT_NOTIFY_UPDATED","","",42],[13,"GIT_CHECKOUT_NOTIFY_UNTRACKED","","",42],[13,"GIT_CHECKOUT_NOTIFY_IGNORED","","",42],[13,"GIT_CHECKOUT_NOTIFY_ALL","","",42],[4,"git_status_t","",""],[13,"GIT_STATUS_CURRENT","","",43],[13,"GIT_STATUS_INDEX_NEW","","",43],[13,"GIT_STATUS_INDEX_MODIFIED","","",43],[13,"GIT_STATUS_INDEX_DELETED","","",43],[13,"GIT_STATUS_INDEX_RENAMED","","",43],[13,"GIT_STATUS_INDEX_TYPECHANGE","","",43],[13,"GIT_STATUS_WT_NEW","","",43],[13,"GIT_STATUS_WT_MODIFIED","","",43],[13,"GIT_STATUS_WT_DELETED","","",43],[13,"GIT_STATUS_WT_TYPECHANGE","","",43],[13,"GIT_STATUS_WT_RENAMED","","",43],[13,"GIT_STATUS_WT_UNREADABLE","","",43],[13,"GIT_STATUS_IGNORED","","",43],[4,"git_status_opt_t","",""],[13,"GIT_STATUS_OPT_INCLUDE_UNTRACKED","","",44],[13,"GIT_STATUS_OPT_INCLUDE_IGNORED","","",44],[13,"GIT_STATUS_OPT_INCLUDE_UNMODIFIED","","",44],[13,"GIT_STATUS_OPT_EXCLUDE_SUBMODULES","","",44],[13,"GIT_STATUS_OPT_RECURSE_UNTRACKED_DIRS","","",44],[13,"GIT_STATUS_OPT_DISABLE_PATHSPEC_MATCH","","",44],[13,"GIT_STATUS_OPT_RECURSE_IGNORED_DIRS","","",44],[13,"GIT_STATUS_OPT_RENAMES_HEAD_TO_INDEX","","",44],[13,"GIT_STATUS_OPT_RENAMES_INDEX_TO_WORKDIR","","",44],[13,"GIT_STATUS_OPT_SORT_CASE_SENSITIVELY","","",44],[13,"GIT_STATUS_OPT_SORT_CASE_INSENSITIVELY","","",44],[13,"GIT_STATUS_OPT_RENAMES_FROM_REWRITES","","",44],[13,"GIT_STATUS_OPT_NO_REFRESH","","",44],[13,"GIT_STATUS_OPT_UPDATE_INDEX","","",44],[13,"GIT_STATUS_OPT_INCLUDE_UNREADABLE","","",44],[13,"GIT_STATUS_OPT_INCLUDE_UNREADABLE_AS_UNTRACKED","","",44],[4,"git_status_show_t","",""],[13,"GIT_STATUS_SHOW_INDEX_AND_WORKDIR","","",45],[13,"GIT_STATUS_SHOW_INDEX_ONLY","","",45],[13,"GIT_STATUS_SHOW_WORKDIR_ONLY","","",45],[4,"git_delta_t","",""],[13,"GIT_DELTA_UNMODIFIED","","",46],[13,"GIT_DELTA_ADDED","","",46],[13,"GIT_DELTA_DELETED","","",46],[13,"GIT_DELTA_MODIFIED","","",46],[13,"GIT_DELTA_RENAMED","","",46],[13,"GIT_DELTA_COPIED","","",46],[13,"GIT_DELTA_IGNORED","","",46],[13,"GIT_DELTA_UNTRACKED","","",46],[13,"GIT_DELTA_TYPECHANGE","","",46],[13,"GIT_DELTA_UNREADABLE","","",46],[4,"git_checkout_strategy_t","",""],[13,"GIT_CHECKOUT_NONE","","",47],[13,"GIT_CHECKOUT_SAFE","","",47],[13,"GIT_CHECKOUT_SAFE_CREATE","","",47],[13,"GIT_CHECKOUT_FORCE","","",47],[13,"GIT_CHECKOUT_ALLOW_CONFLICTS","","",47],[13,"GIT_CHECKOUT_REMOVE_UNTRACKED","","",47],[13,"GIT_CHECKOUT_REMOVE_IGNORED","","",47],[13,"GIT_CHECKOUT_UPDATE_ONLY","","",47],[13,"GIT_CHECKOUT_DONT_UPDATE_INDEX","","",47],[13,"GIT_CHECKOUT_NO_REFRESH","","",47],[13,"GIT_CHECKOUT_SKIP_UNMERGED","","",47],[13,"GIT_CHECKOUT_USE_OURS","","",47],[13,"GIT_CHECKOUT_USE_THEIRS","","",47],[13,"GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH","","",47],[13,"GIT_CHECKOUT_SKIP_LOCKED_DIRECTORIES","","",47],[13,"GIT_CHECKOUT_DONT_OVERWRITE_IGNORED","","",47],[13,"GIT_CHECKOUT_CONFLICT_STYLE_MERGE","","",47],[13,"GIT_CHECKOUT_CONFLICT_STYLE_DIFF3","","",47],[13,"GIT_CHECKOUT_UPDATE_SUBMODULES","","",47],[13,"GIT_CHECKOUT_UPDATE_SUBMODULES_IF_CHANGED","","",47],[4,"git_reset_t","",""],[13,"GIT_RESET_SOFT","","",48],[13,"GIT_RESET_MIXED","","",48],[13,"GIT_RESET_HARD","","",48],[4,"git_otype","",""],[13,"GIT_OBJ_ANY","","",49],[13,"GIT_OBJ_BAD","","",49],[13,"GIT_OBJ__EXT1","","",49],[13,"GIT_OBJ_COMMIT","","",49],[13,"GIT_OBJ_TREE","","",49],[13,"GIT_OBJ_BLOB","","",49],[13,"GIT_OBJ_TAG","","",49],[13,"GIT_OBJ__EXT2","","",49],[13,"GIT_OBJ_OFS_DELTA","","",49],[13,"GIT_OBJ_REF_DELTA","","",49],[4,"git_ref_t","",""],[13,"GIT_REF_INVALID","","",50],[13,"GIT_REF_OID","","",50],[13,"GIT_REF_SYMBOLIC","","",50],[13,"GIT_REF_LISTALL","","",50],[4,"git_filemode_t","",""],[13,"GIT_FILEMODE_UNREADABLE","","",51],[13,"GIT_FILEMODE_TREE","","",51],[13,"GIT_FILEMODE_BLOB","","",51],[13,"GIT_FILEMODE_BLOB_EXECUTABLE","","",51],[13,"GIT_FILEMODE_LINK","","",51],[13,"GIT_FILEMODE_COMMIT","","",51],[4,"git_treewalk_mode","",""],[13,"GIT_TREEWALK_PRE","","",52],[13,"GIT_TREEWALK_POST","","",52],[4,"git_branch_t","",""],[13,"GIT_BRANCH_LOCAL","","",53],[13,"GIT_BRANCH_REMOTE","","",53],[13,"GIT_BRANCH_ALL","","",53],[4,"git_config_level_t","",""],[13,"GIT_CONFIG_LEVEL_SYSTEM","","",54],[13,"GIT_CONFIG_LEVEL_XDG","","",54],[13,"GIT_CONFIG_LEVEL_GLOBAL","","",54],[13,"GIT_CONFIG_LEVEL_LOCAL","","",54],[13,"GIT_CONFIG_LEVEL_APP","","",54],[13,"GIT_CONFIG_HIGHEST_LEVEL","","",54],[4,"git_submodule_update_t","",""],[13,"GIT_SUBMODULE_UPDATE_RESET","","",55],[13,"GIT_SUBMODULE_UPDATE_CHECKOUT","","",55],[13,"GIT_SUBMODULE_UPDATE_REBASE","","",55],[13,"GIT_SUBMODULE_UPDATE_MERGE","","",55],[13,"GIT_SUBMODULE_UPDATE_NONE","","",55],[13,"GIT_SUBMODULE_UPDATE_DEFAULT","","",55],[4,"git_submodule_ignore_t","",""],[13,"GIT_SUBMODULE_IGNORE_RESET","","",56],[13,"GIT_SUBMODULE_IGNORE_NONE","","",56],[13,"GIT_SUBMODULE_IGNORE_UNTRACKED","","",56],[13,"GIT_SUBMODULE_IGNORE_DIRTY","","",56],[13,"GIT_SUBMODULE_IGNORE_ALL","","",56],[13,"GIT_SUBMODULE_IGNORE_DEFAULT","","",56],[4,"git_credtype_t","",""],[13,"GIT_CREDTYPE_USERPASS_PLAINTEXT","","",57],[13,"GIT_CREDTYPE_SSH_KEY","","",57],[13,"GIT_CREDTYPE_SSH_CUSTOM","","",57],[13,"GIT_CREDTYPE_DEFAULT","","",57],[13,"GIT_CREDTYPE_SSH_INTERACTIVE","","",57],[4,"LIBSSH2_SESSION","",""],[4,"LIBSSH2_USERAUTH_KBDINT_PROMPT","",""],[4,"LIBSSH2_USERAUTH_KBDINT_RESPONSE","",""],[4,"git_index_add_option_t","",""],[13,"GIT_INDEX_ADD_DEFAULT","","",58],[13,"GIT_INDEX_ADD_FORCE","","",58],[13,"GIT_INDEX_ADD_DISABLE_PATHSPEC_MATCH","","",58],[13,"GIT_INDEX_ADD_CHECK_PATHSPEC","","",58],[4,"git_repository_init_flag_t","",""],[13,"GIT_REPOSITORY_INIT_BARE","","",59],[13,"GIT_REPOSITORY_INIT_NO_REINIT","","",59],[13,"GIT_REPOSITORY_INIT_NO_DOTGIT_DIR","","",59],[13,"GIT_REPOSITORY_INIT_MKDIR","","",59],[13,"GIT_REPOSITORY_INIT_MKPATH","","",59],[13,"GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE","","",59],[4,"git_repository_init_mode_t","",""],[13,"GIT_REPOSITORY_INIT_SHARED_UMASK","","",60],[13,"GIT_REPOSITORY_INIT_SHARED_GROUP","","",60],[13,"GIT_REPOSITORY_INIT_SHARED_ALL","","",60],[4,"git_sort","",""],[13,"GIT_SORT_NONE","","",61],[13,"GIT_SORT_TOPOLOGICAL","","",61],[13,"GIT_SORT_TIME","","",61],[13,"GIT_SORT_REVERSE","","",61],[4,"git_diff_format_t","",""],[13,"GIT_DIFF_FORMAT_PATCH","","",62],[13,"GIT_DIFF_FORMAT_PATCH_HEADER","","",62],[13,"GIT_DIFF_FORMAT_RAW","","",62],[13,"GIT_DIFF_FORMAT_NAME_ONLY","","",62],[13,"GIT_DIFF_FORMAT_NAME_STATUS","","",62],[4,"git_diff_stats_format_t","",""],[13,"GIT_DIFF_STATS_NONE","","",63],[13,"GIT_DIFF_STATS_FULL","","",63],[13,"GIT_DIFF_STATS_SHORT","","",63],[13,"GIT_DIFF_STATS_NUMBER","","",63],[13,"GIT_DIFF_STATS_INCLUDE_SUMMARY","","",63],[4,"git_smart_service_t","",""],[13,"GIT_SERVICE_UPLOADPACK_LS","","",64],[13,"GIT_SERVICE_UPLOADPACK","","",64],[13,"GIT_SERVICE_RECEIVEPACK_LS","","",64],[13,"GIT_SERVICE_RECEIVEPACK","","",64],[5,"openssl_init","","Initialize openssl for the libgit2 library"],[5,"issue_14344_workaround","",""],[5,"git_libgit2_init","",""],[5,"git_libgit2_shutdown","",""],[5,"git_repository_free","",""],[5,"git_repository_open","",""],[5,"git_repository_init","",""],[5,"git_repository_init_ext","",""],[5,"git_repository_init_init_options","",""],[5,"git_repository_get_namespace","",""],[5,"git_repository_head","",""],[5,"git_repository_is_bare","",""],[5,"git_repository_is_empty","",""],[5,"git_repository_is_shallow","",""],[5,"git_repository_path","",""],[5,"git_repository_state","",""],[5,"git_repository_workdir","",""],[5,"git_repository_index","",""],[5,"git_repository_config","",""],[5,"git_repository_config_snapshot","",""],[5,"git_repository_discover","",""],[5,"git_revparse","",""],[5,"git_revparse_single","",""],[5,"git_object_dup","",""],[5,"git_object_id","",""],[5,"git_object_free","",""],[5,"git_object_lookup","",""],[5,"git_object_type","",""],[5,"git_object_peel","",""],[5,"git_object_short_id","",""],[5,"git_object_type2string","",""],[5,"git_object_string2type","",""],[5,"git_object_typeisloose","",""],[5,"git_oid_fromraw","",""],[5,"git_oid_fromstrn","",""],[5,"git_oid_tostr","",""],[5,"git_oid_cmp","",""],[5,"git_oid_equal","",""],[5,"git_oid_streq","",""],[5,"git_oid_iszero","",""],[5,"giterr_last","",""],[5,"giterr_clear","",""],[5,"giterr_detach","",""],[5,"giterr_set_str","",""],[5,"git_remote_create","",""],[5,"git_remote_lookup","",""],[5,"git_remote_create_anonymous","",""],[5,"git_remote_delete","",""],[5,"git_remote_free","",""],[5,"git_remote_name","",""],[5,"git_remote_pushurl","",""],[5,"git_remote_refspec_count","",""],[5,"git_remote_url","",""],[5,"git_remote_connect","",""],[5,"git_remote_connected","",""],[5,"git_remote_disconnect","",""],[5,"git_remote_save","",""],[5,"git_remote_add_fetch","",""],[5,"git_remote_add_push","",""],[5,"git_remote_clear_refspecs","",""],[5,"git_remote_download","",""],[5,"git_remote_stop","",""],[5,"git_remote_dup","",""],[5,"git_remote_get_fetch_refspecs","",""],[5,"git_remote_get_refspec","",""],[5,"git_remote_is_valid_name","",""],[5,"git_remote_list","",""],[5,"git_remote_rename","",""],[5,"git_remote_fetch","",""],[5,"git_remote_update_tips","",""],[5,"git_remote_update_fetchhead","",""],[5,"git_remote_set_url","",""],[5,"git_remote_set_pushurl","",""],[5,"git_remote_set_update_fetchhead","",""],[5,"git_remote_set_fetch_refspecs","",""],[5,"git_remote_set_push_refspecs","",""],[5,"git_remote_set_callbacks","",""],[5,"git_remote_init_callbacks","",""],[5,"git_remote_stats","",""],[5,"git_remote_ls","",""],[5,"git_refspec_direction","",""],[5,"git_refspec_dst","",""],[5,"git_refspec_dst_matches","",""],[5,"git_refspec_src","",""],[5,"git_refspec_src_matches","",""],[5,"git_refspec_force","",""],[5,"git_refspec_string","",""],[5,"git_strarray_free","",""],[5,"git_signature_default","",""],[5,"git_signature_free","",""],[5,"git_signature_new","",""],[5,"git_signature_now","",""],[5,"git_signature_dup","",""],[5,"git_status_list_new","",""],[5,"git_status_list_entrycount","",""],[5,"git_status_byindex","",""],[5,"git_status_list_free","",""],[5,"git_status_init_options","",""],[5,"git_status_file","",""],[5,"git_status_should_ignore","",""],[5,"git_clone","",""],[5,"git_clone_init_options","",""],[5,"git_reset","",""],[5,"git_reset_default","",""],[5,"git_reference_cmp","",""],[5,"git_reference_delete","",""],[5,"git_reference_free","",""],[5,"git_reference_is_branch","",""],[5,"git_reference_is_note","",""],[5,"git_reference_is_remote","",""],[5,"git_reference_is_tag","",""],[5,"git_reference_is_valid_name","",""],[5,"git_reference_lookup","",""],[5,"git_reference_name","",""],[5,"git_reference_name_to_id","",""],[5,"git_reference_rename","",""],[5,"git_reference_resolve","",""],[5,"git_reference_shorthand","",""],[5,"git_reference_symbolic_target","",""],[5,"git_reference_target","",""],[5,"git_reference_target_peel","",""],[5,"git_reference_type","",""],[5,"git_reference_iterator_new","",""],[5,"git_reference_iterator_glob_new","",""],[5,"git_reference_iterator_free","",""],[5,"git_reference_next","",""],[5,"git_reference_next_name","",""],[5,"git_reference_create","",""],[5,"git_reference_symbolic_create","",""],[5,"git_submodule_add_finalize","",""],[5,"git_submodule_add_setup","",""],[5,"git_submodule_add_to_index","",""],[5,"git_submodule_branch","",""],[5,"git_submodule_foreach","",""],[5,"git_submodule_free","",""],[5,"git_submodule_head_id","",""],[5,"git_submodule_index_id","",""],[5,"git_submodule_init","",""],[5,"git_submodule_location","",""],[5,"git_submodule_lookup","",""],[5,"git_submodule_name","",""],[5,"git_submodule_open","",""],[5,"git_submodule_path","",""],[5,"git_submodule_reload","",""],[5,"git_submodule_reload_all","",""],[5,"git_submodule_save","",""],[5,"git_submodule_set_ignore","",""],[5,"git_submodule_set_update","",""],[5,"git_submodule_set_url","",""],[5,"git_submodule_sync","",""],[5,"git_submodule_update","",""],[5,"git_submodule_url","",""],[5,"git_submodule_wd_id","",""],[5,"git_submodule_status","",""],[5,"git_blob_free","",""],[5,"git_blob_id","",""],[5,"git_blob_is_binary","",""],[5,"git_blob_lookup","",""],[5,"git_blob_lookup_prefix","",""],[5,"git_blob_rawcontent","",""],[5,"git_blob_rawsize","",""],[5,"git_blob_create_frombuffer","",""],[5,"git_blob_create_fromdisk","",""],[5,"git_blob_create_fromworkdir","",""],[5,"git_tree_entry_byid","",""],[5,"git_tree_entry_byindex","",""],[5,"git_tree_entry_byname","",""],[5,"git_tree_entry_bypath","",""],[5,"git_tree_entry_cmp","",""],[5,"git_tree_entry_dup","",""],[5,"git_tree_entry_filemode","",""],[5,"git_tree_entry_filemode_raw","",""],[5,"git_tree_entry_free","",""],[5,"git_tree_entry_id","",""],[5,"git_tree_entry_name","",""],[5,"git_tree_entry_to_object","",""],[5,"git_tree_entry_type","",""],[5,"git_tree_entrycount","",""],[5,"git_tree_free","",""],[5,"git_tree_id","",""],[5,"git_tree_lookup","",""],[5,"git_tree_walk","",""],[5,"git_buf_free","",""],[5,"git_buf_grow","",""],[5,"git_buf_set","",""],[5,"git_commit_author","",""],[5,"git_commit_committer","",""],[5,"git_commit_free","",""],[5,"git_commit_id","",""],[5,"git_commit_lookup","",""],[5,"git_commit_message","",""],[5,"git_commit_message_encoding","",""],[5,"git_commit_message_raw","",""],[5,"git_commit_nth_gen_ancestor","",""],[5,"git_commit_parent","",""],[5,"git_commit_parent_id","",""],[5,"git_commit_parentcount","",""],[5,"git_commit_raw_header","",""],[5,"git_commit_summary","",""],[5,"git_commit_time","",""],[5,"git_commit_time_offset","",""],[5,"git_commit_tree","",""],[5,"git_commit_tree_id","",""],[5,"git_commit_amend","",""],[5,"git_commit_create","",""],[5,"git_branch_create","",""],[5,"git_branch_delete","",""],[5,"git_branch_is_head","",""],[5,"git_branch_iterator_free","",""],[5,"git_branch_iterator_new","",""],[5,"git_branch_lookup","",""],[5,"git_branch_move","",""],[5,"git_branch_name","",""],[5,"git_branch_next","",""],[5,"git_branch_set_upstream","",""],[5,"git_branch_upstream","",""],[5,"git_index_add","",""],[5,"git_index_add_all","",""],[5,"git_index_add_bypath","",""],[5,"git_index_clear","",""],[5,"git_index_entry_stage","",""],[5,"git_index_entrycount","",""],[5,"git_index_find","",""],[5,"git_index_free","",""],[5,"git_index_get_byindex","",""],[5,"git_index_get_bypath","",""],[5,"git_index_new","",""],[5,"git_index_open","",""],[5,"git_index_path","",""],[5,"git_index_read","",""],[5,"git_index_read_tree","",""],[5,"git_index_remove","",""],[5,"git_index_remove_all","",""],[5,"git_index_remove_bypath","",""],[5,"git_index_remove_directory","",""],[5,"git_index_update_all","",""],[5,"git_index_write","",""],[5,"git_index_write_tree","",""],[5,"git_index_write_tree_to","",""],[5,"git_config_add_file_ondisk","",""],[5,"git_config_delete_entry","",""],[5,"git_config_delete_multivar","",""],[5,"git_config_find_global","",""],[5,"git_config_find_system","",""],[5,"git_config_find_xdg","",""],[5,"git_config_free","",""],[5,"git_config_get_bool","",""],[5,"git_config_get_entry","",""],[5,"git_config_get_int32","",""],[5,"git_config_get_int64","",""],[5,"git_config_get_string","",""],[5,"git_config_iterator_free","",""],[5,"git_config_iterator_glob_new","",""],[5,"git_config_iterator_new","",""],[5,"git_config_new","",""],[5,"git_config_next","",""],[5,"git_config_open_default","",""],[5,"git_config_open_global","",""],[5,"git_config_open_level","",""],[5,"git_config_open_ondisk","",""],[5,"git_config_parse_bool","",""],[5,"git_config_parse_int32","",""],[5,"git_config_parse_int64","",""],[5,"git_config_set_bool","",""],[5,"git_config_set_int32","",""],[5,"git_config_set_int64","",""],[5,"git_config_set_string","",""],[5,"git_config_snapshot","",""],[5,"git_cred_default_new","",""],[5,"git_cred_has_username","",""],[5,"git_cred_ssh_custom_new","",""],[5,"git_cred_ssh_interactive_new","",""],[5,"git_cred_ssh_key_from_agent","",""],[5,"git_cred_ssh_key_new","",""],[5,"git_cred_userpass","",""],[5,"git_cred_userpass_plaintext_new","",""],[5,"git_push_add_refspec","",""],[5,"git_push_finish","",""],[5,"git_push_free","",""],[5,"git_push_init_options","",""],[5,"git_push_new","",""],[5,"git_push_set_options","",""],[5,"git_push_update_tips","",""],[5,"git_push_status_foreach","",""],[5,"git_tag_annotation_create","",""],[5,"git_tag_create","",""],[5,"git_tag_create_frombuffer","",""],[5,"git_tag_create_lightweight","",""],[5,"git_tag_delete","",""],[5,"git_tag_foreach","",""],[5,"git_tag_free","",""],[5,"git_tag_id","",""],[5,"git_tag_list","",""],[5,"git_tag_list_match","",""],[5,"git_tag_lookup","",""],[5,"git_tag_lookup_prefix","",""],[5,"git_tag_message","",""],[5,"git_tag_name","",""],[5,"git_tag_peel","",""],[5,"git_tag_tagger","",""],[5,"git_tag_target","",""],[5,"git_tag_target_id","",""],[5,"git_tag_target_type","",""],[5,"git_checkout_head","",""],[5,"git_checkout_index","",""],[5,"git_checkout_tree","",""],[5,"git_checkout_init_options","",""],[5,"git_note_author","",""],[5,"git_note_committer","",""],[5,"git_note_create","",""],[5,"git_note_default_ref","",""],[5,"git_note_free","",""],[5,"git_note_id","",""],[5,"git_note_iterator_free","",""],[5,"git_note_iterator_new","",""],[5,"git_note_message","",""],[5,"git_note_next","",""],[5,"git_note_read","",""],[5,"git_note_remove","",""],[5,"git_revwalk_new","",""],[5,"git_revwalk_free","",""],[5,"git_revwalk_reset","",""],[5,"git_revwalk_sorting","",""],[5,"git_revwalk_push_head","",""],[5,"git_revwalk_push","",""],[5,"git_revwalk_push_ref","",""],[5,"git_revwalk_push_glob","",""],[5,"git_revwalk_push_range","",""],[5,"git_revwalk_simplify_first_parent","",""],[5,"git_revwalk_hide_head","",""],[5,"git_revwalk_hide","",""],[5,"git_revwalk_hide_ref","",""],[5,"git_revwalk_hide_glob","",""],[5,"git_revwalk_next","",""],[5,"git_merge_base","",""],[5,"git_pathspec_free","",""],[5,"git_pathspec_match_diff","",""],[5,"git_pathspec_match_index","",""],[5,"git_pathspec_match_list_diff_entry","",""],[5,"git_pathspec_match_list_entry","",""],[5,"git_pathspec_match_list_entrycount","",""],[5,"git_pathspec_match_list_failed_entry","",""],[5,"git_pathspec_match_list_failed_entrycount","",""],[5,"git_pathspec_match_list_free","",""],[5,"git_pathspec_match_tree","",""],[5,"git_pathspec_match_workdir","",""],[5,"git_pathspec_matches_path","",""],[5,"git_pathspec_new","",""],[5,"git_diff_blob_to_buffer","",""],[5,"git_diff_blobs","",""],[5,"git_diff_buffers","",""],[5,"git_diff_find_similar","",""],[5,"git_diff_find_init_options","",""],[5,"git_diff_foreach","",""],[5,"git_diff_free","",""],[5,"git_diff_get_delta","",""],[5,"git_diff_get_stats","",""],[5,"git_diff_index_to_workdir","",""],[5,"git_diff_init_options","",""],[5,"git_diff_is_sorted_icase","",""],[5,"git_diff_merge","",""],[5,"git_diff_num_deltas","",""],[5,"git_diff_num_deltas_of_type","",""],[5,"git_diff_print","",""],[5,"git_diff_stats_deletions","",""],[5,"git_diff_stats_files_changed","",""],[5,"git_diff_stats_free","",""],[5,"git_diff_stats_insertions","",""],[5,"git_diff_stats_to_buf","",""],[5,"git_diff_status_char","",""],[5,"git_diff_tree_to_index","",""],[5,"git_diff_tree_to_tree","",""],[5,"git_diff_tree_to_workdir","",""],[5,"git_diff_tree_to_workdir_with_index","",""],[5,"git_graph_ahead_behind","",""],[5,"git_graph_descendant_of","",""],[5,"git_reflog_append","",""],[5,"git_reflog_delete","",""],[5,"git_reflog_drop","",""],[5,"git_reflog_entry_byindex","",""],[5,"git_reflog_entry_committer","",""],[5,"git_reflog_entry_id_new","",""],[5,"git_reflog_entry_id_old","",""],[5,"git_reflog_entry_message","",""],[5,"git_reflog_entrycount","",""],[5,"git_reflog_free","",""],[5,"git_reflog_read","",""],[5,"git_reflog_rename","",""],[5,"git_reflog_write","",""],[5,"git_transport_register","",""],[5,"git_transport_unregister","",""],[5,"git_transport_smart","",""],[6,"git_off_t","",""],[6,"git_time_t","",""],[6,"git_revparse_mode_t","",""],[6,"git_checkout_notify_cb","",""],[6,"git_checkout_progress_cb","",""],[6,"git_transport_message_cb","",""],[6,"git_cred_acquire_cb","",""],[6,"git_transfer_progress_cb","",""],[6,"git_packbuilder_progress","",""],[6,"git_push_transfer_progress","",""],[6,"git_transport_certificate_check_cb","",""],[6,"git_repository_create_cb","",""],[6,"git_remote_create_cb","",""],[6,"git_treewalk_cb","",""],[6,"git_index_matched_path_cb","",""],[6,"git_cred_ssh_interactive_callback","",""],[6,"git_cred_sign_callback","",""],[6,"git_tag_foreach_cb","",""],[6,"git_submodule_status_t","",""],[6,"git_pathspec_flag_t","",""],[6,"git_diff_file_cb","",""],[6,"git_diff_hunk_cb","",""],[6,"git_diff_line_cb","",""],[6,"git_diff_line_t","",""],[6,"git_diff_notify_cb","",""],[6,"git_diff_options_t","",""],[6,"git_transport_cb","",""],[6,"git_smart_subtransport_cb","",""],[17,"GIT_OID_RAWSZ","",""],[17,"GIT_OID_HEXSZ","",""],[17,"GIT_CLONE_OPTIONS_VERSION","",""],[17,"GIT_CHECKOUT_OPTIONS_VERSION","",""],[17,"GIT_REMOTE_CALLBACKS_VERSION","",""],[17,"GIT_STATUS_OPTIONS_VERSION","",""],[17,"GIT_REVPARSE_SINGLE","",""],[17,"GIT_REVPARSE_RANGE","",""],[17,"GIT_REVPARSE_MERGE_BASE","",""],[17,"GIT_REPOSITORY_INIT_OPTIONS_VERSION","",""],[17,"GIT_SUBMODULE_STATUS_IN_HEAD","",""],[17,"GIT_SUBMODULE_STATUS_IN_INDEX","",""],[17,"GIT_SUBMODULE_STATUS_IN_CONFIG","",""],[17,"GIT_SUBMODULE_STATUS_IN_WD","",""],[17,"GIT_SUBMODULE_STATUS_INDEX_ADDED","",""],[17,"GIT_SUBMODULE_STATUS_INDEX_DELETED","",""],[17,"GIT_SUBMODULE_STATUS_INDEX_MODIFIED","",""],[17,"GIT_SUBMODULE_STATUS_WD_UNINITIALIZED","",""],[17,"GIT_SUBMODULE_STATUS_WD_ADDED","",""],[17,"GIT_SUBMODULE_STATUS_WD_DELETED","",""],[17,"GIT_SUBMODULE_STATUS_WD_MODIFIED","",""],[17,"GIT_SUBMODULE_STATUS_WD_INDEX_MODIFIED","",""],[17,"GIT_SUBMODULE_STATUS_WD_WD_MODIFIED","",""],[17,"GIT_SUBMODULE_STATUS_WD_UNTRACKED","",""],[17,"GIT_PATHSPEC_DEFAULT","",""],[17,"GIT_PATHSPEC_IGNORE_CASE","",""],[17,"GIT_PATHSPEC_USE_CASE","",""],[17,"GIT_PATHSPEC_NO_GLOB","",""],[17,"GIT_PATHSPEC_NO_MATCH_ERROR","",""],[17,"GIT_PATHSPEC_FIND_FAILURES","",""],[17,"GIT_PATHSPEC_FAILURES_ONLY","",""],[17,"GIT_DIFF_LINE_CONTEXT","",""],[17,"GIT_DIFF_LINE_ADDITION","",""],[17,"GIT_DIFF_LINE_DELETION","",""],[17,"GIT_DIFF_LINE_CONTEXT_EOFNL","",""],[17,"GIT_DIFF_LINE_ADD_EOFNL","",""],[17,"GIT_DIFF_LINE_DEL_EOFNL","",""],[17,"GIT_DIFF_LINE_FILE_HDR","",""],[17,"GIT_DIFF_LINE_HUNK_HDR","",""],[17,"GIT_DIFF_LINE_LINE_BINARY","",""],[17,"GIT_DIFF_NORMAL","",""],[17,"GIT_DIFF_REVERSE","",""],[17,"GIT_DIFF_INCLUDE_IGNORED","",""],[17,"GIT_DIFF_RECURSE_IGNORED_DIRS","",""],[17,"GIT_DIFF_INCLUDE_UNTRACKED","",""],[17,"GIT_DIFF_RECURSE_UNTRACKED_DIRS","",""],[17,"GIT_DIFF_INCLUDE_UNMODIFIED","",""],[17,"GIT_DIFF_INCLUDE_TYPECHANGE","",""],[17,"GIT_DIFF_INCLUDE_TYPECHANGE_TREES","",""],[17,"GIT_DIFF_IGNORE_FILEMODE","",""],[17,"GIT_DIFF_IGNORE_SUBMODULES","",""],[17,"GIT_DIFF_IGNORE_CASE","",""],[17,"GIT_DIFF_DISABLE_PATHSPEC_MATCH","",""],[17,"GIT_DIFF_SKIP_BINARY_CHECK","",""],[17,"GIT_DIFF_ENABLE_FAST_UNTRACKED_DIRS","",""],[17,"GIT_DIFF_UPDATE_INDEX","",""],[17,"GIT_DIFF_INCLUDE_UNREADABLE","",""],[17,"GIT_DIFF_INCLUDE_UNREADABLE_AS_UNTRACKED","",""],[17,"GIT_DIFF_FORCE_TEXT","",""],[17,"GIT_DIFF_FORCE_BINARY","",""],[17,"GIT_DIFF_IGNORE_WHITESPACE","",""],[17,"GIT_DIFF_IGNORE_WHITESPACE_CHANGE","",""],[17,"GIT_DIFF_IGNORE_WHITESPACE_EOL","",""],[17,"GIT_DIFF_SHOW_UNTRACKED_CONTENT","",""],[17,"GIT_DIFF_SHOW_UNMODIFIED","",""],[17,"GIT_DIFF_PATIENCE","",""],[17,"GIT_DIFF_MINIMAL","",""],[17,"GIT_DIFF_SHOW_BINARY","",""],[17,"GIT_DIFF_FIND_OPTIONS_VERSION","",""],[17,"GIT_DIFF_FIND_BY_CONFIG","",""],[17,"GIT_DIFF_FIND_RENAMES","",""],[17,"GIT_DIFF_FIND_RENAMES_FROM_REWRITES","",""],[17,"GIT_DIFF_FIND_COPIES","",""],[17,"GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED","",""],[17,"GIT_DIFF_FIND_REWRITES","",""],[17,"GIT_DIFF_BREAK_REWRITES","",""],[17,"GIT_DIFF_FIND_AND_BREAK_REWRITES","",""],[17,"GIT_DIFF_FIND_FOR_UNTRACKED","",""],[17,"GIT_DIFF_FIND_ALL","",""],[17,"GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE","",""],[17,"GIT_DIFF_FIND_IGNORE_WHITESPACE","",""],[17,"GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE","",""],[17,"GIT_DIFF_FIND_EXACT_MATCH_ONLY","",""],[17,"GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY","",""],[17,"GIT_DIFF_FIND_REMOVE_UNMODIFIED","",""],[11,"eq","","",5],[11,"ne","","",5],[11,"clone","","",5],[11,"clone","","",34],[11,"eq","","",34],[11,"ne","","",34],[11,"eq","","",40],[11,"ne","","",40],[11,"eq","","",19],[11,"ne","","",19],[11,"clone","","",19]],"paths":[[3,"git_revspec"],[3,"git_error"],[3,"git_oid"],[3,"git_strarray"],[3,"git_signature"],[3,"git_time"],[3,"git_clone_options"],[3,"git_checkout_options"],[3,"git_remote_callbacks"],[3,"git_cert"],[3,"git_cert_hostkey"],[3,"git_cert_x509"],[3,"git_transfer_progress"],[3,"git_diff_file"],[3,"git_status_options"],[3,"git_diff_delta"],[3,"git_status_entry"],[3,"git_buf"],[3,"git_index_entry"],[3,"git_index_time"],[3,"git_config_entry"],[3,"git_cred"],[3,"git_push_options"],[3,"git_repository_init_options"],[3,"git_remote_head"],[3,"git_diff_hunk"],[3,"git_diff_line"],[3,"git_diff_options"],[3,"git_diff_find_options"],[3,"git_diff_similarity_metric"],[3,"git_transport"],[3,"git_smart_subtransport_stream"],[3,"git_smart_subtransport"],[3,"git_smart_subtransport_definition"],[4,"git_error_code"],[4,"git_error_t"],[4,"git_repository_state_t"],[4,"git_direction"],[4,"git_clone_local_t"],[4,"git_remote_completion_type"],[4,"git_cert_t"],[4,"git_cert_ssh_t"],[4,"git_checkout_notify_t"],[4,"git_status_t"],[4,"git_status_opt_t"],[4,"git_status_show_t"],[4,"git_delta_t"],[4,"git_checkout_strategy_t"],[4,"git_reset_t"],[4,"git_otype"],[4,"git_ref_t"],[4,"git_filemode_t"],[4,"git_treewalk_mode"],[4,"git_branch_t"],[4,"git_config_level_t"],[4,"git_submodule_update_t"],[4,"git_submodule_ignore_t"],[4,"git_credtype_t"],[4,"git_index_add_option_t"],[4,"git_repository_init_flag_t"],[4,"git_repository_init_mode_t"],[4,"git_sort"],[4,"git_diff_format_t"],[4,"git_diff_stats_format_t"],[4,"git_smart_service_t"]]};

searchIndex['curl'] = {"items":[[0,"","curl",""],[3,"ErrCode","",""],[3,"Version","",""],[3,"Protocols","",""],[5,"version","",""],[5,"version_info","",""],[11,"is_success","","",0],[11,"code","","",0],[11,"fmt","","",0],[11,"fmt","","",0],[11,"description","","",0],[11,"version_str","","",1],[11,"version_major","","",1],[11,"version_minor","","",1],[11,"version_patch","","",1],[11,"host","","",1],[11,"is_ipv6_enabled","","",1],[11,"is_kerbos4_enabled","","",1],[11,"is_ssl_enabled","","",1],[11,"is_libz_enabled","","",1],[11,"is_ntlm_enabled","","",1],[11,"is_gss_negotiate_enabled","","",1],[11,"is_debug_enabled","","",1],[11,"is_async_dns_enabled","","",1],[11,"is_spengo_enabled","","",1],[11,"is_large_file_enabled","","",1],[11,"is_idn_enabled","","",1],[11,"is_sspi_enabled","","",1],[11,"is_conv_enabled","","",1],[11,"is_curl_debug_enabled","","",1],[11,"is_tls_auth_srp_enabled","","",1],[11,"is_ntlm_wb_enabled","","",1],[11,"is_http2_enabled","","",1],[11,"ssl_version","","",1],[11,"libz_version","","",1],[11,"protocols","","",1],[11,"ares_version","","",1],[11,"ares_version_num","","",1],[11,"idn_version","","",1],[11,"iconv_version","","",1],[11,"ssh_version","","",1],[11,"clone","","",2],[11,"next","","",2],[11,"fmt","","",2],[0,"http","",""],[3,"Response","curl::http",""],[5,"handle","",""],[0,"body","",""],[4,"Body","curl::http::body",""],[13,"FixedBody","","",3],[13,"ChunkedBody","","",3],[8,"ToBody","",""],[10,"to_body","","",4],[11,"get_size","","",3],[11,"read","","",3],[0,"handle","curl::http",""],[3,"Handle","curl::http::handle",""],[3,"Request","",""],[4,"Method","",""],[13,"Options","","",5],[13,"Get","","",5],[13,"Head","","",5],[13,"Post","","",5],[13,"Put","","",5],[13,"Delete","","",5],[13,"Trace","","",5],[13,"Connect","","",5],[8,"ToUrl","",""],[10,"with_url_str","","",6],[11,"new","","",7],[11,"timeout","","",7],[11,"connect_timeout","","",7],[11,"verbose","","",7],[11,"proxy","","",7],[11,"ssl_ca_path","","",7],[11,"ssl_ca_info","","",7],[11,"cookie_jar","","",7],[11,"cookie_file","","",7],[11,"cookies","","",7],[11,"get","","",7],[11,"head","","",7],[11,"post","","",7],[11,"put","","",7],[11,"delete","","",7],[11,"new","","",8],[11,"uri","","",8],[11,"body","","",8],[11,"content_type","","",8],[11,"content_length","","",8],[11,"chunked","","",8],[11,"expect_continue","","",8],[11,"header","","",8],[11,"get_header","","",8],[11,"headers","","",8],[11,"progress","","",8],[11,"follow_redirects","","",8],[11,"exec","","",8],[11,"with_url_str","collections::string","",9],[0,"header","curl::http",""],[5,"parse","curl::http::header","Simple header parser extracts the header name and value, stripping out\nstarting and trailing white space. It does not, however, normalize header\nvalue whitespace"],[11,"new","curl::http","",10],[11,"get_code","","",10],[11,"get_headers","","",10],[11,"get_header","","",10],[11,"get_body","","",10],[11,"move_body","","",10],[11,"fmt","","",10],[6,"Headers","",""],[6,"ProgressCb","curl",""]],"paths":[[3,"ErrCode"],[3,"Version"],[3,"Protocols"],[4,"Body"],[8,"ToBody"],[4,"Method"],[8,"ToUrl"],[3,"Handle"],[3,"Request"],[3,"String"],[3,"Response"]]};

searchIndex['libssh2-sys'] = {"items":[[0,"","libssh2-sys",""],[3,"libssh2_agent_publickey","",""],[12,"magic","","",0],[12,"node","","",0],[12,"blob","","",0],[12,"blob_len","","",0],[12,"comment","","",0],[3,"libssh2_knownhost","",""],[12,"magic","","",1],[12,"node","","",1],[12,"name","","",1],[12,"key","","",1],[12,"typemask","","",1],[3,"LIBSSH2_SFTP_ATTRIBUTES","",""],[12,"flags","","",2],[12,"filesize","","",2],[12,"uid","","",2],[12,"gid","","",2],[12,"permissions","","",2],[12,"atime","","",2],[12,"mtime","","",2],[3,"LIBSSH2_SFTP_STATVFS","",""],[12,"f_bsize","","",3],[12,"f_frsize","","",3],[12,"f_blocks","","",3],[12,"f_bfree","","",3],[12,"f_bavail","","",3],[12,"f_files","","",3],[12,"f_ffree","","",3],[12,"f_favail","","",3],[12,"f_fsid","","",3],[12,"f_flag","","",3],[12,"f_namemax","","",3],[4,"LIBSSH2_SESSION","",""],[4,"LIBSSH2_AGENT","",""],[4,"LIBSSH2_CHANNEL","",""],[4,"LIBSSH2_LISTENER","",""],[4,"LIBSSH2_KNOWNHOSTS","",""],[4,"LIBSSH2_SFTP","",""],[4,"LIBSSH2_SFTP_HANDLE","",""],[5,"issue_14344_workaround","",""],[5,"libssh2_init","",""],[5,"libssh2_exit","",""],[5,"libssh2_free","",""],[5,"libssh2_hostkey_hash","",""],[5,"libssh2_session_init_ex","",""],[5,"libssh2_session_free","",""],[5,"libssh2_session_banner_get","",""],[5,"libssh2_session_banner_set","",""],[5,"libssh2_session_disconnect_ex","",""],[5,"libssh2_session_flag","",""],[5,"libssh2_session_get_blocking","",""],[5,"libssh2_session_get_timeout","",""],[5,"libssh2_session_hostkey","",""],[5,"libssh2_session_method_pref","",""],[5,"libssh2_session_methods","",""],[5,"libssh2_session_set_blocking","",""],[5,"libssh2_session_set_timeout","",""],[5,"libssh2_session_supported_algs","",""],[5,"libssh2_session_last_error","",""],[5,"libssh2_session_handshake","",""],[5,"libssh2_keepalive_config","",""],[5,"libssh2_keepalive_send","",""],[5,"libssh2_agent_init","",""],[5,"libssh2_agent_free","",""],[5,"libssh2_agent_connect","",""],[5,"libssh2_agent_disconnect","",""],[5,"libssh2_agent_list_identities","",""],[5,"libssh2_agent_get_identity","",""],[5,"libssh2_agent_userauth","",""],[5,"libssh2_channel_free","",""],[5,"libssh2_channel_close","",""],[5,"libssh2_channel_wait_closed","",""],[5,"libssh2_channel_wait_eof","",""],[5,"libssh2_channel_eof","",""],[5,"libssh2_channel_process_startup","",""],[5,"libssh2_channel_flush_ex","",""],[5,"libssh2_channel_write_ex","",""],[5,"libssh2_channel_get_exit_signal","",""],[5,"libssh2_channel_get_exit_status","",""],[5,"libssh2_channel_open_ex","",""],[5,"libssh2_channel_read_ex","",""],[5,"libssh2_channel_setenv_ex","",""],[5,"libssh2_channel_send_eof","",""],[5,"libssh2_channel_request_pty_ex","",""],[5,"libssh2_channel_request_pty_size_ex","",""],[5,"libssh2_channel_window_read_ex","",""],[5,"libssh2_channel_window_write_ex","",""],[5,"libssh2_channel_receive_window_adjust2","",""],[5,"libssh2_channel_direct_tcpip_ex","",""],[5,"libssh2_channel_forward_accept","",""],[5,"libssh2_channel_forward_cancel","",""],[5,"libssh2_channel_forward_listen_ex","",""],[5,"libssh2_userauth_authenticated","",""],[5,"libssh2_userauth_list","",""],[5,"libssh2_userauth_hostbased_fromfile_ex","",""],[5,"libssh2_userauth_publickey_fromfile_ex","",""],[5,"libssh2_userauth_password_ex","",""],[5,"libssh2_knownhost_free","",""],[5,"libssh2_knownhost_addc","",""],[5,"libssh2_knownhost_check","",""],[5,"libssh2_knownhost_checkp","",""],[5,"libssh2_knownhost_del","",""],[5,"libssh2_knownhost_get","",""],[5,"libssh2_knownhost_readfile","",""],[5,"libssh2_knownhost_readline","",""],[5,"libssh2_knownhost_writefile","",""],[5,"libssh2_knownhost_writeline","",""],[5,"libssh2_knownhost_init","",""],[5,"libssh2_scp_recv","",""],[5,"libssh2_scp_send64","",""],[5,"libssh2_sftp_init","",""],[5,"libssh2_sftp_shutdown","",""],[5,"libssh2_sftp_last_error","",""],[5,"libssh2_sftp_open_ex","",""],[5,"libssh2_sftp_close_handle","",""],[5,"libssh2_sftp_mkdir_ex","",""],[5,"libssh2_sftp_fsync","",""],[5,"libssh2_sftp_fstat_ex","",""],[5,"libssh2_sftp_fstatvfs","",""],[5,"libssh2_sftp_stat_ex","",""],[5,"libssh2_sftp_read","",""],[5,"libssh2_sftp_symlink_ex","",""],[5,"libssh2_sftp_rename_ex","",""],[5,"libssh2_sftp_rmdir_ex","",""],[5,"libssh2_sftp_write","",""],[5,"libssh2_sftp_tell64","",""],[5,"libssh2_sftp_seek64","",""],[5,"libssh2_sftp_readdir_ex","",""],[6,"LIBSSH2_ALLOC_FUNC","",""],[6,"LIBSSH2_FREE_FUNC","",""],[6,"LIBSSH2_REALLOC_FUNC","",""],[6,"LIBSSH2_PASSWD_CHANGEREQ_FUNC","",""],[6,"libssh2_socket_t","",""],[17,"SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT","",""],[17,"SSH_DISCONNECT_PROTOCOL_ERROR","",""],[17,"SSH_DISCONNECT_KEY_EXCHANGE_FAILED","",""],[17,"SSH_DISCONNECT_RESERVED","",""],[17,"SSH_DISCONNECT_MAC_ERROR","",""],[17,"SSH_DISCONNECT_COMPRESSION_ERROR","",""],[17,"SSH_DISCONNECT_SERVICE_NOT_AVAILABLE","",""],[17,"SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED","",""],[17,"SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE","",""],[17,"SSH_DISCONNECT_CONNECTION_LOST","",""],[17,"SSH_DISCONNECT_BY_APPLICATION","",""],[17,"SSH_DISCONNECT_TOO_MANY_CONNECTIONS","",""],[17,"SSH_DISCONNECT_AUTH_CANCELLED_BY_USER","",""],[17,"SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE","",""],[17,"SSH_DISCONNECT_ILLEGAL_USER_NAME","",""],[17,"LIBSSH2_FLAG_SIGPIPE","",""],[17,"LIBSSH2_FLAG_COMPRESS","",""],[17,"LIBSSH2_HOSTKEY_TYPE_UNKNOWN","",""],[17,"LIBSSH2_HOSTKEY_TYPE_RSA","",""],[17,"LIBSSH2_HOSTKEY_TYPE_DSS","",""],[17,"LIBSSH2_METHOD_KEX","",""],[17,"LIBSSH2_METHOD_HOSTKEY","",""],[17,"LIBSSH2_METHOD_CRYPT_CS","",""],[17,"LIBSSH2_METHOD_CRYPT_SC","",""],[17,"LIBSSH2_METHOD_MAC_CS","",""],[17,"LIBSSH2_METHOD_MAC_SC","",""],[17,"LIBSSH2_METHOD_COMP_CS","",""],[17,"LIBSSH2_METHOD_COMP_SC","",""],[17,"LIBSSH2_METHOD_LANG_CS","",""],[17,"LIBSSH2_METHOD_LANG_SC","",""],[17,"LIBSSH2_CHANNEL_PACKET_DEFAULT","",""],[17,"LIBSSH2_CHANNEL_WINDOW_DEFAULT","",""],[17,"LIBSSH2_ERROR_BANNER_RECV","",""],[17,"LIBSSH2_ERROR_BANNER_SEND","",""],[17,"LIBSSH2_ERROR_INVALID_MAC","",""],[17,"LIBSSH2_ERROR_KEX_FAILURE","",""],[17,"LIBSSH2_ERROR_ALLOC","",""],[17,"LIBSSH2_ERROR_SOCKET_SEND","",""],[17,"LIBSSH2_ERROR_KEY_EXCHANGE_FAILURE","",""],[17,"LIBSSH2_ERROR_TIMEOUT","",""],[17,"LIBSSH2_ERROR_HOSTKEY_INIT","",""],[17,"LIBSSH2_ERROR_HOSTKEY_SIGN","",""],[17,"LIBSSH2_ERROR_DECRYPT","",""],[17,"LIBSSH2_ERROR_SOCKET_DISCONNECT","",""],[17,"LIBSSH2_ERROR_PROTO","",""],[17,"LIBSSH2_ERROR_PASSWORD_EXPIRED","",""],[17,"LIBSSH2_ERROR_FILE","",""],[17,"LIBSSH2_ERROR_METHOD_NONE","",""],[17,"LIBSSH2_ERROR_AUTHENTICATION_FAILED","",""],[17,"LIBSSH2_ERROR_PUBLICKEY_UNRECOGNIZED","",""],[17,"LIBSSH2_ERROR_PUBLICKEY_UNVERIFIED","",""],[17,"LIBSSH2_ERROR_CHANNEL_OUTOFORDER","",""],[17,"LIBSSH2_ERROR_CHANNEL_FAILURE","",""],[17,"LIBSSH2_ERROR_CHANNEL_REQUEST_DENIED","",""],[17,"LIBSSH2_ERROR_CHANNEL_UNKNOWN","",""],[17,"LIBSSH2_ERROR_CHANNEL_WINDOW_EXCEEDED","",""],[17,"LIBSSH2_ERROR_CHANNEL_PACKET_EXCEEDED","",""],[17,"LIBSSH2_ERROR_CHANNEL_CLOSED","",""],[17,"LIBSSH2_ERROR_CHANNEL_EOF_SENT","",""],[17,"LIBSSH2_ERROR_SCP_PROTOCOL","",""],[17,"LIBSSH2_ERROR_ZLIB","",""],[17,"LIBSSH2_ERROR_SOCKET_TIMEOUT","",""],[17,"LIBSSH2_ERROR_SFTP_PROTOCOL","",""],[17,"LIBSSH2_ERROR_REQUEST_DENIED","",""],[17,"LIBSSH2_ERROR_METHOD_NOT_SUPPORTED","",""],[17,"LIBSSH2_ERROR_INVAL","",""],[17,"LIBSSH2_ERROR_INVALID_POLL_TYPE","",""],[17,"LIBSSH2_ERROR_PUBLICKEY_PROTOCOL","",""],[17,"LIBSSH2_ERROR_EAGAIN","",""],[17,"LIBSSH2_ERROR_BUFFER_TOO_SMALL","",""],[17,"LIBSSH2_ERROR_BAD_USE","",""],[17,"LIBSSH2_ERROR_COMPRESS","",""],[17,"LIBSSH2_ERROR_OUT_OF_BOUNDARY","",""],[17,"LIBSSH2_ERROR_AGENT_PROTOCOL","",""],[17,"LIBSSH2_ERROR_SOCKET_RECV","",""],[17,"LIBSSH2_ERROR_ENCRYPT","",""],[17,"LIBSSH2_ERROR_BAD_SOCKET","",""],[17,"LIBSSH2_ERROR_KNOWN_HOSTS","",""],[17,"LIBSSH2_HOSTKEY_HASH_MD5","",""],[17,"LIBSSH2_HOSTKEY_HASH_SHA1","",""],[17,"LIBSSH2_KNOWNHOST_FILE_OPENSSH","",""],[17,"LIBSSH2_KNOWNHOST_CHECK_MATCH","",""],[17,"LIBSSH2_KNOWNHOST_CHECK_MISMATCH","",""],[17,"LIBSSH2_KNOWNHOST_CHECK_NOTFOUND","",""],[17,"LIBSSH2_KNOWNHOST_CHECK_FAILURE","",""],[17,"LIBSSH2_KNOWNHOST_TYPE_PLAIN","",""],[17,"LIBSSH2_KNOWNHOST_TYPE_SHA1","",""],[17,"LIBSSH2_KNOWNHOST_TYPE_CUSTOM","",""],[17,"LIBSSH2_KNOWNHOST_KEYENC_RAW","",""],[17,"LIBSSH2_KNOWNHOST_KEYENC_BASE64","",""],[17,"LIBSSH2_KNOWNHOST_KEY_RSA1","",""],[17,"LIBSSH2_KNOWNHOST_KEY_SSHRSA","",""],[17,"LIBSSH2_KNOWNHOST_KEY_SSHDSS","",""],[17,"LIBSSH2_KNOWNHOST_KEY_UNKNOWN","",""],[17,"LIBSSH2_FXF_READ","",""],[17,"LIBSSH2_FXF_WRITE","",""],[17,"LIBSSH2_FXF_APPEND","",""],[17,"LIBSSH2_FXF_CREAT","",""],[17,"LIBSSH2_FXF_TRUNC","",""],[17,"LIBSSH2_FXF_EXCL","",""],[17,"LIBSSH2_SFTP_OPENFILE","",""],[17,"LIBSSH2_SFTP_OPENDIR","",""],[17,"LIBSSH2_SFTP_ATTR_SIZE","",""],[17,"LIBSSH2_SFTP_ATTR_UIDGID","",""],[17,"LIBSSH2_SFTP_ATTR_PERMISSIONS","",""],[17,"LIBSSH2_SFTP_ATTR_ACMODTIME","",""],[17,"LIBSSH2_SFTP_ATTR_EXTENDED","",""],[17,"LIBSSH2_SFTP_STAT","",""],[17,"LIBSSH2_SFTP_LSTAT","",""],[17,"LIBSSH2_SFTP_SETSTAT","",""],[17,"LIBSSH2_SFTP_SYMLINK","",""],[17,"LIBSSH2_SFTP_READLINK","",""],[17,"LIBSSH2_SFTP_REALPATH","",""],[17,"LIBSSH2_SFTP_RENAME_OVERWRITE","",""],[17,"LIBSSH2_SFTP_RENAME_ATOMIC","",""],[17,"LIBSSH2_SFTP_RENAME_NATIVE","",""]],"paths":[[3,"libssh2_agent_publickey"],[3,"libssh2_knownhost"],[3,"LIBSSH2_SFTP_ATTRIBUTES"],[3,"LIBSSH2_SFTP_STATVFS"]]};

searchIndex['url'] = {"items":[[0,"","url","<a href=\"https://github.com/servo/rust-url\"><img style=\"position: absolute; top: 0; left: 0; border: 0;\" src=\"../github.png\" alt=\"Fork me on GitHub\"></a>\n<style>.sidebar { margin-top: 53px }</style>"],[3,"Ipv6Address","","A 128 bit IPv6 address"],[12,"pieces","","",0],[3,"Url","","The parsed representation of an absolute URL."],[12,"scheme","","The scheme (a.k.a. protocol) of the URL, in ASCII lower case.",1],[12,"scheme_data","","The components of the URL whose representation depends on where the scheme is *relative*.",1],[12,"query","","The query string of the URL.",1],[12,"fragment","","The fragment identifier of the URL.",1],[3,"RelativeSchemeData","","Components for URLs in a *relative* scheme such as HTTP."],[12,"username","","The username of the URL, as a possibly empty, pecent-encoded string.",2],[12,"password","","The password of the URL.",2],[12,"host","","The host of the URL, either a domain name or an IPv4 address",2],[12,"port","","The port number of the URL.\n`None` for file-like schemes, or to indicate the default port number.",2],[12,"default_port","","The default port number for the URL’s scheme.\n`None` for file-like schemes.",2],[12,"path","","The path of the URL, as vector of pecent-encoded strings.",2],[3,"UrlParser","","A set of optional parameters for URL parsing."],[4,"Host","","The host name of an URL."],[13,"Domain","","A (DNS) domain name or an IPv4 address.",3],[13,"Ipv6","","An IPv6 address, represented inside `[...]` square brackets\nso that `:` colon characters in the address are not ambiguous\nwith the port number delimiter.",3],[4,"ParseError","","Errors that can occur during parsing."],[13,"EmptyHost","","",4],[13,"InvalidScheme","","",4],[13,"InvalidPort","","",4],[13,"InvalidIpv6Address","","",4],[13,"InvalidDomainCharacter","","",4],[13,"InvalidCharacter","","",4],[13,"InvalidBackslash","","",4],[13,"InvalidPercentEncoded","","",4],[13,"InvalidAtSymbolInUser","","",4],[13,"ExpectedTwoSlashes","","",4],[13,"ExpectedInitialSlash","","",4],[13,"NonUrlCodePoint","","",4],[13,"RelativeUrlWithScheme","","",4],[13,"RelativeUrlWithoutBase","","",4],[13,"RelativeUrlWithNonRelativeBase","","",4],[13,"NonAsciiDomainsNotSupportedYet","","",4],[13,"CannotSetJavascriptFragment","","",4],[13,"CannotSetPortWithFileLikeScheme","","",4],[13,"CannotSetUsernameWithNonRelativeScheme","","",4],[13,"CannotSetPasswordWithNonRelativeScheme","","",4],[13,"CannotSetHostPortWithNonRelativeScheme","","",4],[13,"CannotSetHostWithNonRelativeScheme","","",4],[13,"CannotSetPortWithNonRelativeScheme","","",4],[13,"CannotSetPathWithNonRelativeScheme","","",4],[4,"SchemeData","","The components of the URL whose representation depends on where the scheme is *relative*."],[13,"Relative","","Components for URLs in a *relative* scheme such as HTTP.",5],[13,"NonRelative","","No further structure is assumed for *non-relative* schemes such as `data` and `mailto`.",5],[4,"SchemeType","","Determines the behavior of the URL parser for a given scheme."],[13,"NonRelative","","Indicate that the scheme is *non-relative*.",6],[13,"Relative","","Indicate that the scheme is *relative*, and what the default port number is.",6],[13,"FileLike","","Indicate a *relative* scheme similar to the *file* scheme.",6],[5,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier."],[5,"whatwg_scheme_type_mapper","","http://url.spec.whatwg.org/#relative-scheme"],[11,"fmt","","",3],[11,"clone","","",3],[11,"eq","","",3],[11,"ne","","",3],[11,"fmt","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"clone","","",0],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",3],[11,"serialize","","Serialize the host as a string.",3],[11,"fmt","","",3],[11,"parse","","Parse an IPv6 address, without the [] square brackets.",0],[11,"serialize","","Serialize the IPv6 address to a string.",0],[11,"fmt","","",0],[11,"fmt","","",4],[11,"clone","","",4],[11,"eq","","",4],[11,"ne","","",4],[11,"description","","",4],[11,"fmt","","",4],[0,"percent_encoding","",""],[3,"EncodeSet","url::percent_encoding","Represents a set of characters / bytes that should be percent-encoded."],[5,"percent_encode_to","","Percent-encode the given bytes, and push the result to `output`."],[5,"percent_encode","","Percent-encode the given bytes."],[5,"utf8_percent_encode_to","","Percent-encode the UTF-8 encoding of the given string, and push the result to `output`."],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string."],[5,"percent_decode_to","","Percent-decode the given bytes, and push the result to `output`."],[5,"percent_decode","","Percent-decode the given bytes."],[5,"lossy_utf8_percent_decode","","Percent-decode the given bytes, and decode the result as UTF-8."],[5,"from_hex","",""],[7,"SIMPLE_ENCODE_SET","","This encode set is used for fragment identifier and non-relative scheme data."],[7,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings."],[7,"DEFAULT_ENCODE_SET","","This encode set is used for path components."],[7,"USERINFO_ENCODE_SET","","This encode set is used in the URL parser for usernames and passwords."],[7,"PASSWORD_ENCODE_SET","","This encode set should be used when setting the password field of a parsed URL."],[7,"USERNAME_ENCODE_SET","","This encode set should be used when setting the username field of a parsed URL."],[7,"FORM_URLENCODED_ENCODE_SET","","This encode set is used in `application/x-www-form-urlencoded` serialization."],[0,"form_urlencoded","url","Parser and serializer for the [`application/x-www-form-urlencoded` format](\nhttp://url.spec.whatwg.org/#application/x-www-form-urlencoded),\nas used by HTML forms."],[5,"parse","url::form_urlencoded","Convert a byte string in the `application/x-www-form-urlencoded` format\ninto a vector of (name, value) pairs."],[5,"serialize_owned","","Convert a slice of owned (name, value) pairs\ninto a string in the `application/x-www-form-urlencoded` format."],[5,"serialize","","Convert an iterator of (name, value) pairs\ninto a string in the `application/x-www-form-urlencoded` format."],[0,"punycode","url","Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation."],[5,"decode_to_string","url::punycode","Convert Punycode to an Unicode `String`."],[5,"decode","","Convert Punycode to Unicode."],[5,"encode_str","","Convert an Unicode `str` to Punycode."],[5,"encode","","Convert Unicode to Punycode."],[0,"format","url","Formatting utilities for URLs."],[3,"PathFormatter","url::format","Formatter and serializer for URL path data."],[12,"path","","The path as a slice of string-like objects (String or &str).",7],[3,"UserInfoFormatter","","Formatter and serializer for URL username and password data."],[12,"username","","URL username as a string slice.",8],[12,"password","","URL password as an optional string slice.",8],[3,"UrlNoFragmentFormatter","","Formatter for URLs which ignores the fragment field."],[12,"url","","",9],[11,"fmt","","",7],[11,"fmt","","",8],[11,"fmt","","",9],[6,"ErrorHandler","url","This is called on non-fatal parse errors."],[6,"ParseResult","",""],[8,"ToUrlPath","",""],[10,"to_url_path","","",10],[8,"FromUrlPath","",""],[10,"from_url_path","","",11],[11,"fmt","","",1],[11,"clone","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"fmt","","",5],[11,"clone","","",5],[11,"eq","","",5],[11,"ne","","",5],[11,"fmt","","",2],[11,"clone","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"hash","","",1],[11,"new","","Return a new UrlParser with default parameters.",12],[11,"base_url","","Set the base URL used for resolving relative URL references, and return the `UrlParser`.\nThe default is no base URL, so that relative URLs references fail to parse.",12],[11,"error_handler","","Set an error handler for non-fatal parse errors, and return the `UrlParser`.",12],[11,"scheme_type_mapper","","Set a *scheme type mapper*, and return the `UrlParser`.",12],[11,"parse","","Parse `input` as an URL, with all the parameters previously set in the `UrlParser`.",12],[11,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",12],[11,"fmt","","",6],[11,"eq","","",6],[11,"ne","","",6],[11,"default_port","","",6],[11,"parse","","Parse an URL with the default `UrlParser` parameters.",1],[11,"from_file_path","","Convert a file name as `std::old_path::Path` into an URL in the `file` scheme.",1],[11,"from_directory_path","","Convert a directory name as `std::old_path::Path` into an URL in the `file` scheme.",1],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::old_path::Path`.",1],[11,"serialize","","Return the serialization of this URL as a string.",1],[11,"serialize_no_fragment","","Return the serialization of this URL, without the fragment identifier, as a string",1],[11,"non_relative_scheme_data","","If the URL is *non-relative*, return the string scheme data.",1],[11,"non_relative_scheme_data_mut","","If the URL is *non-relative*, return a mutable reference to the string scheme data.",1],[11,"relative_scheme_data","","If the URL is in a *relative scheme*, return the structured scheme data.",1],[11,"relative_scheme_data_mut","","If the URL is in a *relative scheme*,\nreturn a mutable reference to the structured scheme data.",1],[11,"username","","If the URL is in a *relative scheme*, return its username.",1],[11,"username_mut","","If the URL is in a *relative scheme*, return a mutable reference to its username.",1],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username, if any.",1],[11,"password","","If the URL is in a *relative scheme*, return its password, if any.",1],[11,"password_mut","","If the URL is in a *relative scheme*, return a mutable reference to its password, if any.",1],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",1],[11,"serialize_userinfo","","Serialize the URL's username and password, if any.",1],[11,"host","","If the URL is in a *relative scheme*, return its structured host.",1],[11,"host_mut","","If the URL is in a *relative scheme*, return a mutable reference to its structured host.",1],[11,"domain","","If the URL is in a *relative scheme* and its host is a domain,\nreturn the domain as a string.",1],[11,"domain_mut","","If the URL is in a *relative scheme* and its host is a domain,\nreturn a mutable reference to the domain string.",1],[11,"serialize_host","","If the URL is in a *relative scheme*, serialize its host as a string.",1],[11,"port","","If the URL is in a *relative scheme* and has a port number, return it.",1],[11,"port_mut","","If the URL is in a *relative scheme*, return a mutable reference to its port.",1],[11,"port_or_default","","If the URL is in a *relative scheme* that is not a file-like,\nreturn its port number, even if it is the default.",1],[11,"path","","If the URL is in a *relative scheme*, return its path components.",1],[11,"path_mut","","If the URL is in a *relative scheme*, return a mutable reference to its path components.",1],[11,"serialize_path","","If the URL is in a *relative scheme*, serialize its path as a string.",1],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return a vector of (key, value) pairs.",1],[11,"set_query_from_pairs","","Serialize an iterator of (key, value) pairs as `application/x-www-form-urlencoded`\nand set it as the URL’s query string.",1],[11,"lossy_percent_decode_query","","Percent-decode the URL’s query string, if any.",1],[11,"lossy_percent_decode_fragment","","Percent-decode the URL’s fragment identifier, if any.",1],[11,"encode","","",1],[11,"decode","","",1],[11,"fmt","","",1],[11,"fmt","","",5],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username.",2],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",2],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::old_path::Path`.",2],[11,"domain","","If the host is a domain, return the domain as a string.",2],[11,"domain_mut","","If the host is a domain, return a mutable reference to the domain string.",2],[11,"port_or_default","","Return the port number of the URL, even if it is the default.\nReturn `None` for file-like URLs.",2],[11,"serialize_path","","Serialize the path as a string.",2],[11,"serialize_userinfo","","Serialize the userinfo as a string.",2],[11,"fmt","","",2],[11,"to_url_path","std::old_path::posix","",13],[11,"to_url_path","std::old_path::windows","",14],[11,"from_url_path","std::old_path::posix","",13],[11,"from_url_path","std::old_path::windows","",14]],"paths":[[3,"Ipv6Address"],[3,"Url"],[3,"RelativeSchemeData"],[4,"Host"],[4,"ParseError"],[4,"SchemeData"],[4,"SchemeType"],[3,"PathFormatter"],[3,"UserInfoFormatter"],[3,"UrlNoFragmentFormatter"],[8,"ToUrlPath"],[8,"FromUrlPath"],[3,"UrlParser"],[3,"Path"],[3,"Path"]]};

searchIndex['rustc-serialize'] = {"items":[[0,"","rustc-serialize","Support code for encoding and decoding types."],[11,"encode","collections::string","",0],[11,"decode","","",0],[11,"encode","alloc::boxed","",1],[11,"decode","","",1],[11,"decode","","",1],[11,"encode","alloc::rc","",2],[11,"decode","","",2],[11,"encode","collections::vec","",3],[11,"decode","","",3],[11,"encode","core::option","",4],[11,"decode","","",4],[11,"encode","std::old_path::posix","",5],[11,"decode","","",5],[11,"encode","std::old_path::windows","",6],[11,"decode","","",6],[11,"encode","core::cell","",7],[11,"decode","","",7],[11,"encode","","",8],[11,"decode","","",8],[11,"encode","alloc::arc","",9],[11,"decode","","",9],[11,"encode","collections::dlist","",10],[11,"decode","","",10],[11,"encode","collections::ring_buf","",11],[11,"decode","","",11],[11,"encode","collections::btree::map","",12],[11,"decode","","",12],[11,"encode","collections::btree::set","",13],[11,"decode","","",13],[11,"encode","std::collections::hash::map","",14],[11,"decode","","",14],[11,"encode","std::collections::hash::set","",15],[11,"decode","","",15],[11,"encode","collections::vec_map","",16],[11,"decode","","",16],[0,"base64","rustc-serialize","Base64 binary-to-text encoding"],[3,"Config","rustc-serialize::base64","Contains configuration parameters for `to_base64`."],[12,"char_set","","Character set to use",17],[12,"newline","","Newline to use",17],[12,"pad","","True to pad output with `=` characters",17],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",17],[4,"CharacterSet","","Available encoding character sets"],[13,"Standard","","The standard character set (uses `+` and `/`)",18],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",18],[4,"Newline","","Available newline types"],[13,"LF","","A linefeed (i.e. Unix-style newline)",19],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",19],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string"],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",20],[13,"InvalidBase64Length","","The input had an invalid length",20],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding"],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding"],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding"],[8,"ToBase64","","A trait for converting a value to base64 encoding."],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",21],[8,"FromBase64","","A trait for converting from base64 encoded values."],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",22],[11,"fmt","","",20],[11,"description","","",20],[11,"fmt","","",20],[0,"hex","rustc-serialize","Hex binary-to-text encoding"],[4,"FromHexError","rustc-serialize::hex","Errors that can occur when decoding a hex encoded string"],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",23],[13,"InvalidHexLength","","The input had an invalid length",23],[8,"ToHex","","A trait for converting a value to hexadecimal encoding"],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",24],[8,"FromHex","","A trait for converting hexadecimal encoded values"],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",25],[11,"fmt","","",23],[11,"description","","",23],[11,"fmt","","",23],[0,"json","rustc-serialize","JSON parsing and serialization"],[3,"PrettyJson","rustc-serialize::json",""],[3,"AsJson","",""],[3,"AsPrettyJson","",""],[3,"Encoder","","A structure for implementing serialization to JSON."],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x"],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char."],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure."],[3,"Decoder","","A structure to decode JSON to values in rust."],[4,"Json","","Represents a json value"],[13,"I64","","",26],[13,"U64","","",26],[13,"F64","","",26],[13,"String","","",26],[13,"Boolean","","",26],[13,"Array","","",26],[13,"Object","","",26],[13,"Null","","",26],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream."],[13,"InvalidSyntax","","",27],[13,"InvalidNumber","","",27],[13,"EOFWhileParsingObject","","",27],[13,"EOFWhileParsingArray","","",27],[13,"EOFWhileParsingValue","","",27],[13,"EOFWhileParsingString","","",27],[13,"KeyMustBeAString","","",27],[13,"ExpectedColon","","",27],[13,"TrailingCharacters","","",27],[13,"TrailingComma","","",27],[13,"InvalidEscape","","",27],[13,"InvalidUnicodeCodePoint","","",27],[13,"LoneLeadingSurrogateInHexEscape","","",27],[13,"UnexpectedEndOfHexEscape","","",27],[13,"UnrecognizedHex","","",27],[13,"NotFourDigit","","",27],[13,"NotUtf8","","",27],[4,"ParserError","",""],[13,"SyntaxError","","msg, line, col",28],[13,"IoError","","",28],[4,"DecoderError","",""],[13,"ParseError","","",29],[13,"ExpectedError","","",29],[13,"MissingFieldError","","",29],[13,"UnknownVariantError","","",29],[13,"ApplicationError","","",29],[4,"EncoderError","",""],[13,"FmtError","","",30],[13,"BadHashmapKey","","",30],[4,"JsonEvent","","The output of the streaming parser."],[13,"ObjectStart","","",31],[13,"ObjectEnd","","",31],[13,"ArrayStart","","",31],[13,"ArrayEnd","","",31],[13,"BooleanValue","","",31],[13,"I64Value","","",31],[13,"U64Value","","",31],[13,"F64Value","","",31],[13,"StringValue","","",31],[13,"NullValue","","",31],[13,"Error","","",31],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x"],[13,"Index","","",32],[13,"Key","","",32],[5,"error_str","","Returns a readable error string for a given error code."],[5,"decode","","Shortcut function to decode a JSON `&str` into an object"],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`"],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`"],[6,"Array","",""],[6,"Object","",""],[6,"BuilderError","",""],[6,"EncodeResult","",""],[6,"DecodeResult","",""],[8,"ToJson","","A trait for converting values to JSON"],[10,"to_json","","Converts the value of `self` to an instance of JSON",33],[11,"fmt","","",26],[11,"partial_cmp","","",26],[11,"lt","","",26],[11,"le","","",26],[11,"gt","","",26],[11,"ge","","",26],[11,"eq","","",26],[11,"ne","","",26],[11,"clone","","",26],[11,"eq","","",27],[11,"ne","","",27],[11,"clone","","",27],[11,"fmt","","",28],[11,"eq","","",28],[11,"ne","","",28],[11,"clone","","",28],[11,"fmt","","",29],[11,"eq","","",29],[11,"ne","","",29],[11,"clone","","",29],[11,"fmt","","",30],[11,"fmt","","",27],[11,"description","","",29],[11,"cause","","",29],[11,"fmt","","",29],[11,"description","","",28],[11,"fmt","","",28],[11,"description","","",30],[11,"fmt","","",30],[11,"from_error","","",30],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",34],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",34],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",34],[6,"Error","",""],[11,"emit_nil","","",34],[11,"emit_usize","","",34],[11,"emit_u64","","",34],[11,"emit_u32","","",34],[11,"emit_u16","","",34],[11,"emit_u8","","",34],[11,"emit_isize","","",34],[11,"emit_i64","","",34],[11,"emit_i32","","",34],[11,"emit_i16","","",34],[11,"emit_i8","","",34],[11,"emit_bool","","",34],[11,"emit_f64","","",34],[11,"emit_f32","","",34],[11,"emit_char","","",34],[11,"emit_str","","",34],[11,"emit_enum","","",34],[11,"emit_enum_variant","","",34],[11,"emit_enum_variant_arg","","",34],[11,"emit_enum_struct_variant","","",34],[11,"emit_enum_struct_variant_field","","",34],[11,"emit_struct","","",34],[11,"emit_struct_field","","",34],[11,"emit_tuple","","",34],[11,"emit_tuple_arg","","",34],[11,"emit_tuple_struct","","",34],[11,"emit_tuple_struct_arg","","",34],[11,"emit_option","","",34],[11,"emit_option_none","","",34],[11,"emit_option_some","","",34],[11,"emit_seq","","",34],[11,"emit_seq_elt","","",34],[11,"emit_map","","",34],[11,"emit_map_elt_key","","",34],[11,"emit_map_elt_val","","",34],[11,"encode","","",26],[11,"from_reader","","Decodes a json value from an `&mut old_io::Reader`",26],[11,"from_str","","Decodes a json value from a string",26],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",26],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",26],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",26],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",26],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",26],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",26],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",26],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",26],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",26],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",26],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",26],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",26],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",26],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",26],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",26],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",26],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",26],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",26],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",26],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",26],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",26],[6,"Output","",""],[11,"index","","",26],[6,"Output","",""],[11,"index","","",26],[11,"fmt","","",31],[11,"clone","","",31],[11,"eq","","",31],[11,"ne","","",31],[11,"fmt","","",32],[11,"clone","","",32],[11,"eq","","",32],[11,"ne","","",32],[11,"new","","",35],[11,"len","","Returns The number of elements in the Stack.",35],[11,"is_empty","","Returns true if the stack is empty.",35],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",35],[11,"is_equal_to","","Compares this stack with an array of StackElements.",35],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",35],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",35],[11,"top","","Returns the top-most element (if any).",35],[6,"Item","",""],[11,"next","","",36],[11,"new","","Creates the JSON parser.",36],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",36],[11,"new","","Create a JSON Builder.",37],[11,"build","","",37],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",38],[6,"Error","",""],[11,"read_nil","","",38],[11,"read_usize","","",38],[11,"read_u8","","",38],[11,"read_u16","","",38],[11,"read_u32","","",38],[11,"read_u64","","",38],[11,"read_isize","","",38],[11,"read_i8","","",38],[11,"read_i16","","",38],[11,"read_i32","","",38],[11,"read_i64","","",38],[11,"read_f32","","",38],[11,"read_f64","","",38],[11,"read_bool","","",38],[11,"read_char","","",38],[11,"read_str","","",38],[11,"read_enum","","",38],[11,"read_enum_variant","","",38],[11,"read_enum_variant_arg","","",38],[11,"read_enum_struct_variant","","",38],[11,"read_enum_struct_variant_field","","",38],[11,"read_struct","","",38],[11,"read_struct_field","","",38],[11,"read_tuple","","",38],[11,"read_tuple_arg","","",38],[11,"read_tuple_struct","","",38],[11,"read_tuple_struct_arg","","",38],[11,"read_option","","",38],[11,"read_seq","","",38],[11,"read_seq_elt","","",38],[11,"read_map","","",38],[11,"read_map_elt_key","","",38],[11,"read_map_elt_val","","",38],[11,"error","","",38],[11,"to_json","","",26],[11,"to_json","collections::string","",0],[11,"to_json","collections::vec","",3],[11,"to_json","collections::btree::map","",12],[11,"to_json","std::collections::hash::map","",14],[11,"to_json","core::option","",4],[11,"fmt","rustc-serialize::json","Encodes a json value into a string",26],[11,"fmt","","Encodes a json value into a string",39],[11,"fmt","","Encodes a json value into a string",40],[11,"indent","","Set the indentation level for the emitted JSON",41],[11,"fmt","","Encodes a json value into a string",41],[6,"Err","",""],[11,"from_str","","",26],[11,"encode","collections::string","",0],[11,"decode","","",0],[11,"encode","alloc::boxed","",1],[11,"decode","","",1],[11,"decode","","",1],[11,"encode","alloc::rc","",2],[11,"decode","","",2],[11,"encode","collections::vec","",3],[11,"decode","","",3],[11,"encode","core::option","",4],[11,"decode","","",4],[11,"encode","std::old_path::posix","",5],[11,"decode","","",5],[11,"encode","std::old_path::windows","",6],[11,"decode","","",6],[11,"encode","core::cell","",7],[11,"decode","","",7],[11,"encode","","",8],[11,"decode","","",8],[11,"encode","alloc::arc","",9],[11,"decode","","",9],[8,"Decoder","rustc-serialize",""],[16,"Error","rustc-serialize::Decoder",""],[10,"read_nil","rustc-serialize","",42],[10,"read_usize","","",42],[10,"read_u64","","",42],[10,"read_u32","","",42],[10,"read_u16","","",42],[10,"read_u8","","",42],[10,"read_isize","","",42],[10,"read_i64","","",42],[10,"read_i32","","",42],[10,"read_i16","","",42],[10,"read_i8","","",42],[10,"read_bool","","",42],[10,"read_f64","","",42],[10,"read_f32","","",42],[10,"read_char","","",42],[10,"read_str","","",42],[10,"read_enum","","",42],[10,"read_enum_variant","","",42],[10,"read_enum_variant_arg","","",42],[10,"read_enum_struct_variant","","",42],[10,"read_enum_struct_variant_field","","",42],[10,"read_struct","","",42],[10,"read_struct_field","","",42],[10,"read_tuple","","",42],[10,"read_tuple_arg","","",42],[10,"read_tuple_struct","","",42],[10,"read_tuple_struct_arg","","",42],[10,"read_option","","",42],[10,"read_seq","","",42],[10,"read_seq_elt","","",42],[10,"read_map","","",42],[10,"read_map_elt_key","","",42],[10,"read_map_elt_val","","",42],[10,"error","","",42],[8,"Encoder","",""],[16,"Error","rustc-serialize::Encoder",""],[10,"emit_nil","rustc-serialize","",43],[10,"emit_usize","","",43],[10,"emit_u64","","",43],[10,"emit_u32","","",43],[10,"emit_u16","","",43],[10,"emit_u8","","",43],[10,"emit_isize","","",43],[10,"emit_i64","","",43],[10,"emit_i32","","",43],[10,"emit_i16","","",43],[10,"emit_i8","","",43],[10,"emit_bool","","",43],[10,"emit_f64","","",43],[10,"emit_f32","","",43],[10,"emit_char","","",43],[10,"emit_str","","",43],[10,"emit_enum","","",43],[10,"emit_enum_variant","","",43],[10,"emit_enum_variant_arg","","",43],[10,"emit_enum_struct_variant","","",43],[10,"emit_enum_struct_variant_field","","",43],[10,"emit_struct","","",43],[10,"emit_struct_field","","",43],[10,"emit_tuple","","",43],[10,"emit_tuple_arg","","",43],[10,"emit_tuple_struct","","",43],[10,"emit_tuple_struct_arg","","",43],[10,"emit_option","","",43],[10,"emit_option_none","","",43],[10,"emit_option_some","","",43],[10,"emit_seq","","",43],[10,"emit_seq_elt","","",43],[10,"emit_map","","",43],[10,"emit_map_elt_key","","",43],[10,"emit_map_elt_val","","",43],[8,"Decodable","",""],[10,"decode","","",44],[8,"Encodable","",""],[10,"encode","","",45],[8,"DecoderHelpers","",""],[10,"read_to_vec","","",46],[8,"EncoderHelpers","",""],[10,"emit_from_vec","","",47]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[3,"Vec"],[4,"Option"],[3,"Path"],[3,"Path"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"DList"],[3,"RingBuf"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"VecMap"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};

searchIndex['curl-sys'] = {"items":[[0,"","curl-sys",""],[3,"curl_version_info_data","",""],[12,"age","","",0],[12,"version","","",0],[12,"version_num","","",0],[12,"host","","",0],[12,"features","","",0],[12,"ssl_version","","",0],[12,"ssl_version_num","","",0],[12,"libz_version","","",0],[12,"protocols","","",0],[12,"ares","","",0],[12,"ares_num","","",0],[12,"libidn","","",0],[12,"iconv_ver_num","","",0],[12,"libssh_version","","",0],[4,"CURLversion","",""],[13,"CURL_VERSION_FIRST","","",1],[13,"CURL_VERSION_SECOND","","",1],[13,"CURL_VERSION_THIRD","","",1],[13,"CURL_VERSION_FOURTH","","",1],[13,"CURL_VERSION_LAST","","",1],[4,"CURLcode","",""],[13,"CURLE_OK","","",2],[13,"CURLE_UNSUPPORTED_PROTOCOL","","",2],[13,"CURLE_FAILED_INIT","","",2],[13,"CURLE_URL_MALFORMAT","","",2],[13,"CURLE_NOT_BUILT_IN","","",2],[13,"CURLE_COULDNT_RESOLVE_PROXY","","",2],[13,"CURLE_COULDNT_RESOLVE_HOST","","",2],[13,"CURLE_COULDNT_CONNECT","","",2],[13,"CURLE_FTP_WEIRD_SERVER_REPLY","","",2],[13,"CURLE_REMOTE_ACCESS_DENIED","","",2],[13,"CURLE_FTP_ACCEPT_FAILED","","",2],[13,"CURLE_FTP_WEIRD_PASS_REPLY","","",2],[13,"CURLE_FTP_ACCEPT_TIMEOUT","","",2],[13,"CURLE_FTP_WEIRD_PASV_REPLY","","",2],[13,"CURLE_FTP_WEIRD_227_FORMAT","","",2],[13,"CURLE_FTP_CANT_GET_HOST","","",2],[13,"CURLE_OBSOLETE16","","",2],[13,"CURLE_FTP_COULDNT_SET_TYPE","","",2],[13,"CURLE_PARTIAL_FILE","","",2],[13,"CURLE_FTP_COULDNT_RETR_FILE","","",2],[13,"CURLE_OBSOLETE20","","",2],[13,"CURLE_QUOTE_ERROR","","",2],[13,"CURLE_HTTP_RETURNED_ERROR","","",2],[13,"CURLE_WRITE_ERROR","","",2],[13,"CURLE_OBSOLETE24","","",2],[13,"CURLE_UPLOAD_FAILED","","",2],[13,"CURLE_READ_ERROR","","",2],[13,"CURLE_OUT_OF_MEMORY","","",2],[13,"CURLE_OPERATION_TIMEDOUT","","",2],[13,"CURLE_OBSOLETE29","","",2],[13,"CURLE_FTP_PORT_FAILED","","",2],[13,"CURLE_FTP_COULDNT_USE_REST","","",2],[13,"CURLE_OBSOLETE32","","",2],[13,"CURLE_RANGE_ERROR","","",2],[13,"CURLE_HTTP_POST_ERROR","","",2],[13,"CURLE_SSL_CONNECT_ERROR","","",2],[13,"CURLE_BAD_DOWNLOAD_RESUME","","",2],[13,"CURLE_FILE_COULDNT_READ_FILE","","",2],[13,"CURLE_LDAP_CANNOT_BIND","","",2],[13,"CURLE_LDAP_SEARCH_FAILED","","",2],[13,"CURLE_OBSOLETE40","","",2],[13,"CURLE_FUNCTION_NOT_FOUND","","",2],[13,"CURLE_ABORTED_BY_CALLBACK","","",2],[13,"CURLE_BAD_FUNCTION_ARGUMENT","","",2],[13,"CURLE_OBSOLETE44","","",2],[13,"CURLE_INTERFACE_FAILED","","",2],[13,"CURLE_OBSOLETE46","","",2],[13,"CURLE_TOO_MANY_REDIRECTS","","",2],[13,"CURLE_UNKNOWN_OPTION","","",2],[13,"CURLE_TELNET_OPTION_SYNTAX","","",2],[13,"CURLE_OBSOLETE50","","",2],[13,"CURLE_PEER_FAILED_VERIFICATION","","",2],[13,"CURLE_GOT_NOTHING","","",2],[13,"CURLE_SSL_ENGINE_NOTFOUND","","",2],[13,"CURLE_SSL_ENGINE_SETFAILED","","",2],[13,"CURLE_SEND_ERROR","","",2],[13,"CURLE_RECV_ERROR","","",2],[13,"CURLE_OBSOLETE57","","",2],[13,"CURLE_SSL_CERTPROBLEM","","",2],[13,"CURLE_SSL_CIPHER","","",2],[13,"CURLE_SSL_CACERT","","",2],[13,"CURLE_BAD_CONTENT_ENCODING","","",2],[13,"CURLE_LDAP_INVALID_URL","","",2],[13,"CURLE_FILESIZE_EXCEEDED","","",2],[13,"CURLE_USE_SSL_FAILED","","",2],[13,"CURLE_SEND_FAIL_REWIND","","",2],[13,"CURLE_SSL_ENGINE_INITFAILED","","",2],[13,"CURLE_LOGIN_DENIED","","",2],[13,"CURLE_TFTP_NOTFOUND","","",2],[13,"CURLE_TFTP_PERM","","",2],[13,"CURLE_REMOTE_DISK_FULL","","",2],[13,"CURLE_TFTP_ILLEGAL","","",2],[13,"CURLE_TFTP_UNKNOWNID","","",2],[13,"CURLE_REMOTE_FILE_EXISTS","","",2],[13,"CURLE_TFTP_NOSUCHUSER","","",2],[13,"CURLE_CONV_FAILED","","",2],[13,"CURLE_CONV_REQD","","",2],[13,"CURLE_SSL_CACERT_BADFILE","","",2],[13,"CURLE_REMOTE_FILE_NOT_FOUND","","",2],[13,"CURLE_SSH","","",2],[13,"CURLE_SSL_SHUTDOWN_FAILED","","",2],[13,"CURLE_AGAIN","","",2],[13,"CURLE_SSL_CRL_BADFILE","","",2],[13,"CURLE_SSL_ISSUER_ERROR","","",2],[13,"CURLE_FTP_PRET_FAILED","","",2],[13,"CURLE_RTSP_CSEQ_ERROR","","",2],[13,"CURLE_RTSP_SESSION_ERROR","","",2],[13,"CURLE_FTP_BAD_FILE_LIST","","",2],[13,"CURLE_CHUNK_FAILED","","",2],[13,"CURLE_NO_CONNECTION_AVAILABLE","","",2],[13,"CURLE_LAST","","",2],[5,"curl_easy_strerror","",""],[5,"curl_easy_init","",""],[5,"curl_easy_setopt","",""],[5,"curl_easy_perform","",""],[5,"curl_easy_cleanup","",""],[5,"curl_easy_getinfo","",""],[5,"curl_global_cleanup","",""],[5,"curl_slist_append","",""],[5,"curl_slist_free_all","",""],[5,"curl_version","",""],[5,"curl_version_info","",""],[6,"CURLINFO","",""],[6,"CURL","",""],[6,"curl_slist","",""],[6,"CURLoption","",""],[17,"CURL_READFUNC_ABORT","",""],[17,"CURLINFO_STRING","",""],[17,"CURLINFO_LONG","",""],[17,"CURLINFO_DOUBLE","",""],[17,"CURLINFO_SLIST","",""],[17,"CURLINFO_MASK","",""],[17,"CURLINFO_TYPEMASK","",""],[17,"CURLINFO_EFFECTIVE_URL","",""],[17,"CURLINFO_RESPONSE_CODE","",""],[17,"CURLINFO_TOTAL_TIME","",""],[17,"CURLOPTTYPE_LONG","",""],[17,"CURLOPTTYPE_OBJECTPOINT","",""],[17,"CURLOPTTYPE_FUNCTIONPOINT","",""],[17,"CURLOPTTYPE_OFF_T","",""],[17,"CURL_VERSION_NOW","",""],[17,"CURL_VERSION_IPV6","",""],[17,"CURL_VERSION_KERBEROS4","",""],[17,"CURL_VERSION_SSL","",""],[17,"CURL_VERSION_LIBZ","",""],[17,"CURL_VERSION_NTLM","",""],[17,"CURL_VERSION_GSSNEGOTIATE","",""],[17,"CURL_VERSION_DEBUG","",""],[17,"CURL_VERSION_ASYNCHDNS","",""],[17,"CURL_VERSION_SPNEGO","",""],[17,"CURL_VERSION_LARGEFILE","",""],[17,"CURL_VERSION_IDN","",""],[17,"CURL_VERSION_SSPI","",""],[17,"CURL_VERSION_CONV","",""],[17,"CURL_VERSION_CURLDEBUG","",""],[17,"CURL_VERSION_TLSAUTH_SRP","",""],[17,"CURL_VERSION_NTLM_WB","",""],[17,"CURL_VERSION_HTTP2","",""],[17,"CURLOPT_FILE","",""],[17,"CURLOPT_URL","",""],[17,"CURLOPT_PORT","",""],[17,"CURLOPT_PROXY","",""],[17,"CURLOPT_USERPWD","",""],[17,"CURLOPT_PROXYUSERPWD","",""],[17,"CURLOPT_RANGE","",""],[17,"CURLOPT_INFILE","",""],[17,"CURLOPT_ERRORBUFFER","",""],[17,"CURLOPT_WRITEFUNCTION","",""],[17,"CURLOPT_READFUNCTION","",""],[17,"CURLOPT_TIMEOUT","",""],[17,"CURLOPT_INFILESIZE","",""],[17,"CURLOPT_POSTFIELDS","",""],[17,"CURLOPT_REFERER","",""],[17,"CURLOPT_FTPPORT","",""],[17,"CURLOPT_USERAGENT","",""],[17,"CURLOPT_LOW_SPEED_LIMIT","",""],[17,"CURLOPT_LOW_SPEED_TIME","",""],[17,"CURLOPT_RESUME_FROM","",""],[17,"CURLOPT_COOKIE","",""],[17,"CURLOPT_HTTPHEADER","",""],[17,"CURLOPT_HTTPPOST","",""],[17,"CURLOPT_SSLCERT","",""],[17,"CURLOPT_KEYPASSWD","",""],[17,"CURLOPT_CRLF","",""],[17,"CURLOPT_QUOTE","",""],[17,"CURLOPT_WRITEHEADER","",""],[17,"CURLOPT_COOKIEFILE","",""],[17,"CURLOPT_SSLVERSION","",""],[17,"CURLOPT_TIMECONDITION","",""],[17,"CURLOPT_TIMEVALUE","",""],[17,"CURLOPT_CUSTOMREQUEST","",""],[17,"CURLOPT_STDERR","",""],[17,"CURLOPT_POSTQUOTE","",""],[17,"CURLOPT_WRITEINFO","",""],[17,"CURLOPT_VERBOSE","",""],[17,"CURLOPT_HEADER","",""],[17,"CURLOPT_NOPROGRESS","",""],[17,"CURLOPT_NOBODY","",""],[17,"CURLOPT_FAILONERROR","",""],[17,"CURLOPT_UPLOAD","",""],[17,"CURLOPT_POST","",""],[17,"CURLOPT_DIRLISTONLY","",""],[17,"CURLOPT_APPEND","",""],[17,"CURLOPT_NETRC","",""],[17,"CURLOPT_FOLLOWLOCATION","",""],[17,"CURLOPT_TRANSFERTEXT","",""],[17,"CURLOPT_PUT","",""],[17,"CURLOPT_PROGRESSFUNCTION","",""],[17,"CURLOPT_PROGRESSDATA","",""],[17,"CURLOPT_AUTOREFERER","",""],[17,"CURLOPT_PROXYPORT","",""],[17,"CURLOPT_POSTFIELDSIZE","",""],[17,"CURLOPT_HTTPPROXYTUNNEL","",""],[17,"CURLOPT_INTERFACE","",""],[17,"CURLOPT_KRBLEVEL","",""],[17,"CURLOPT_SSL_VERIFYPEER","",""],[17,"CURLOPT_CAINFO","",""],[17,"CURLOPT_MAXREDIRS","",""],[17,"CURLOPT_FILETIME","",""],[17,"CURLOPT_TELNETOPTIONS","",""],[17,"CURLOPT_MAXCONNECTS","",""],[17,"CURLOPT_CLOSEPOLICY","",""],[17,"CURLOPT_FRESH_CONNECT","",""],[17,"CURLOPT_FORBID_REUSE","",""],[17,"CURLOPT_RANDOM_FILE","",""],[17,"CURLOPT_EGDSOCKET","",""],[17,"CURLOPT_CONNECTTIMEOUT","",""],[17,"CURLOPT_HEADERFUNCTION","",""],[17,"CURLOPT_HTTPGET","",""],[17,"CURLOPT_SSL_VERIFYHOST","",""],[17,"CURLOPT_COOKIEJAR","",""],[17,"CURLOPT_SSL_CIPHER_LIST","",""],[17,"CURLOPT_HTTP_VERSION","",""],[17,"CURLOPT_FTP_USE_EPSV","",""],[17,"CURLOPT_SSLCERTTYPE","",""],[17,"CURLOPT_SSLKEY","",""],[17,"CURLOPT_SSLKEYTYPE","",""],[17,"CURLOPT_SSLENGINE","",""],[17,"CURLOPT_SSLENGINE_DEFAULT","",""],[17,"CURLOPT_DNS_USE_GLOBAL_CACHE","",""],[17,"CURLOPT_DNS_CACHE_TIMEOUT","",""],[17,"CURLOPT_PREQUOTE","",""],[17,"CURLOPT_DEBUGFUNCTION","",""],[17,"CURLOPT_DEBUGDATA","",""],[17,"CURLOPT_COOKIESESSION","",""],[17,"CURLOPT_CAPATH","",""],[17,"CURLOPT_BUFFERSIZE","",""],[17,"CURLOPT_NOSIGNAL","",""],[17,"CURLOPT_SHARE","",""],[17,"CURLOPT_PROXYTYPE","",""],[17,"CURLOPT_ACCEPT_ENCODING","",""],[17,"CURLOPT_PRIVATE","",""],[17,"CURLOPT_HTTP200ALIASES","",""],[17,"CURLOPT_UNRESTRICTED_AUTH","",""],[17,"CURLOPT_FTP_USE_EPRT","",""],[17,"CURLOPT_HTTPAUTH","",""],[17,"CURLOPT_SSL_CTX_FUNCTION","",""],[17,"CURLOPT_SSL_CTX_DATA","",""],[17,"CURLOPT_FTP_CREATE_MISSING_DIRS","",""],[17,"CURLOPT_PROXYAUTH","",""],[17,"CURLOPT_FTP_RESPONSE_TIMEOUT","",""],[17,"CURLOPT_IPRESOLVE","",""],[17,"CURLOPT_MAXFILESIZE","",""],[17,"CURLOPT_INFILESIZE_LARGE","",""],[17,"CURLOPT_RESUME_FROM_LARGE","",""],[17,"CURLOPT_MAXFILESIZE_LARGE","",""],[17,"CURLOPT_NETRC_FILE","",""],[17,"CURLOPT_USE_SSL","",""],[17,"CURLOPT_POSTFIELDSIZE_LARGE","",""],[17,"CURLOPT_TCP_NODELAY","",""],[17,"CURLOPT_FTPSSLAUTH","",""],[17,"CURLOPT_IOCTLFUNCTION","",""],[17,"CURLOPT_IOCTLDATA","",""],[17,"CURLOPT_FTP_ACCOUNT","",""],[17,"CURLOPT_COOKIELIST","",""],[17,"CURLOPT_IGNORE_CONTENT_LENGTH","",""],[17,"CURLOPT_FTP_SKIP_PASV_IP","",""],[17,"CURLOPT_FTP_FILEMETHOD","",""],[17,"CURLOPT_LOCALPORT","",""],[17,"CURLOPT_LOCALPORTRANGE","",""],[17,"CURLOPT_CONNECT_ONLY","",""],[17,"CURLOPT_CONV_FROM_NETWORK_FUNCTION","",""],[17,"CURLOPT_CONV_TO_NETWORK_FUNCTION","",""],[17,"CURLOPT_CONV_FROM_UTF8_FUNCTION","",""],[17,"CURLOPT_MAX_SEND_SPEED_LARGE","",""],[17,"CURLOPT_MAX_RECV_SPEED_LARGE","",""],[17,"CURLOPT_FTP_ALTERNATIVE_TO_USER","",""],[17,"CURLOPT_SOCKOPTFUNCTION","",""],[17,"CURLOPT_SOCKOPTDATA","",""],[17,"CURLOPT_SSL_SESSIONID_CACHE","",""],[17,"CURLOPT_SSH_AUTH_TYPES","",""],[17,"CURLOPT_SSH_PUBLIC_KEYFILE","",""],[17,"CURLOPT_SSH_PRIVATE_KEYFILE","",""],[17,"CURLOPT_FTP_SSL_CCC","",""],[17,"CURLOPT_TIMEOUT_MS","",""],[17,"CURLOPT_CONNECTTIMEOUT_MS","",""],[17,"CURLOPT_HTTP_TRANSFER_DECODING","",""],[17,"CURLOPT_HTTP_CONTENT_DECODING","",""],[17,"CURLOPT_NEW_FILE_PERMS","",""],[17,"CURLOPT_NEW_DIRECTORY_PERMS","",""],[17,"CURLOPT_POSTREDIR","",""],[17,"CURLOPT_SSH_HOST_PUBLIC_KEY_MD5","",""],[17,"CURLOPT_OPENSOCKETFUNCTION","",""],[17,"CURLOPT_OPENSOCKETDATA","",""],[17,"CURLOPT_COPYPOSTFIELDS","",""],[17,"CURLOPT_PROXY_TRANSFER_MODE","",""],[17,"CURLOPT_SEEKFUNCTION","",""],[17,"CURLOPT_SEEKDATA","",""],[17,"CURLOPT_CRLFILE","",""],[17,"CURLOPT_ISSUERCERT","",""],[17,"CURLOPT_ADDRESS_SCOPE","",""],[17,"CURLOPT_CERTINFO","",""],[17,"CURLOPT_USERNAME","",""],[17,"CURLOPT_PASSWORD","",""],[17,"CURLOPT_PROXYUSERNAME","",""],[17,"CURLOPT_PROXYPASSWORD","",""],[17,"CURLOPT_NOPROXY","",""],[17,"CURLOPT_TFTP_BLKSIZE","",""],[17,"CURLOPT_SOCKS5_GSSAPI_SERVICE","",""],[17,"CURLOPT_SOCKS5_GSSAPI_NEC","",""],[17,"CURLOPT_PROTOCOLS","",""],[17,"CURLOPT_REDIR_PROTOCOLS","",""],[17,"CURLOPT_SSH_KNOWNHOSTS","",""],[17,"CURLOPT_SSH_KEYFUNCTION","",""],[17,"CURLOPT_SSH_KEYDATA","",""],[17,"CURLOPT_MAIL_FROM","",""],[17,"CURLOPT_MAIL_RCPT","",""],[17,"CURLOPT_FTP_USE_PRET","",""],[17,"CURLOPT_RTSP_REQUEST","",""],[17,"CURLOPT_RTSP_SESSION_ID","",""],[17,"CURLOPT_RTSP_STREAM_URI","",""],[17,"CURLOPT_RTSP_TRANSPORT","",""],[17,"CURLOPT_RTSP_CLIENT_CSEQ","",""],[17,"CURLOPT_RTSP_SERVER_CSEQ","",""],[17,"CURLOPT_INTERLEAVEDATA","",""],[17,"CURLOPT_INTERLEAVEFUNCTION","",""],[17,"CURLOPT_WILDCARDMATCH","",""],[17,"CURLOPT_CHUNK_BGN_FUNCTION","",""],[17,"CURLOPT_CHUNK_END_FUNCTION","",""],[17,"CURLOPT_FNMATCH_FUNCTION","",""],[17,"CURLOPT_CHUNK_DATA","",""],[17,"CURLOPT_FNMATCH_DATA","",""],[17,"CURLOPT_RESOLVE","",""],[17,"CURLOPT_TLSAUTH_USERNAME","",""],[17,"CURLOPT_TLSAUTH_PASSWORD","",""],[17,"CURLOPT_TLSAUTH_TYPE","",""],[17,"CURLOPT_TRANSFER_ENCODING","",""],[17,"CURLOPT_CLOSESOCKETFUNCTION","",""],[17,"CURLOPT_CLOSESOCKETDATA","",""],[17,"CURLOPT_GSSAPI_DELEGATION","",""],[17,"CURLOPT_DNS_SERVERS","",""],[17,"CURLOPT_ACCEPTTIMEOUT_MS","",""],[17,"CURLOPT_TCP_KEEPALIVE","",""],[17,"CURLOPT_TCP_KEEPIDLE","",""],[17,"CURLOPT_TCP_KEEPINTVL","",""],[17,"CURLOPT_SSL_OPTIONS","",""],[17,"CURLOPT_MAIL_AUTH","",""],[17,"CURLOPT_SASL_IR","",""],[17,"CURLOPT_XFERINFOFUNCTION","",""],[17,"CURLOPT_XOAUTH2_BEARER","",""],[17,"CURLOPT_DNS_INTERFACE","",""],[17,"CURLOPT_DNS_LOCAL_IP4","",""],[17,"CURLOPT_DNS_LOCAL_IP6","",""],[17,"CURLOPT_LOGIN_OPTIONS","",""],[17,"CURLOPT_SSL_ENABLE_NPN","",""],[17,"CURLOPT_SSL_ENABLE_ALPN","",""],[17,"CURLOPT_EXPECT_100_TIMEOUT_MS","",""],[17,"CURLOPT_PROXYHEADER","",""],[17,"CURLOPT_HEADEROPT","",""],[17,"CURLOPT_POST301","",""],[17,"CURLOPT_SSLKEYPASSWD","",""],[17,"CURLOPT_FTPAPPEND","",""],[17,"CURLOPT_FTPLISTONLY","",""],[17,"CURLOPT_FTP_SSL","",""],[17,"CURLOPT_SSLCERTPASSWD","",""],[17,"CURLOPT_KRB4LEVEL","",""],[17,"CURLOPT_READDATA","",""],[17,"CURLOPT_WRITEDATA","",""],[17,"CURLOPT_HEADERDATA","",""],[17,"CURLOPT_XFERINFODATA","",""],[11,"fmt","","",2]],"paths":[[3,"curl_version_info_data"],[4,"CURLversion"],[4,"CURLcode"]]};

searchIndex['openssl-sys'] = {"items":[[0,"","openssl-sys",""],[3,"EVP_MD_CTX","",""],[3,"HMAC_CTX","",""],[3,"X509V3_CTX","",""],[3,"BIGNUM","",""],[12,"d","","",0],[12,"top","","",0],[12,"dmax","","",0],[12,"neg","","",0],[12,"flags","","",0],[5,"init","",""],[5,"BIO_eof","",""],[5,"ASN1_INTEGER_set","",""],[5,"ASN1_STRING_type_new","",""],[5,"ASN1_TIME_free","",""],[5,"BIO_ctrl","",""],[5,"BIO_free_all","",""],[5,"BIO_new","",""],[5,"BIO_read","",""],[5,"BIO_write","",""],[5,"BIO_s_mem","",""],[5,"BN_new","",""],[5,"BN_dup","",""],[5,"BN_clear_free","",""],[5,"BN_CTX_new","",""],[5,"BN_CTX_free","",""],[5,"BN_num_bits","",""],[5,"BN_set_negative","",""],[5,"BN_set_word","",""],[5,"BN_add","",""],[5,"BN_div","",""],[5,"BN_exp","",""],[5,"BN_gcd","",""],[5,"BN_mod_add","",""],[5,"BN_mod_exp","",""],[5,"BN_mod_inverse","",""],[5,"BN_mod_mul","",""],[5,"BN_mod_sqr","",""],[5,"BN_mod_sub","",""],[5,"BN_mul","",""],[5,"BN_nnmod","",""],[5,"BN_add_word","",""],[5,"BN_sub_word","",""],[5,"BN_mul_word","",""],[5,"BN_div_word","",""],[5,"BN_mod_word","",""],[5,"BN_sqr","",""],[5,"BN_sub","",""],[5,"BN_clear_bit","",""],[5,"BN_is_bit_set","",""],[5,"BN_lshift","",""],[5,"BN_lshift1","",""],[5,"BN_mask_bits","",""],[5,"BN_rshift","",""],[5,"BN_set_bit","",""],[5,"BN_rshift1","",""],[5,"BN_cmp","",""],[5,"BN_ucmp","",""],[5,"BN_generate_prime_ex","",""],[5,"BN_is_prime_ex","",""],[5,"BN_is_prime_fasttest_ex","",""],[5,"BN_rand","",""],[5,"BN_pseudo_rand","",""],[5,"BN_rand_range","",""],[5,"BN_pseudo_rand_range","",""],[5,"BN_bin2bn","",""],[5,"BN_bn2bin","",""],[5,"BN_dec2bn","",""],[5,"BN_bn2dec","",""],[5,"BN_hex2bn","",""],[5,"BN_bn2hex","",""],[5,"CRYPTO_num_locks","",""],[5,"CRYPTO_set_locking_callback","",""],[5,"CRYPTO_free","",""],[5,"CRYPTO_memcmp","",""],[5,"ERR_get_error","",""],[5,"ERR_lib_error_string","",""],[5,"ERR_func_error_string","",""],[5,"ERR_reason_error_string","",""],[5,"ERR_load_crypto_strings","",""],[5,"EVP_md5","",""],[5,"EVP_ripemd160","",""],[5,"EVP_sha1","",""],[5,"EVP_sha224","",""],[5,"EVP_sha256","",""],[5,"EVP_sha384","",""],[5,"EVP_sha512","",""],[5,"EVP_aes_128_cbc","",""],[5,"EVP_aes_128_ecb","",""],[5,"EVP_aes_256_cbc","",""],[5,"EVP_aes_256_ecb","",""],[5,"EVP_rc4","",""],[5,"EVP_CIPHER_CTX_new","",""],[5,"EVP_CIPHER_CTX_set_padding","",""],[5,"EVP_CIPHER_CTX_free","",""],[5,"EVP_CipherInit","",""],[5,"EVP_CipherUpdate","",""],[5,"EVP_CipherFinal","",""],[5,"EVP_DigestInit","",""],[5,"EVP_DigestInit_ex","",""],[5,"EVP_DigestUpdate","",""],[5,"EVP_DigestFinal","",""],[5,"EVP_DigestFinal_ex","",""],[5,"EVP_MD_CTX_create","",""],[5,"EVP_MD_CTX_copy_ex","",""],[5,"EVP_MD_CTX_destroy","",""],[5,"EVP_PKEY_new","",""],[5,"EVP_PKEY_free","",""],[5,"EVP_PKEY_assign","",""],[5,"EVP_PKEY_get1_RSA","",""],[5,"EVP_PKEY_set1_RSA","",""],[5,"HMAC_CTX_init","",""],[5,"HMAC_Init_ex","",""],[5,"HMAC_Final","",""],[5,"HMAC_Update","",""],[5,"HMAC_CTX_cleanup","",""],[5,"HMAC_CTX_copy","",""],[5,"PEM_read_bio_X509","",""],[5,"PEM_write_bio_PrivateKey","",""],[5,"PEM_write_bio_X509","",""],[5,"PKCS5_PBKDF2_HMAC_SHA1","",""],[5,"RAND_bytes","",""],[5,"RSA_generate_key","",""],[5,"RSA_private_decrypt","",""],[5,"RSA_public_encrypt","",""],[5,"RSA_sign","",""],[5,"RSA_size","",""],[5,"RSA_verify","",""],[5,"SSL_library_init","",""],[5,"SSL_load_error_strings","",""],[5,"SSLv3_method","",""],[5,"TLSv1_method","",""],[5,"SSLv23_method","",""],[5,"SSL_new","",""],[5,"SSL_free","",""],[5,"SSL_set_bio","",""],[5,"SSL_get_rbio","",""],[5,"SSL_get_wbio","",""],[5,"SSL_accept","",""],[5,"SSL_connect","",""],[5,"SSL_ctrl","",""],[5,"SSL_get_error","",""],[5,"SSL_read","",""],[5,"SSL_write","",""],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","",""],[5,"SSL_get_SSL_CTX","",""],[5,"SSL_get_current_compression","",""],[5,"SSL_get_peer_certificate","",""],[5,"SSL_COMP_get_name","",""],[5,"SSL_CTX_new","",""],[5,"SSL_CTX_free","",""],[5,"SSL_CTX_set_verify","",""],[5,"SSL_CTX_set_verify_depth","",""],[5,"SSL_CTX_load_verify_locations","",""],[5,"SSL_CTX_get_ex_new_index","",""],[5,"SSL_CTX_set_ex_data","",""],[5,"SSL_CTX_get_ex_data","",""],[5,"SSL_CTX_use_certificate_file","",""],[5,"SSL_CTX_use_PrivateKey_file","",""],[5,"SSL_CTX_set_cipher_list","",""],[5,"X509_add_ext","",""],[5,"X509_digest","",""],[5,"X509_free","",""],[5,"X509_get_serialNumber","",""],[5,"X509_get_subject_name","",""],[5,"X509_gmtime_adj","",""],[5,"X509_new","",""],[5,"X509_set_issuer_name","",""],[5,"X509_set_notAfter","",""],[5,"X509_set_notBefore","",""],[5,"X509_set_version","",""],[5,"X509_set_pubkey","",""],[5,"X509_sign","",""],[5,"X509_EXTENSION_free","",""],[5,"X509_NAME_add_entry_by_txt","",""],[5,"X509_NAME_get_index_by_NID","",""],[5,"X509_NAME_get_entry","",""],[5,"X509_NAME_ENTRY_get_data","",""],[5,"ASN1_STRING_to_UTF8","",""],[5,"X509_STORE_CTX_get_current_cert","",""],[5,"X509_STORE_CTX_get_error","",""],[5,"X509_STORE_CTX_get_ex_data","",""],[5,"X509V3_EXT_conf_nid","",""],[5,"X509V3_set_ctx","",""],[5,"i2d_RSA_PUBKEY","",""],[5,"d2i_RSA_PUBKEY","",""],[5,"i2d_RSAPrivateKey","",""],[5,"d2i_RSAPrivateKey","",""],[0,"probe","",""],[3,"ProbeResult","openssl-sys::probe",""],[12,"cert_file","","",1],[12,"cert_dir","","",1],[5,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound."],[5,"init_ssl_cert_env_vars","",""],[5,"probe","",""],[6,"ASN1_INTEGER","openssl-sys",""],[6,"ASN1_STRING","",""],[6,"ASN1_TIME","",""],[6,"BIO","",""],[6,"BIO_METHOD","",""],[6,"BN_CTX","",""],[6,"COMP_METHOD","",""],[6,"CRYPTO_EX_DATA","",""],[6,"ENGINE","",""],[6,"EVP_CIPHER","",""],[6,"EVP_CIPHER_CTX","",""],[6,"EVP_MD","",""],[6,"EVP_PKEY","",""],[6,"EVP_PKEY_CTX","",""],[6,"RSA","",""],[6,"SSL","",""],[6,"SSL_CTX","",""],[6,"SSL_METHOD","",""],[6,"X509","",""],[6,"X509_CRL","",""],[6,"X509_EXTENSION","",""],[6,"X509_NAME","",""],[6,"X509_NAME_ENTRY","",""],[6,"X509_REQ","",""],[6,"X509_STORE_CTX","",""],[6,"CRYPTO_EX_new","",""],[6,"CRYPTO_EX_dup","",""],[6,"CRYPTO_EX_free","",""],[6,"PasswordCallback","",""],[17,"BIO_CTRL_EOF","",""],[17,"CRYPTO_LOCK","",""],[17,"MBSTRING_ASC","",""],[17,"MBSTRING_BMP","",""],[17,"MBSTRING_FLAG","",""],[17,"MBSTRING_UNIV","",""],[17,"MBSTRING_UTF8","",""],[17,"NID_ext_key_usage","",""],[17,"NID_key_usage","",""],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","",""],[17,"SSL_ERROR_NONE","",""],[17,"SSL_ERROR_SSL","",""],[17,"SSL_ERROR_SYSCALL","",""],[17,"SSL_ERROR_WANT_ACCEPT","",""],[17,"SSL_ERROR_WANT_CONNECT","",""],[17,"SSL_ERROR_WANT_READ","",""],[17,"SSL_ERROR_WANT_WRITE","",""],[17,"SSL_ERROR_WANT_X509_LOOKUP","",""],[17,"SSL_ERROR_ZERO_RETURN","",""],[17,"SSL_VERIFY_NONE","",""],[17,"SSL_VERIFY_PEER","",""],[17,"TLSEXT_NAMETYPE_host_name","",""],[17,"V_ASN1_GENERALIZEDTIME","",""],[17,"V_ASN1_UTCTIME","",""],[17,"X509_FILETYPE_ASN1","",""],[17,"X509_FILETYPE_DEFAULT","",""],[17,"X509_FILETYPE_PEM","",""],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","",""],[17,"X509_V_ERR_AKID_SKID_MISMATCH","",""],[17,"X509_V_ERR_APPLICATION_VERIFICATION","",""],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","",""],[17,"X509_V_ERR_CERT_HAS_EXPIRED","",""],[17,"X509_V_ERR_CERT_NOT_YET_VALID","",""],[17,"X509_V_ERR_CERT_REJECTED","",""],[17,"X509_V_ERR_CERT_REVOKED","",""],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","",""],[17,"X509_V_ERR_CERT_UNTRUSTED","",""],[17,"X509_V_ERR_CRL_HAS_EXPIRED","",""],[17,"X509_V_ERR_CRL_NOT_YET_VALID","",""],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","",""],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","",""],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","",""],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","",""],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","",""],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","",""],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","",""],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","",""],[17,"X509_V_ERR_EXCLUDED_VIOLATION","",""],[17,"X509_V_ERR_INVALID_CA","",""],[17,"X509_V_ERR_INVALID_EXTENSION","",""],[17,"X509_V_ERR_INVALID_NON_CA","",""],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","",""],[17,"X509_V_ERR_INVALID_PURPOSE","",""],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","",""],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","",""],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","",""],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","",""],[17,"X509_V_ERR_OUT_OF_MEM","",""],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","",""],[17,"X509_V_ERR_PERMITTED_VIOLATION","",""],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","",""],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","",""],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","",""],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","",""],[17,"X509_V_ERR_SUBTREE_MINMAX","",""],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","",""],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","",""],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","",""],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","",""],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","",""],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","",""],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","",""],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","",""],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","",""],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","",""],[17,"X509_V_ERR_UNNESTED_RESOURCE","",""],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","",""],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","",""],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","",""],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","",""],[17,"X509_V_OK","",""]],"paths":[[3,"BIGNUM"],[3,"ProbeResult"]]};

searchIndex['libz-sys'] = {"items":[],"paths":[]};

searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade."],[3,"LogRecord","","The \"payload\" of a log message."],[3,"LogLocation","","The location of a log message."],[12,"module_path","","The module path of the message.",0],[12,"file","","The source file containing the message.",0],[12,"line","","The line containing the message.",0],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter."],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called."],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework"],[13,"Error","","The \"error\" level.",1],[13,"Warn","","The \"warn\" level.",1],[13,"Info","","The \"info\" level.",1],[13,"Debug","","The \"debug\" level.",1],[13,"Trace","","The \"trace\" level.",1],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework."],[13,"Off","","A level lower than all log levels.",2],[13,"Error","","Corresponds to the `Error` log level.",2],[13,"Warn","","Corresponds to the `Warn` log level.",2],[13,"Info","","Corresponds to the `Trace` log level.",2],[13,"Debug","","Corresponds to the `Debug` log level.",2],[13,"Trace","","Corresponds to the `Trace` log level.",2],[5,"max_log_level","","Returns the current maximum log level."],[5,"set_logger","","Sets the global logger."],[5,"enabled","","Determines if the current logger will ignore a log message at the specified\nlevel from the specified module."],[5,"log","","Logs a message."],[8,"Log","","A trait encapsulating the operations required of a logger"],[10,"enabled","","Determines if a log message sent at the specified level from the\nspecified module would be logged.",3],[10,"log","","Logs the `LogRecord`.",3],[11,"fmt","","",1],[11,"clone","","",1],[11,"eq","","",1],[11,"eq","","",1],[11,"partial_cmp","","",1],[11,"partial_cmp","","",1],[11,"cmp","","",1],[6,"Err","",""],[11,"from_str","","",1],[11,"fmt","","",1],[11,"max","","Returns the most verbose logging level.",1],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",1],[11,"fmt","","",2],[11,"clone","","",2],[11,"eq","","",2],[11,"eq","","",2],[11,"partial_cmp","","",2],[11,"partial_cmp","","",2],[11,"cmp","","",2],[6,"Err","",""],[11,"from_str","","",2],[11,"fmt","","",2],[11,"max","","Returns the most verbose logging level filter.",2],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",2],[11,"new","","Creates a new `LogRecord`.",4],[11,"args","","The message body.",4],[11,"location","","The location of the log directive.",4],[11,"level","","The verbosity level of the message.",4],[11,"fmt","","",0],[11,"clone","","",0],[11,"fmt","","",5],[11,"get","","Gets the current maximum log level filter.",5],[11,"set","","Sets the maximum log level.",5],[11,"fmt","","",6],[11,"fmt","","",6],[14,"log!","","The standard logging macro."],[14,"error!","","Logs a message at the error level."],[14,"warn!","","Logs a message at the warn level."],[14,"info!","","Logs a message at the info level."],[14,"debug!","","Logs a message at the debug level."],[14,"trace!","","Logs a message at the trace level."],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged."]],"paths":[[3,"LogLocation"],[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"]]};

searchIndex['pkg-config'] = {"items":[[0,"","pkg-config",""],[3,"Options","",""],[12,"statik","","",0],[12,"atleast_version","","",0],[5,"target_supported","",""],[5,"find_library","",""],[5,"find_library_opts","",""],[5,"default_options","",""]],"paths":[[3,"Options"]]};

searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries"],[0,"types","",""],[0,"common","libc::types",""],[0,"c95","libc::types::common",""],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C."],[13,"__variant1","","",0],[13,"__variant2","","",0],[4,"FILE","",""],[4,"fpos_t","",""],[0,"c99","libc::types::common",""],[6,"int8_t","libc::types::common::c99",""],[6,"int16_t","",""],[6,"int32_t","",""],[6,"int64_t","",""],[6,"uint8_t","",""],[6,"uint16_t","",""],[6,"uint32_t","",""],[6,"uint64_t","",""],[0,"posix88","libc::types::common",""],[4,"DIR","libc::types::common::posix88",""],[4,"dirent_t","",""],[0,"os","libc::types",""],[0,"common","libc::types::os",""],[0,"posix01","libc::types::os::common",""],[3,"glob_t","libc::types::os::common::posix01",""],[12,"gl_pathc","","",1],[12,"gl_pathv","","",1],[12,"gl_offs","","",1],[12,"__unused1","","",1],[12,"__unused2","","",1],[12,"__unused3","","",1],[12,"__unused4","","",1],[12,"__unused5","","",1],[3,"timeval","",""],[12,"tv_sec","","",2],[12,"tv_usec","","",2],[3,"timespec","",""],[12,"tv_sec","","",3],[12,"tv_nsec","","",3],[4,"timezone","",""],[6,"pthread_t","",""],[6,"sighandler_t","",""],[0,"bsd44","libc::types::os::common",""],[3,"sockaddr","libc::types::os::common::bsd44",""],[12,"sa_family","","",4],[12,"sa_data","","",4],[3,"sockaddr_storage","",""],[12,"ss_family","","",5],[12,"__ss_align","","",5],[12,"__ss_pad2","","",5],[3,"sockaddr_in","",""],[12,"sin_family","","",6],[12,"sin_port","","",6],[12,"sin_addr","","",6],[12,"sin_zero","","",6],[3,"in_addr","",""],[12,"s_addr","","",7],[3,"sockaddr_in6","",""],[12,"sin6_family","","",8],[12,"sin6_port","","",8],[12,"sin6_flowinfo","","",8],[12,"sin6_addr","","",8],[12,"sin6_scope_id","","",8],[3,"in6_addr","",""],[12,"s6_addr","","",9],[3,"ip_mreq","",""],[12,"imr_multiaddr","","",10],[12,"imr_interface","","",10],[3,"ip6_mreq","",""],[12,"ipv6mr_multiaddr","","",11],[12,"ipv6mr_interface","","",11],[3,"addrinfo","",""],[12,"ai_flags","","",12],[12,"ai_family","","",12],[12,"ai_socktype","","",12],[12,"ai_protocol","","",12],[12,"ai_addrlen","","",12],[12,"ai_addr","","",12],[12,"ai_canonname","","",12],[12,"ai_next","","",12],[3,"sockaddr_un","",""],[12,"sun_family","","",13],[12,"sun_path","","",13],[3,"ifaddrs","",""],[12,"ifa_next","","",14],[12,"ifa_name","","",14],[12,"ifa_flags","","",14],[12,"ifa_addr","","",14],[12,"ifa_netmask","","",14],[12,"ifa_ifu","","",14],[12,"ifa_data","","",14],[6,"socklen_t","",""],[6,"sa_family_t","",""],[6,"in_port_t","",""],[6,"in_addr_t","",""],[0,"arch","libc::types::os",""],[0,"c95","libc::types::os::arch",""],[6,"c_char","libc::types::os::arch::c95",""],[6,"c_schar","",""],[6,"c_uchar","",""],[6,"c_short","",""],[6,"c_ushort","",""],[6,"c_int","",""],[6,"c_uint","",""],[6,"c_long","",""],[6,"c_ulong","",""],[6,"c_float","",""],[6,"c_double","",""],[6,"size_t","",""],[6,"ptrdiff_t","",""],[6,"clock_t","",""],[6,"time_t","",""],[6,"suseconds_t","",""],[6,"wchar_t","",""],[0,"c99","libc::types::os::arch",""],[6,"c_longlong","libc::types::os::arch::c99",""],[6,"c_ulonglong","",""],[6,"intptr_t","",""],[6,"uintptr_t","",""],[6,"intmax_t","",""],[6,"uintmax_t","",""],[0,"posix88","libc::types::os::arch",""],[6,"off_t","libc::types::os::arch::posix88",""],[6,"dev_t","",""],[6,"ino_t","",""],[6,"pid_t","",""],[6,"uid_t","",""],[6,"gid_t","",""],[6,"useconds_t","",""],[6,"mode_t","",""],[6,"ssize_t","",""],[0,"posix01","libc::types::os::arch",""],[3,"stat","libc::types::os::arch::posix01",""],[12,"st_dev","","",15],[12,"st_ino","","",15],[12,"st_nlink","","",15],[12,"st_mode","","",15],[12,"st_uid","","",15],[12,"st_gid","","",15],[12,"__pad0","","",15],[12,"st_rdev","","",15],[12,"st_size","","",15],[12,"st_blksize","","",15],[12,"st_blocks","","",15],[12,"st_atime","","",15],[12,"st_atime_nsec","","",15],[12,"st_mtime","","",15],[12,"st_mtime_nsec","","",15],[12,"st_ctime","","",15],[12,"st_ctime_nsec","","",15],[12,"__unused","","",15],[3,"utimbuf","",""],[12,"actime","","",16],[12,"modtime","","",16],[3,"pthread_attr_t","",""],[12,"__size","","",17],[6,"nlink_t","",""],[6,"blksize_t","",""],[6,"blkcnt_t","",""],[0,"extra","libc::types::os::arch",""],[3,"sockaddr_ll","libc::types::os::arch::extra",""],[12,"sll_family","","",18],[12,"sll_protocol","","",18],[12,"sll_ifindex","","",18],[12,"sll_hatype","","",18],[12,"sll_pkttype","","",18],[12,"sll_halen","","",18],[12,"sll_addr","","",18],[0,"consts","libc",""],[0,"os","libc::consts",""],[0,"c95","libc::consts::os",""],[17,"EXIT_FAILURE","libc::consts::os::c95",""],[17,"EXIT_SUCCESS","",""],[17,"RAND_MAX","",""],[17,"EOF","",""],[17,"SEEK_SET","",""],[17,"SEEK_CUR","",""],[17,"SEEK_END","",""],[17,"_IOFBF","",""],[17,"_IONBF","",""],[17,"_IOLBF","",""],[17,"BUFSIZ","",""],[17,"FOPEN_MAX","",""],[17,"FILENAME_MAX","",""],[17,"L_tmpnam","",""],[17,"TMP_MAX","",""],[0,"posix88","libc::consts::os",""],[17,"O_RDONLY","libc::consts::os::posix88",""],[17,"O_WRONLY","",""],[17,"O_RDWR","",""],[17,"O_APPEND","",""],[17,"O_CREAT","",""],[17,"O_EXCL","",""],[17,"O_TRUNC","",""],[17,"S_IFIFO","",""],[17,"S_IFCHR","",""],[17,"S_IFBLK","",""],[17,"S_IFDIR","",""],[17,"S_IFREG","",""],[17,"S_IFLNK","",""],[17,"S_IFMT","",""],[17,"S_IEXEC","",""],[17,"S_IWRITE","",""],[17,"S_IREAD","",""],[17,"S_IRWXU","",""],[17,"S_IXUSR","",""],[17,"S_IWUSR","",""],[17,"S_IRUSR","",""],[17,"F_OK","",""],[17,"R_OK","",""],[17,"W_OK","",""],[17,"X_OK","",""],[17,"STDIN_FILENO","",""],[17,"STDOUT_FILENO","",""],[17,"STDERR_FILENO","",""],[17,"F_LOCK","",""],[17,"F_TEST","",""],[17,"F_TLOCK","",""],[17,"F_ULOCK","",""],[17,"SIGHUP","",""],[17,"SIGINT","",""],[17,"SIGQUIT","",""],[17,"SIGILL","",""],[17,"SIGABRT","",""],[17,"SIGFPE","",""],[17,"SIGKILL","",""],[17,"SIGSEGV","",""],[17,"SIGPIPE","",""],[17,"SIGALRM","",""],[17,"SIGTERM","",""],[17,"PROT_NONE","",""],[17,"PROT_READ","",""],[17,"PROT_WRITE","",""],[17,"PROT_EXEC","",""],[17,"MAP_FILE","",""],[17,"MAP_SHARED","",""],[17,"MAP_PRIVATE","",""],[17,"MAP_FIXED","",""],[17,"MAP_ANON","",""],[17,"MAP_FAILED","",""],[17,"MCL_CURRENT","",""],[17,"MCL_FUTURE","",""],[17,"MS_ASYNC","",""],[17,"MS_INVALIDATE","",""],[17,"MS_SYNC","",""],[17,"EPERM","",""],[17,"ENOENT","",""],[17,"ESRCH","",""],[17,"EINTR","",""],[17,"EIO","",""],[17,"ENXIO","",""],[17,"E2BIG","",""],[17,"ENOEXEC","",""],[17,"EBADF","",""],[17,"ECHILD","",""],[17,"EAGAIN","",""],[17,"ENOMEM","",""],[17,"EACCES","",""],[17,"EFAULT","",""],[17,"ENOTBLK","",""],[17,"EBUSY","",""],[17,"EEXIST","",""],[17,"EXDEV","",""],[17,"ENODEV","",""],[17,"ENOTDIR","",""],[17,"EISDIR","",""],[17,"EINVAL","",""],[17,"ENFILE","",""],[17,"EMFILE","",""],[17,"ENOTTY","",""],[17,"ETXTBSY","",""],[17,"EFBIG","",""],[17,"ENOSPC","",""],[17,"ESPIPE","",""],[17,"EROFS","",""],[17,"EMLINK","",""],[17,"EPIPE","",""],[17,"EDOM","",""],[17,"ERANGE","",""],[17,"EDEADLK","",""],[17,"ENAMETOOLONG","",""],[17,"ENOLCK","",""],[17,"ENOSYS","",""],[17,"ENOTEMPTY","",""],[17,"ELOOP","",""],[17,"EWOULDBLOCK","",""],[17,"ENOMSG","",""],[17,"EIDRM","",""],[17,"ECHRNG","",""],[17,"EL2NSYNC","",""],[17,"EL3HLT","",""],[17,"EL3RST","",""],[17,"ELNRNG","",""],[17,"EUNATCH","",""],[17,"ENOCSI","",""],[17,"EL2HLT","",""],[17,"EBADE","",""],[17,"EBADR","",""],[17,"EXFULL","",""],[17,"ENOANO","",""],[17,"EBADRQC","",""],[17,"EBADSLT","",""],[17,"EDEADLOCK","",""],[17,"EBFONT","",""],[17,"ENOSTR","",""],[17,"ENODATA","",""],[17,"ETIME","",""],[17,"ENOSR","",""],[17,"ENONET","",""],[17,"ENOPKG","",""],[17,"EREMOTE","",""],[17,"ENOLINK","",""],[17,"EADV","",""],[17,"ESRMNT","",""],[17,"ECOMM","",""],[17,"EPROTO","",""],[17,"EMULTIHOP","",""],[17,"EDOTDOT","",""],[17,"EBADMSG","",""],[17,"EOVERFLOW","",""],[17,"ENOTUNIQ","",""],[17,"EBADFD","",""],[17,"EREMCHG","",""],[17,"ELIBACC","",""],[17,"ELIBBAD","",""],[17,"ELIBSCN","",""],[17,"ELIBMAX","",""],[17,"ELIBEXEC","",""],[17,"EILSEQ","",""],[17,"ERESTART","",""],[17,"ESTRPIPE","",""],[17,"EUSERS","",""],[17,"ENOTSOCK","",""],[17,"EDESTADDRREQ","",""],[17,"EMSGSIZE","",""],[17,"EPROTOTYPE","",""],[17,"ENOPROTOOPT","",""],[17,"EPROTONOSUPPORT","",""],[17,"ESOCKTNOSUPPORT","",""],[17,"EOPNOTSUPP","",""],[17,"EPFNOSUPPORT","",""],[17,"EAFNOSUPPORT","",""],[17,"EADDRINUSE","",""],[17,"EADDRNOTAVAIL","",""],[17,"ENETDOWN","",""],[17,"ENETUNREACH","",""],[17,"ENETRESET","",""],[17,"ECONNABORTED","",""],[17,"ECONNRESET","",""],[17,"ENOBUFS","",""],[17,"EISCONN","",""],[17,"ENOTCONN","",""],[17,"ESHUTDOWN","",""],[17,"ETOOMANYREFS","",""],[17,"ETIMEDOUT","",""],[17,"ECONNREFUSED","",""],[17,"EHOSTDOWN","",""],[17,"EHOSTUNREACH","",""],[17,"EALREADY","",""],[17,"EINPROGRESS","",""],[17,"ESTALE","",""],[17,"EUCLEAN","",""],[17,"ENOTNAM","",""],[17,"ENAVAIL","",""],[17,"EISNAM","",""],[17,"EREMOTEIO","",""],[17,"EDQUOT","",""],[17,"ENOMEDIUM","",""],[17,"EMEDIUMTYPE","",""],[17,"ECANCELED","",""],[17,"ENOKEY","",""],[17,"EKEYEXPIRED","",""],[17,"EKEYREVOKED","",""],[17,"EKEYREJECTED","",""],[17,"EOWNERDEAD","",""],[17,"ENOTRECOVERABLE","",""],[17,"ERFKILL","",""],[17,"EHWPOISON","",""],[0,"posix01","libc::consts::os",""],[17,"F_DUPFD","libc::consts::os::posix01",""],[17,"F_GETFD","",""],[17,"F_SETFD","",""],[17,"F_GETFL","",""],[17,"F_SETFL","",""],[17,"SIGTRAP","",""],[17,"SIGPIPE","",""],[17,"SIG_IGN","",""],[17,"GLOB_ERR","",""],[17,"GLOB_MARK","",""],[17,"GLOB_NOSORT","",""],[17,"GLOB_DOOFFS","",""],[17,"GLOB_NOCHECK","",""],[17,"GLOB_APPEND","",""],[17,"GLOB_NOESCAPE","",""],[17,"GLOB_NOSPACE","",""],[17,"GLOB_ABORTED","",""],[17,"GLOB_NOMATCH","",""],[17,"POSIX_MADV_NORMAL","",""],[17,"POSIX_MADV_RANDOM","",""],[17,"POSIX_MADV_SEQUENTIAL","",""],[17,"POSIX_MADV_WILLNEED","",""],[17,"POSIX_MADV_DONTNEED","",""],[17,"_SC_MQ_PRIO_MAX","",""],[17,"_SC_IOV_MAX","",""],[17,"_SC_GETGR_R_SIZE_MAX","",""],[17,"_SC_GETPW_R_SIZE_MAX","",""],[17,"_SC_LOGIN_NAME_MAX","",""],[17,"_SC_TTY_NAME_MAX","",""],[17,"_SC_THREADS","",""],[17,"_SC_THREAD_SAFE_FUNCTIONS","",""],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","",""],[17,"_SC_THREAD_KEYS_MAX","",""],[17,"_SC_THREAD_STACK_MIN","",""],[17,"_SC_THREAD_THREADS_MAX","",""],[17,"_SC_THREAD_ATTR_STACKADDR","",""],[17,"_SC_THREAD_ATTR_STACKSIZE","",""],[17,"_SC_THREAD_PRIORITY_SCHEDULING","",""],[17,"_SC_THREAD_PRIO_INHERIT","",""],[17,"_SC_THREAD_PRIO_PROTECT","",""],[17,"_SC_THREAD_PROCESS_SHARED","",""],[17,"_SC_ATEXIT_MAX","",""],[17,"_SC_XOPEN_VERSION","",""],[17,"_SC_XOPEN_XCU_VERSION","",""],[17,"_SC_XOPEN_UNIX","",""],[17,"_SC_XOPEN_CRYPT","",""],[17,"_SC_XOPEN_ENH_I18N","",""],[17,"_SC_XOPEN_SHM","",""],[17,"_SC_XOPEN_LEGACY","",""],[17,"_SC_XOPEN_REALTIME","",""],[17,"_SC_XOPEN_REALTIME_THREADS","",""],[17,"PTHREAD_CREATE_JOINABLE","",""],[17,"PTHREAD_CREATE_DETACHED","",""],[17,"PTHREAD_STACK_MIN","",""],[17,"CLOCK_REALTIME","",""],[17,"CLOCK_MONOTONIC","",""],[0,"bsd44","libc::consts::os",""],[17,"MADV_NORMAL","libc::consts::os::bsd44",""],[17,"MADV_RANDOM","",""],[17,"MADV_SEQUENTIAL","",""],[17,"MADV_WILLNEED","",""],[17,"MADV_DONTNEED","",""],[17,"MADV_REMOVE","",""],[17,"MADV_DONTFORK","",""],[17,"MADV_DOFORK","",""],[17,"MADV_MERGEABLE","",""],[17,"MADV_UNMERGEABLE","",""],[17,"MADV_HWPOISON","",""],[17,"IFF_LOOPBACK","",""],[17,"AF_UNIX","",""],[17,"AF_INET","",""],[17,"AF_INET6","",""],[17,"SOCK_STREAM","",""],[17,"SOCK_DGRAM","",""],[17,"SOCK_RAW","",""],[17,"IPPROTO_TCP","",""],[17,"IPPROTO_IP","",""],[17,"IPPROTO_IPV6","",""],[17,"IP_MULTICAST_TTL","",""],[17,"IP_MULTICAST_LOOP","",""],[17,"IP_TTL","",""],[17,"IP_HDRINCL","",""],[17,"IP_ADD_MEMBERSHIP","",""],[17,"IP_DROP_MEMBERSHIP","",""],[17,"IPV6_ADD_MEMBERSHIP","",""],[17,"IPV6_DROP_MEMBERSHIP","",""],[17,"TCP_NODELAY","",""],[17,"SOL_SOCKET","",""],[17,"SO_KEEPALIVE","",""],[17,"SO_BROADCAST","",""],[17,"SO_REUSEADDR","",""],[17,"SO_ERROR","",""],[17,"SHUT_RD","",""],[17,"SHUT_WR","",""],[17,"SHUT_RDWR","",""],[0,"extra","libc::consts::os",""],[17,"AF_PACKET","libc::consts::os::extra",""],[17,"IPPROTO_RAW","",""],[17,"O_RSYNC","",""],[17,"O_DSYNC","",""],[17,"O_NONBLOCK","",""],[17,"O_SYNC","",""],[17,"PROT_GROWSDOWN","",""],[17,"PROT_GROWSUP","",""],[17,"MAP_TYPE","",""],[17,"MAP_ANONYMOUS","",""],[17,"MAP_32BIT","",""],[17,"MAP_GROWSDOWN","",""],[17,"MAP_DENYWRITE","",""],[17,"MAP_EXECUTABLE","",""],[17,"MAP_LOCKED","",""],[17,"MAP_NONRESERVE","",""],[17,"MAP_POPULATE","",""],[17,"MAP_NONBLOCK","",""],[17,"MAP_STACK","",""],[0,"sysconf","libc::consts::os",""],[17,"_SC_ARG_MAX","libc::consts::os::sysconf",""],[17,"_SC_CHILD_MAX","",""],[17,"_SC_CLK_TCK","",""],[17,"_SC_NGROUPS_MAX","",""],[17,"_SC_OPEN_MAX","",""],[17,"_SC_STREAM_MAX","",""],[17,"_SC_TZNAME_MAX","",""],[17,"_SC_JOB_CONTROL","",""],[17,"_SC_SAVED_IDS","",""],[17,"_SC_REALTIME_SIGNALS","",""],[17,"_SC_PRIORITY_SCHEDULING","",""],[17,"_SC_TIMERS","",""],[17,"_SC_ASYNCHRONOUS_IO","",""],[17,"_SC_PRIORITIZED_IO","",""],[17,"_SC_SYNCHRONIZED_IO","",""],[17,"_SC_FSYNC","",""],[17,"_SC_MAPPED_FILES","",""],[17,"_SC_MEMLOCK","",""],[17,"_SC_MEMLOCK_RANGE","",""],[17,"_SC_MEMORY_PROTECTION","",""],[17,"_SC_MESSAGE_PASSING","",""],[17,"_SC_SEMAPHORES","",""],[17,"_SC_SHARED_MEMORY_OBJECTS","",""],[17,"_SC_AIO_LISTIO_MAX","",""],[17,"_SC_AIO_MAX","",""],[17,"_SC_AIO_PRIO_DELTA_MAX","",""],[17,"_SC_DELAYTIMER_MAX","",""],[17,"_SC_MQ_OPEN_MAX","",""],[17,"_SC_VERSION","",""],[17,"_SC_PAGESIZE","",""],[17,"_SC_RTSIG_MAX","",""],[17,"_SC_SEM_NSEMS_MAX","",""],[17,"_SC_SEM_VALUE_MAX","",""],[17,"_SC_SIGQUEUE_MAX","",""],[17,"_SC_TIMER_MAX","",""],[17,"_SC_BC_BASE_MAX","",""],[17,"_SC_BC_DIM_MAX","",""],[17,"_SC_BC_SCALE_MAX","",""],[17,"_SC_BC_STRING_MAX","",""],[17,"_SC_COLL_WEIGHTS_MAX","",""],[17,"_SC_EXPR_NEST_MAX","",""],[17,"_SC_LINE_MAX","",""],[17,"_SC_RE_DUP_MAX","",""],[17,"_SC_2_VERSION","",""],[17,"_SC_2_C_BIND","",""],[17,"_SC_2_C_DEV","",""],[17,"_SC_2_FORT_DEV","",""],[17,"_SC_2_FORT_RUN","",""],[17,"_SC_2_SW_DEV","",""],[17,"_SC_2_LOCALEDEF","",""],[17,"_SC_2_CHAR_TERM","",""],[17,"_SC_2_C_VERSION","",""],[17,"_SC_2_UPE","",""],[17,"_SC_XBS5_ILP32_OFF32","",""],[17,"_SC_XBS5_ILP32_OFFBIG","",""],[17,"_SC_XBS5_LPBIG_OFFBIG","",""],[0,"funcs","libc",""],[0,"c95","libc::funcs",""],[0,"ctype","libc::funcs::c95",""],[5,"isalnum","libc::funcs::c95::ctype",""],[5,"isalpha","",""],[5,"iscntrl","",""],[5,"isdigit","",""],[5,"isgraph","",""],[5,"islower","",""],[5,"isprint","",""],[5,"ispunct","",""],[5,"isspace","",""],[5,"isupper","",""],[5,"isxdigit","",""],[5,"tolower","",""],[5,"toupper","",""],[0,"stdio","libc::funcs::c95",""],[5,"fopen","libc::funcs::c95::stdio",""],[5,"freopen","",""],[5,"fflush","",""],[5,"fclose","",""],[5,"remove","",""],[5,"rename","",""],[5,"tmpfile","",""],[5,"setvbuf","",""],[5,"setbuf","",""],[5,"fgetc","",""],[5,"fgets","",""],[5,"fputc","",""],[5,"fputs","",""],[5,"puts","",""],[5,"ungetc","",""],[5,"fread","",""],[5,"fwrite","",""],[5,"fseek","",""],[5,"ftell","",""],[5,"rewind","",""],[5,"fgetpos","",""],[5,"fsetpos","",""],[5,"feof","",""],[5,"ferror","",""],[5,"perror","",""],[0,"stdlib","libc::funcs::c95",""],[5,"abs","libc::funcs::c95::stdlib",""],[5,"labs","",""],[5,"atof","",""],[5,"atoi","",""],[5,"strtod","",""],[5,"strtol","",""],[5,"strtoul","",""],[5,"calloc","",""],[5,"malloc","",""],[5,"realloc","",""],[5,"free","",""],[5,"exit","","Exits the running program in a possibly dangerous manner."],[5,"_exit","",""],[5,"atexit","",""],[5,"system","",""],[5,"getenv","",""],[5,"rand","",""],[5,"srand","",""],[0,"string","libc::funcs::c95",""],[5,"strcpy","libc::funcs::c95::string",""],[5,"strncpy","",""],[5,"strcat","",""],[5,"strncat","",""],[5,"strcmp","",""],[5,"strncmp","",""],[5,"strcoll","",""],[5,"strchr","",""],[5,"strrchr","",""],[5,"strspn","",""],[5,"strcspn","",""],[5,"strpbrk","",""],[5,"strstr","",""],[5,"strlen","",""],[5,"strerror","",""],[5,"strtok","",""],[5,"strxfrm","",""],[5,"wcslen","",""],[5,"memcmp","",""],[5,"memchr","",""],[0,"posix88","libc::funcs",""],[0,"stat_","libc::funcs::posix88",""],[5,"chmod","libc::funcs::posix88::stat_",""],[5,"fchmod","",""],[5,"fstat","",""],[5,"mkdir","",""],[5,"mkfifo","",""],[5,"stat","",""],[0,"stdio","libc::funcs::posix88",""],[5,"popen","libc::funcs::posix88::stdio",""],[5,"pclose","",""],[5,"fdopen","",""],[5,"fileno","",""],[0,"fcntl","libc::funcs::posix88",""],[5,"open","libc::funcs::posix88::fcntl",""],[5,"creat","",""],[5,"fcntl","",""],[0,"dirent","libc::funcs::posix88",""],[5,"opendir","libc::funcs::posix88::dirent",""],[5,"readdir_r","",""],[5,"closedir","",""],[5,"rewinddir","",""],[5,"seekdir","",""],[5,"telldir","",""],[0,"unistd","libc::funcs::posix88",""],[5,"access","libc::funcs::posix88::unistd",""],[5,"alarm","",""],[5,"chdir","",""],[5,"chown","",""],[5,"close","",""],[5,"dup","",""],[5,"dup2","",""],[5,"execv","",""],[5,"execve","",""],[5,"execvp","",""],[5,"fork","",""],[5,"fpathconf","",""],[5,"getcwd","",""],[5,"getegid","",""],[5,"geteuid","",""],[5,"getgid","",""],[5,"getgroups","",""],[5,"getlogin","",""],[5,"getopt","",""],[5,"getpgrp","",""],[5,"getpid","",""],[5,"getppid","",""],[5,"getuid","",""],[5,"getsid","",""],[5,"isatty","",""],[5,"link","",""],[5,"lseek","",""],[5,"pathconf","",""],[5,"pause","",""],[5,"pipe","",""],[5,"read","",""],[5,"rmdir","",""],[5,"setgid","",""],[5,"setpgid","",""],[5,"setsid","",""],[5,"setuid","",""],[5,"sleep","",""],[5,"usleep","",""],[5,"nanosleep","",""],[5,"sysconf","",""],[5,"tcgetpgrp","",""],[5,"ttyname","",""],[5,"unlink","",""],[5,"write","",""],[5,"pread","",""],[5,"pwrite","",""],[5,"utime","",""],[17,"_PC_NAME_MAX","",""],[0,"signal","libc::funcs::posix88",""],[5,"kill","libc::funcs::posix88::signal",""],[0,"mman","libc::funcs::posix88",""],[5,"mlock","libc::funcs::posix88::mman",""],[5,"munlock","",""],[5,"mlockall","",""],[5,"munlockall","",""],[5,"mmap","",""],[5,"munmap","",""],[5,"mprotect","",""],[5,"msync","",""],[5,"shm_open","",""],[5,"shm_unlink","",""],[0,"net","libc::funcs::posix88",""],[5,"if_nametoindex","libc::funcs::posix88::net",""],[0,"posix01","libc::funcs",""],[0,"stat_","libc::funcs::posix01",""],[5,"lstat","libc::funcs::posix01::stat_",""],[0,"unistd","libc::funcs::posix01",""],[5,"readlink","libc::funcs::posix01::unistd",""],[5,"fsync","",""],[5,"fdatasync","",""],[5,"setenv","",""],[5,"unsetenv","",""],[5,"putenv","",""],[5,"symlink","",""],[5,"ftruncate","",""],[0,"signal","libc::funcs::posix01",""],[5,"signal","libc::funcs::posix01::signal",""],[0,"glob","libc::funcs::posix01",""],[5,"glob","libc::funcs::posix01::glob",""],[5,"globfree","",""],[0,"mman","libc::funcs::posix01",""],[5,"posix_madvise","libc::funcs::posix01::mman",""],[0,"bsd43","libc::funcs",""],[5,"socket","libc::funcs::bsd43",""],[5,"connect","",""],[5,"bind","",""],[5,"listen","",""],[5,"accept","",""],[5,"getpeername","",""],[5,"getsockname","",""],[5,"setsockopt","",""],[5,"recv","",""],[5,"send","",""],[5,"recvfrom","",""],[5,"sendto","",""],[5,"getifaddrs","",""],[5,"freeifaddrs","",""],[5,"shutdown","",""],[0,"bsd44","libc::funcs",""],[5,"getdtablesize","libc::funcs::bsd44",""],[5,"ioctl","",""],[5,"madvise","",""],[5,"mincore","",""]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};

searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator."],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs."]],"paths":[]};

searchIndex['matches'] = {"items":[[0,"","matches",""],[14,"matches!","",""],[14,"_tt_as_expr_hack!","","Work around \"error: unexpected token: `an interpolated tt`\", whatever that means."]],"paths":[]};

initSearch(searchIndex);
